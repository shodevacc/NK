{"version":3,"sources":["webpack:///./src/components/Buy.js","webpack:///./src/pages/checkout.js","webpack:///./src/styles/buy.module.css"],"names":["Buy","pk","category","src","data","selectRef","useRef","cart","useSelector","state","isBrowser","window","dispatch","useDispatch","addItem","FilterCartProduct","CartProducts","filter","prod","id","initialState","minimumWeight","length","weight","useState","setWeight","SubmitButton","console","log","className","type","onClick","event","handleSubmit","value","target","current","preventDefault","stopPropagation","info","parseInt","price","basePrice","toFixed","AddItem","ToggleCart","newWeight","newPrice","UpdateItem","CartLoading","styles","container","productFlexImage","productFlexInfo","card","style","width","Fragment","cardHeader","cardTitle","title","description","flexColMd","color","productAddForm","onSubmit","htmlFor","onChange","e","ref","name","checkout","module","exports"],"mappings":"2FAAA,gIASe,SAASA,EAAT,GAA0C,EAA3BC,GAA2B,EAAvBC,SAAuB,EAAbC,IAAc,IAATC,EAAQ,EAARA,KAEzCC,EAAYC,iBAAO,MACnBC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAElCG,EAA4B,oBAAXC,OACjBC,EAAWC,cACbC,GAAU,EAERC,EAAmBL,GAAYH,EAAKS,aAAaC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,IAAMf,EAAKe,MAUlFC,EAAehB,EAAKiB,cACpBd,EAAKS,aAAaM,OAAS,GAAKP,EAAkBO,OAAS,IAE7DR,GAAU,EACVM,EAAeL,EAAkB,GAAGQ,QAvBiB,MAyB3BC,mBAASJ,GAA9BG,EAzBgD,KAyBxCE,EAzBwC,KA2BjDC,EAAe,WACnB,OAAIX,EAAkBO,OAAS,GAAKC,GAAUR,EAAkB,GAAGQ,QACjEI,QAAQC,IAAI,yBAEV,4BAAQC,UAAU,wBAAwBC,KAAK,UAA/C,gBAKFH,QAAQC,IAAI,oBAAqBb,GAE/B,2BACEgB,QAAS,SAAAC,GAAK,OAAIC,EAAaD,IAC/BH,UAAU,gBACVC,KAAK,SACLI,MAAM,cAMRD,EAAe,SAAAD,GAMnB,GALAL,QAAQC,IAAII,EAAOA,EAAMG,QACzBR,QAAQC,IAAIvB,EAAU+B,QAAQF,OAC9BF,EAAMK,iBACNL,EAAMM,kBAEFxB,EAAS,CAEX,IAAIyB,EAAI,iBACHnC,EADG,CAENmB,OAAQiB,SAASjB,GACjBkB,MAAOD,UACHjB,EAASnB,EAAKsC,UAAatC,EAAKiB,eAAesB,QAAQ,MAG7D/B,EAASgC,YAAQL,IAEjB3B,EAASiC,mBACJ,CACL,IAAIN,EAAO,CACTpB,GAAIf,EAAKe,GACT2B,UAAWvB,EACXwB,SAAUP,UACNjB,EAASnB,EAAKsC,UAAatC,EAAKiB,eAAesB,QAAQ,KAG7D/B,EAASoC,YAAWT,IACpB3B,EAASiC,iBAQP7B,EAAe,WACnB,OAAIT,EAAK0C,YACA,wCAGL,yBAAKpB,UAAWqB,IAAOC,WACrB,kBAAC,IAAD,CAAKtB,UAAWqB,IAAOE,iBAAkBjD,IAAKC,EAAKD,MAKnD,yBAAK0B,UAAWqB,IAAOG,iBACrB,yBAAKxB,UAAWqB,IAAOI,KAAMC,MAAO,CAAEC,MAAO,SAC3C,kBAAC,IAAMC,SAAP,KACE,yBAAK5B,UAAWqB,IAAOQ,YACrB,wBAAI7B,UAAWqB,IAAOS,WAAYvD,EAAKwD,QAEzC,2BAAIxD,EAAKyD,aACT,yBAAKhC,UAAWqB,IAAOY,WACrB,2BACE,uBAAGP,MAAO,CAAEQ,MAAO,YAAnB,UAEKxC,EAASnB,EAAKsC,UAAatC,EAAKiB,eAAesB,QAChD,IAEC,MAIT,yBAAKd,UAAWqB,IAAOc,gBACrB,0BAAMC,SAAU,kBAAMhC,MACpB,2BAAOiC,QAAQ,UACb,2CAEF,4BACEC,SAAU,SAAAC,GArC5B3C,EAAUe,SAASnC,EAAU+B,QAAQF,SAsCnBmC,IAAKhE,EACLiE,KAAK,SACLnD,GAAG,SACHe,MAAOX,GAEP,4BAAQW,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,QAEF,6BACA,6BACA,kBAACR,EAAD,aAWlB,OAAO,kBAACV,EAAD,Q,kCCvJT,wDAYeuD,UARf,WACI,OACG,kBAAC,IAAD,CAAQX,MAAM,e,qBCLrBY,EAAOC,QAAU,CAAC,UAAY,+BAA+B,iBAAmB,sCAAsC,gBAAkB,qCAAqC,eAAiB,oCAAoC,mBAAqB,wCAAwC,YAAc","file":"component---src-pages-checkout-js-134cb2687e7ebd38613b.js","sourcesContent":["import React, { useState, useRef } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { AddItem, UpdateItem } from \"../Redux/actions/CartActions\"\n// import { addCartProduct, UpdateItem } from '../Redux/actions/CartActions'\n// import { BuyImage } from \"../../Images\"\nimport Img from \"./BuyImages\"\nimport { ToggleCart } from \"../Redux/actions/ToggleCart\"\nimport styles from \"../styles/buy.module.css\"\n\nexport default function Buy({ pk, category, src, data }) {\n\n  const selectRef = useRef(null)\n  const cart = useSelector(state => state.cart)\n  // const quantity=useState(3)\n  const isBrowser=typeof window !== 'undefined'\n  const dispatch = useDispatch()\n  var addItem = true //Check if whether to update or add item\n  //Check if the product is already in the cart\n  const FilterCartProduct =isBrowser&& cart.CartProducts.filter(prod => prod.id == data.id)\n  // console.log(\"FILTERED\",FilterCartProduct, Array.isArray(cart.CartProducts))\n  const CurrentProduct = {\n    title: \"chicken\",\n    weight: \"500\",\n    serves: \"2\",\n    price: 10,\n    category: \"CHICKEN\",\n  }\n  //   const CurrentProduct = product.products.filter(item => item.id == pk)[0]\n  var initialState = data.minimumWeight\n  if (cart.CartProducts.length > 0 && FilterCartProduct.length > 0) {\n    //if product exists in cart\n    addItem = false\n    initialState = FilterCartProduct[0].weight\n  }\n  const [weight, setWeight] = useState(initialState)\n\n  const SubmitButton = () => {\n    if (FilterCartProduct.length > 0 && weight == FilterCartProduct[0].weight) {\n      console.log(\"ITEMS ARE NOT CHANGED\")\n      return (\n        <button className=\"logo-red-btn-disabled\" type=\"submit\">\n          No Changes\n        </button>\n      )\n    } else {\n      console.log(\"ITEMS ARE CHANGED\", FilterCartProduct)\n      return (\n        <input\n          onClick={event => handleSubmit(event)}\n          className=\"logo-red-btn \"\n          type=\"submit\"\n          value=\"confirm\"\n        />\n      )\n    }\n  }\n\n  const handleSubmit = event => {\n    console.log(event, event.target)\n    console.log(selectRef.current.value)\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (addItem) {\n      //Check if item needs to be updaed or added\n      let info = {\n        ...data,\n        weight: parseInt(weight),\n        price: parseInt(\n          ((weight * data.basePrice) / data.minimumWeight).toFixed(2)\n        ),\n      }\n      dispatch(AddItem(info))\n      //   dispatch(addCartProduct([info]))\n      dispatch(ToggleCart())\n    } else {\n      let info = {\n        id: data.id,\n        newWeight: weight,\n        newPrice: parseInt(\n          ((weight * data.basePrice) / data.minimumWeight).toFixed(2)\n        ),\n      }\n      dispatch(UpdateItem(info))\n      dispatch(ToggleCart())\n    }\n  }\n\n  //When new weight is selected\n  const handleChange = e => {\n    setWeight(parseInt(selectRef.current.value))\n  }\n  const CartProducts = () => {\n    if (cart.CartLoading) {\n      return <div>Loading</div>\n    } else {\n      return (\n        <div className={styles.container}>\n          <Img className={styles.productFlexImage} src={data.src} />\n          {/* <BuyImage\n              category={CurrentProduct.category}\n              title={CurrentProduct.title}\n            /> */}\n          <div className={styles.productFlexInfo}>\n            <div className={styles.card} style={{ width: \"100%\" }}>\n              <React.Fragment>\n                <div className={styles.cardHeader}>\n                  <h5 className={styles.cardTitle}>{data.title}</h5>\n                </div>\n                <p>{data.description}</p>\n                <div className={styles.flexColMd}>\n                  <p>\n                    <b style={{ color: \"#f9090a\" }}>\n                      MRP: â‚¹\n                      {((weight * data.basePrice) / data.minimumWeight).toFixed(\n                        2\n                      )}\n                    </b>{\" \"}\n                  </p>\n                </div>\n\n                <div className={styles.productAddForm}>\n                  <form onSubmit={() => handleSubmit()}>\n                    <label htmlFor=\"weight\">\n                      <b>Net Weight:</b>\n                    </label>\n                    <select\n                      onChange={e => handleChange(e)}\n                      ref={selectRef}\n                      name=\"weight\"\n                      id=\"weight\"\n                      value={weight}\n                    >\n                      <option value=\"3\">3kg</option>\n                      <option value=\"4\">4kg</option>\n                      <option value=\"5\">5kg</option>\n                      <option value=\"6\">6kg</option>\n                    </select>\n                    <br />\n                    <br />\n                    <SubmitButton />\n                  </form>\n                </div>\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return <CartProducts />\n}\n","import React from \"react\"\nimport Buy from \"../components/Buy\"\nimport Layout from \"../components/layout\"\n\nfunction checkout() {\n    return (\n       <Layout title=\"checkout\">\n\n       </Layout>\n    )\n}\n\nexport default checkout\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"buy-module--container--3IfgP\",\"productFlexImage\":\"buy-module--productFlexImage--2aoqT\",\"productFlexInfo\":\"buy-module--productFlexInfo--2fZF8\",\"productAddForm\":\"buy-module--productAddForm--27B9w\",\"productButtonGroup\":\"buy-module--productButtonGroup--3BEMi\",\"groupButton\":\"buy-module--groupButton--z-apE\"};"],"sourceRoot":""}