{"version":3,"sources":["webpack:///./src/pages/mutton.js","webpack:///./src/components/BuyImages.js","webpack:///./src/components/Buy.js","webpack:///./src/styles/buy.module.css"],"names":["mutton","title","data","price","description","minimumWeight","src","Image","className","id","style","reference","useStaticQuery","filteredData","key","HomeImages","edges","forEach","edge","node","name","childImageSharp","fluid","ref","Buy","pk","category","console","log","selectRef","useRef","cart","useSelector","state","dispatch","useDispatch","addItem","FilterCartProduct","CartProducts","filter","prod","CurrentProduct","weight","serves","length","quantity","useState","setQuantity","SubmitButton","type","onClick","event","handleSubmit","value","target","current","preventDefault","stopPropagation","Number","ToggleCart","CartLoading","styles","container","productFlexImage","productFlexInfo","card","width","Fragment","cardHeader","cardTitle","flexColMd","color","toFixed","productAddForm","onSubmit","for","onChange","e","parseInt","module","exports"],"mappings":"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","file":"component---src-pages-mutton-js-6a3f0302487f89d35c12.js","sourcesContent":["import React from \"react\"\nimport Buy from \"../components/Buy\"\nimport Layout from \"../components/layout\"\n\nfunction mutton() {\n    var data = {\n        title: \"Mutton Biryani\",\n        price: 100,\n        description: \"This is the mutton biryani\",\n        minimumWeight:3,\n        src:\"mutton\"\n      }\n  return (\n      <Layout title=\"mutton biryani\">\n         <Buy data={data} />\n      </Layout>\n    \n  )\n}\n\nexport default mutton\n","import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst Image = ({ className, src, id, style, reference }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      HomeImages: allFile(\n        filter: {\n          sourceInstanceName: { eq: \"images\" }\n          relativeDirectory: { eq: \"Buy\" }\n        }\n      ) {\n        edges {\n          node {\n            name\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const filteredData = {}\n  data.HomeImages.edges.forEach(edge => {\n    filteredData[edge.node.name] = edge.node.childImageSharp.fluid\n  })\n  for (const key in filteredData) {\n    // console.log(src, key)\n    if (src == key) {\n      return (\n        <Img\n          ref={reference}\n          style={style}\n          id={id}\n          className={className}\n          fluid={filteredData[key]}\n        />\n      )\n    }\n  }\n  return <div></div>\n}\n\nexport default Image","import React, { useState, useRef } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\n// import { addCartProduct, UpdateItem } from '../Redux/actions/CartActions'\n// import { BuyImage } from \"../../Images\"\nimport Img from \"./BuyImages\"\nimport { ToggleCart } from \"../Redux/actions/ToggleCart\"\nimport styles from \"../styles/buy.module.css\"\n\nexport default function Buy({ pk, category, src, data }) {\n  console.log(\"RENDERING Buy\")\n  const selectRef = useRef(null)\n  const cart = useSelector(state => state.cart)\n  // const quantity=useState(3)\n  const dispatch = useDispatch()\n  var addItem = true //Check if whether to update or add item\n  const FilterCartProduct = cart.CartProducts.filter(prod => prod.id == pk)\n  const CurrentProduct = {\n    title: \"chicken\",\n    weight: \"500\",\n    serves: \"2\",\n    price: 10,\n    category: \"CHICKEN\",\n  }\n  //   const CurrentProduct = product.products.filter(item => item.id == pk)[0]\n  var initialState = 3\n  if (cart.CartProducts.length > 0 && FilterCartProduct.length > 0) {\n    //if product exists in cart\n    addItem = false\n    initialState = FilterCartProduct[0].quantity\n  } else {\n    initialState = 1\n  }\n  const [quantity, setQuantity] = useState(3)\n\n  const SubmitButton = () => {\n    if (\n      FilterCartProduct.length > 0 &&\n      quantity == FilterCartProduct[0].quantity\n    ) {\n      return (\n        <button className=\"logo-red-btn-disabled\" type=\"submit\">\n          No Changes\n        </button>\n      )\n    } else {\n      return (\n        <input\n          onClick={event => handleSubmit(event)}\n          className=\"logo-red-btn \"\n          type=\"submit\"\n          value=\"confirm\"\n        />\n      )\n    }\n  }\n\n  const handleSubmit = event => {\n    console.log(event, event.target)\n    console.log(selectRef.current.value)\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (addItem) {\n      const info = {\n        id: Number(CurrentProduct.id),\n        title: CurrentProduct.title,\n        quantity: quantity,\n        weight: CurrentProduct.weight,\n        serves: CurrentProduct.serves,\n        category: CurrentProduct.category,\n        price: quantity * CurrentProduct.price,\n      }\n      //   dispatch(addCartProduct([info]))\n      dispatch(ToggleCart())\n    } else {\n      //   dispatch(UpdateItem(Number(CurrentProduct.id), quantity))\n      dispatch(ToggleCart())\n    }\n  }\n\n  const handleChange = e => {\n    setQuantity(parseInt(selectRef.current.value))\n  }\n  const CartProducts = () => {\n    if (cart.CartLoading) {\n      return <div>Loading</div>\n    } else {\n      return (\n        <div className={styles.container}>\n          <Img className={styles.productFlexImage} src={data.src} />\n          {/* <BuyImage\n              category={CurrentProduct.category}\n              title={CurrentProduct.title}\n            /> */}\n          <div className={styles.productFlexInfo}>\n            <div className={styles.card} style={{ width: \"100%\" }}>\n              <React.Fragment>\n                <div className={styles.cardHeader}>\n                  <h5 className={styles.cardTitle}>{data.title}</h5>\n                </div>\n                <p>{data.description}</p>\n                <div className={styles.flexColMd}>\n                  <p>\n                    <b style={{ color: \"#f9090a\" }}>\n                      MRP: â‚¹\n                      {((quantity * data.price) / data.minimumWeight).toFixed(\n                        2\n                      )}\n                    </b>{\" \"}\n                  </p>\n                  <p>\n                    <b>Net: {data.weight} kg</b>{\" \"}\n                  </p>\n                </div>\n\n                <div className={styles.productAddForm}>\n                  <form onSubmit={() => handleSubmit()}>\n                    <label for=\"weight\">Net Weight</label>\n                    <select\n                      onChange={e => handleChange(e)}\n                      ref={selectRef}\n                      name=\"weight\"\n                      id=\"weight\"\n                      value={quantity}\n                    >\n                      <option value=\"3\">3kg</option>\n                      <option value=\"4\">4kg</option>\n                      <option value=\"5\">5kg</option>\n                      <option value=\"6\">6kg</option>\n                    </select>\n                    <br />\n                    <br />\n                    <SubmitButton />\n                  </form>\n                </div>\n              </React.Fragment>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return <CartProducts />\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"buy-module--container--3IfgP\",\"productFlexImage\":\"buy-module--productFlexImage--2aoqT\",\"productFlexInfo\":\"buy-module--productFlexInfo--2fZF8\",\"productAddForm\":\"buy-module--productAddForm--27B9w\",\"productButtonGroup\":\"buy-module--productButtonGroup--3BEMi\",\"groupButton\":\"buy-module--groupButton--z-apE\"};"],"sourceRoot":""}