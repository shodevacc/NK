{"version":3,"sources":["webpack:///./node_modules/flubber/build/flubber.min.js","webpack:///./src/styles/washing.module.css","webpack:///./src/images/BiryaniShowCase.png","webpack:///./src/styles/mandala.module.css","webpack:///./src/styles/testimonialCard.module.css","webpack:///./src/images/mutton.png","webpack:///./src/images/center-decoration.png","webpack:///./src/styles/ProductList.module.css","webpack:///./src/components/Showcase.js","webpack:///./src/components/Mandala.js","webpack:///./src/components/About.js","webpack:///./src/components/Cauldron.js","webpack:///./src/components/Cauldron1.js","webpack:///./src/components/Washing.js","webpack:///./src/components/Intro.js","webpack:///./src/components/ProductCard.js","webpack:///./src/components/TextDivider.js","webpack:///./src/components/ProductList.js","webpack:///./src/components/TestimonialCard.js","webpack:///./src/components/Testimonial.js","webpack:///./src/pages/index.js","webpack:///./src/styles/about.module.css","webpack:///./src/styles/cauldron1.module.css","webpack:///./src/styles/textDivider.module.css","webpack:///./src/styles/testimonial.module.css","webpack:///./src/images/InfoBG.jpg","webpack:///./src/images/txtBorder.jpg","webpack:///./src/images/gatsby-astronaut.png","webpack:///./src/styles/showcase.module.css","webpack:///./src/styles/productCard.module.css","webpack:///./src/images/corner-decoration.jpeg","webpack:///./src/styles/cauldron.module.css","webpack:///./src/styles/intro.module.css"],"names":["t","n","an","indexOf","r","i","a","this","index","path","max","length","result","param","err","segmentStart","data","o","charCodeAt","s","e","h","u","parseFloat","slice","toLowerCase","push","concat","rn","splice","c","f","queue","cache","l","Math","sqrt","acos","p","g","v","x","y","d","m","M","w","b","L","A","q","k","P","ln","tan","cos","sin","rx","ry","ax","on","segments","__stack","getArcLength","_","getPoint","getDerivative","init","abs","pow","log","qn","Array","Ln","An","E","C","Z","Pn","forEach","bn","getTotalLength","partialLengths","curves","T","x0","x1","y0","y1","F","z","I","map","V","H","X","isFinite","Y","G","nn","O","yn","D","toString","split","trim","filter","join","Q","ring","U","TypeError","Cn","window","document","createElementNS","setAttributeNS","Sn","B","ceil","getPointAtLength","skipBisect","R","W","en","J","isArray","every","K","j","pop","tn","reverse","$","tt","Tn","nt","et","next","steiner","xt","sort","ct","ft","rt","ut","it","Et","kt","Mt","Pt","mt","prev","vt","prevZ","nextZ","gt","pt","ot","at","st","ht","yt","wt","Lt","dt","qt","lt","bt","At","_t","St","id","bbox","properties","Ct","type","geometry","Vn","In","transform","arcs","geometries","coordinates","Tt","Zt","Yn","Yt","maxSegmentLength","string","single","Qn","Dt","match","t0","t1","Un","Ht","Rt","atan2","PI","Bt","Jt","Qt","$t","Wt","Kt","prototype","matrix","translate","scale","rotate","skewX","skewY","toArray","calc","sn","hn","un","cn","gn","atan","isDegenerate","vn","__matrix","iterate","__evaluateStack","replace","fn","round","toFixed","toUpperCase","rel","unarc","pn","unshort","dn","mn","Mn","wn","Number","unshift","Error","constructor","getTangentAtLength","getPropertiesAtLength","tangentX","tangentY","kn","S","_n","En","fraction","Zn","apply","zn","deviation","flatten","vertices","holes","dimensions","jn","Xn","features","start","end","Gn","On","LineString","MultiLineString","Polygon","MultiPolygon","Dn","NaN","Hn","Ft","left","right","objects","triangles","area","shift","RangeError","jt","zt","reduce","It","Xt","Vt","interpolate","separate","combine","interpolateAll","splitPathString","toPathString","fromCircle","toCircle","fromRect","toRect","Object","defineProperty","value","exports","module","Showcase","imageSources","className","styles","image","src","useState","sourceIndex","setSourceIndex","useEffect","changeImg","setInterval","imgElement","querySelector","assign","style","opacity","setTimeout","state","clearInterval","container","info","Mandala","About","Fragment","stackTop","outerborder","middleBorder","innerBorder","topLeft","corner","topRight","bottomLeft","bottomRight","centerTop","center","centerBottom","Mandala3","cardTitle","textAlign","stackBottom","InfoBackgroundHeight","Cauldron","Cauldron1","cauldron","viewBox","fill","xmlns","stick","fire","smoke2","smoke3","smoke1","Washing","Intro","bg","ProductCard","productInfo","dir","circleStyle","card","useRef","setPointer","scrollMove","setScrollMove","title","moveCard","xAxis","yAxis","current","popout","zTranslate","product","handleScroll","CurrentContainer","CurrentCard","containerDetails","getBoundingClientRect","pointerEvents","transition","innerHeight","top","querySelectorAll","img","num","handleMouseMove","containerRect","innerWidth","pageX","pageYOffset","pageY","height","handleTouchMove","preventDefault","changedTouches","handleMouseEnter","handleTouchStart","handleTouchEnd","handleLeave","addEventListener","removeEventListener","ref","circle","color","order","to","link","TextDivider","children","Divider","width","fill-rule","clip-rule","ProductList","products","Wave","wave","fillOpacity","wave1","wave2","position","chicken","smallScreen","background","mutton","bigScreen","TestimonialCard","details","padding","imgContainer","imgTitle","Testimonial","setIndex","stop","touchPos","setTouchPos","props","useSpring","console","clientX","TouchEnd","distanceMoved","timer","cardContainer","div","item","buttons","onClick","IndexPage","price"],"mappings":"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mB,mBAAoB,EAAE,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,EAAE,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,EAAE,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,kBAAmB,mBAAoB,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,EAAE,mBAAoB,oBAAqB,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,EAAE,mBAAoB,oBAAqB,kBAAmB,mBAAoB,mBAAoB,oBAAqB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,EAAE,kBAAmB,mBAAoB,kBAAmB,mBAAoB,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,mBAAoB,oBAAqB,mBAAoB,oBAAqB,mBAAoB,oBAAqB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,gBAAiB,iBAAkB,kBAAmB,mBAAoB,EAAE,mBAAoB,oBAAqB,mBAAoB,oBAAqB,mBAAoB,oBAAqB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,EAAE,mBAAoB,oBAAqB,mBAAoB,oBAAqB,mBAAoB,oBAAqB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,CAAC,GAAI,kBAAmB,mBAAoB,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,EAAE,mBAAoB,oBAAqB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,iBAAkB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,mBAAoB,kBAAmB,oBACvkLC,GAAK,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,kBAAmB,kBAAmB,mBAAoB,CAAC,kBAAmB,kBAAmB,mBAAoB,oBAAqB,CAAC,kBAAmB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,kBAAmB,mBAAoB,CAAC,iBAAkB,iBAAkB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,oBAAqB,CAAC,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,oBAAqB,CAAC,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,kBAAmB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,CAAC,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,oBAAqB,oBAAqB,qBAAsB,CAAC,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,oBAAqB,CAAC,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,oBAAqB,CAAC,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,gBAAiB,gBAAiB,mBAAoB,mBAAoB,kBAAmB,kBAAmB,oBAAqB,qBAAsB,CAAC,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,oBAAqB,qBAAsB,CAAC,mBAAoB,mBAAoB,mBAAoB,mBAAoB,mBAAoB,m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","file":"component---src-pages-index-js-a8d7ef6b7f7c07ec0377.js","sourcesContent":["require(\"core-js/modules/es.array.reduce.js\");\n\n!function (t, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? n(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], n) : n(t.flubber = t.flubber || {});\n}(this, function (t) {\n  \"use strict\";\n\n  function n(t) {\n    return 10 === t || 13 === t || 8232 === t || 8233 === t || 32 === t || 9 === t || 11 === t || 12 === t || 160 === t || t >= 5760 && an.indexOf(t) >= 0;\n  }\n\n  function e(t) {\n    switch (32 | t) {\n      case 109:\n      case 122:\n      case 108:\n      case 104:\n      case 118:\n      case 99:\n      case 115:\n      case 113:\n      case 116:\n      case 97:\n      case 114:\n        return !0;\n    }\n\n    return !1;\n  }\n\n  function r(t) {\n    return t >= 48 && t <= 57;\n  }\n\n  function i(t) {\n    return t >= 48 && t <= 57 || 43 === t || 45 === t || 46 === t;\n  }\n\n  function a(t) {\n    this.index = 0, this.path = t, this.max = t.length, this.result = [], this.param = 0, this.err = \"\", this.segmentStart = 0, this.data = [];\n  }\n\n  function o(t) {\n    for (; t.index < t.max && n(t.path.charCodeAt(t.index));) {\n      t.index++;\n    }\n  }\n\n  function s(t) {\n    var n,\n        e = t.index,\n        i = e,\n        a = t.max,\n        o = !1,\n        s = !1,\n        h = !1,\n        u = !1;\n    if (i >= a) return void (t.err = \"SvgPath: missed param (at pos \" + i + \")\");\n    if (n = t.path.charCodeAt(i), 43 !== n && 45 !== n || (i++, n = i < a ? t.path.charCodeAt(i) : 0), !r(n) && 46 !== n) return void (t.err = \"SvgPath: param should start with 0..9 or `.` (at pos \" + i + \")\");\n\n    if (46 !== n) {\n      if (o = 48 === n, i++, n = i < a ? t.path.charCodeAt(i) : 0, o && i < a && n && r(n)) return void (t.err = \"SvgPath: numbers started with `0` such as `09` are ilegal (at pos \" + e + \")\");\n\n      for (; i < a && r(t.path.charCodeAt(i));) {\n        i++, s = !0;\n      }\n\n      n = i < a ? t.path.charCodeAt(i) : 0;\n    }\n\n    if (46 === n) {\n      for (u = !0, i++; r(t.path.charCodeAt(i));) {\n        i++, h = !0;\n      }\n\n      n = i < a ? t.path.charCodeAt(i) : 0;\n    }\n\n    if (101 === n || 69 === n) {\n      if (u && !s && !h) return void (t.err = \"SvgPath: invalid float exponent (at pos \" + i + \")\");\n      if (i++, n = i < a ? t.path.charCodeAt(i) : 0, 43 !== n && 45 !== n || i++, !(i < a && r(t.path.charCodeAt(i)))) return void (t.err = \"SvgPath: invalid float exponent (at pos \" + i + \")\");\n\n      for (; i < a && r(t.path.charCodeAt(i));) {\n        i++;\n      }\n    }\n\n    t.index = i, t.param = parseFloat(t.path.slice(e, i)) + 0;\n  }\n\n  function h(t) {\n    var n, e;\n    n = t.path[t.segmentStart], e = n.toLowerCase();\n    var r = t.data;\n    if (\"m\" === e && r.length > 2 && (t.result.push([n, r[0], r[1]]), r = r.slice(2), e = \"l\", n = \"m\" === n ? \"l\" : \"L\"), \"r\" === e) t.result.push([n].concat(r));else for (; r.length >= rn[e] && (t.result.push([n].concat(r.splice(0, rn[e]))), rn[e]);) {\n      ;\n    }\n  }\n\n  function u(t) {\n    var n,\n        r,\n        a,\n        u,\n        c = t.max;\n    if (t.segmentStart = t.index, n = t.path.charCodeAt(t.index), !e(n)) return void (t.err = \"SvgPath: bad command \" + t.path[t.index] + \" (at pos \" + t.index + \")\");\n    if (a = rn[t.path[t.index].toLowerCase()], t.index++, o(t), t.data = [], !a) return void h(t);\n\n    for (r = !1;;) {\n      for (u = a; u > 0; u--) {\n        if (s(t), t.err.length) return;\n        t.data.push(t.param), o(t), r = !1, t.index < c && 44 === t.path.charCodeAt(t.index) && (t.index++, o(t), r = !0);\n      }\n\n      if (!r) {\n        if (t.index >= t.max) break;\n        if (!i(t.path.charCodeAt(t.index))) break;\n      }\n    }\n\n    h(t);\n  }\n\n  function c(t, n) {\n    return [t[0] * n[0] + t[2] * n[1], t[1] * n[0] + t[3] * n[1], t[0] * n[2] + t[2] * n[3], t[1] * n[2] + t[3] * n[3], t[0] * n[4] + t[2] * n[5] + t[4], t[1] * n[4] + t[3] * n[5] + t[5]];\n  }\n\n  function f() {\n    if (!(this instanceof f)) return new f();\n    this.queue = [], this.cache = null;\n  }\n\n  function l(t, n, e, r) {\n    var i = t * r - n * e < 0 ? -1 : 1,\n        a = Math.sqrt(t * t + n * n),\n        o = Math.sqrt(t * t + n * n),\n        s = t * e + n * r,\n        h = s / (a * o);\n    return h > 1 && (h = 1), h < -1 && (h = -1), i * Math.acos(h);\n  }\n\n  function p(t, n, e, r, i, a, o, s, h, u) {\n    var c = u * (t - e) / 2 + h * (n - r) / 2,\n        f = -h * (t - e) / 2 + u * (n - r) / 2,\n        p = o * o,\n        g = s * s,\n        v = c * c,\n        x = f * f,\n        y = p * g - p * x - g * v;\n    y < 0 && (y = 0), y /= p * x + g * v, y = Math.sqrt(y) * (i === a ? -1 : 1);\n    var d = y * o / s * f,\n        m = y * -s / o * c,\n        M = u * d - h * m + (t + e) / 2,\n        w = h * d + u * m + (n + r) / 2,\n        b = (c - d) / o,\n        L = (f - m) / s,\n        A = (-c - d) / o,\n        q = (-f - m) / s,\n        k = l(1, 0, b, L),\n        P = l(b, L, A, q);\n    return 0 === a && P > 0 && (P -= ln), 1 === a && P < 0 && (P += ln), [M, w, k, P];\n  }\n\n  function g(t, n) {\n    var e = 4 / 3 * Math.tan(n / 4),\n        r = Math.cos(t),\n        i = Math.sin(t),\n        a = Math.cos(t + n),\n        o = Math.sin(t + n);\n    return [r, i, r - i * e, i + r * e, a + o * e, o - a * e, a, o];\n  }\n\n  function v(t, n, e) {\n    if (!(this instanceof v)) return new v(t, n, e);\n    this.rx = t, this.ry = n, this.ax = e;\n  }\n\n  function x(t) {\n    if (!(this instanceof x)) return new x(t);\n    var n = on(t);\n    this.segments = n.segments, this.err = n.err, this.__stack = [];\n  }\n\n  function y(t) {\n    var n = t.match(wn);\n    return n ? n.map(Number) : [];\n  }\n\n  function d(t, n, e, r, i, a, o, s) {\n    this.a = {\n      x: t,\n      y: n\n    }, this.b = {\n      x: e,\n      y: r\n    }, this.c = {\n      x: i,\n      y: a\n    }, this.d = {\n      x: o,\n      y: s\n    }, null !== o && void 0 !== o && null !== s && void 0 !== s ? (this.getArcLength = _, this.getPoint = L, this.getDerivative = M) : (this.getArcLength = A, this.getPoint = b, this.getDerivative = m), this.init();\n  }\n\n  function m(t, n, e) {\n    return {\n      x: 2 * (1 - e) * (t[1] - t[0]) + 2 * e * (t[2] - t[1]),\n      y: 2 * (1 - e) * (n[1] - n[0]) + 2 * e * (n[2] - n[1])\n    };\n  }\n\n  function M(t, n, e) {\n    return b([3 * (t[1] - t[0]), 3 * (t[2] - t[1]), 3 * (t[3] - t[2])], [3 * (n[1] - n[0]), 3 * (n[2] - n[1]), 3 * (n[3] - n[2])], e);\n  }\n\n  function w(t, n, e, r, i) {\n    for (var a = 1, o = t / n, s = (t - e(r, i, o)) / n; a > .001;) {\n      var h = e(r, i, o + s),\n          u = e(r, i, o - s),\n          c = Math.abs(t - h) / n,\n          f = Math.abs(t - u) / n;\n      c < a ? (a = c, o += s) : f < a ? (a = f, o -= s) : s /= 2;\n    }\n\n    return o;\n  }\n\n  function b(t, n, e) {\n    return {\n      x: (1 - e) * (1 - e) * t[0] + 2 * (1 - e) * e * t[1] + e * e * t[2],\n      y: (1 - e) * (1 - e) * n[0] + 2 * (1 - e) * e * n[1] + e * e * n[2]\n    };\n  }\n\n  function L(t, n, e) {\n    return {\n      x: (1 - e) * (1 - e) * (1 - e) * t[0] + 3 * (1 - e) * (1 - e) * e * t[1] + 3 * (1 - e) * e * e * t[2] + e * e * e * t[3],\n      y: (1 - e) * (1 - e) * (1 - e) * n[0] + 3 * (1 - e) * (1 - e) * e * n[1] + 3 * (1 - e) * e * e * n[2] + e * e * e * n[3]\n    };\n  }\n\n  function A(t, n, e) {\n    void 0 === e && (e = 1);\n    var r = t[0] - 2 * t[1] + t[2],\n        i = n[0] - 2 * n[1] + n[2],\n        a = 2 * t[1] - 2 * t[0],\n        o = 2 * n[1] - 2 * n[0],\n        s = 4 * (r * r + i * i),\n        h = 4 * (r * a + i * o),\n        u = a * a + o * o;\n    if (0 === s) return e * Math.sqrt(Math.pow(t[2] - t[0], 2) + Math.pow(n[2] - n[0], 2));\n    var c = h / (2 * s),\n        f = u / s,\n        l = e + c,\n        p = f - c * c;\n    return Math.sqrt(s) / 2 * (l * Math.sqrt(l * l + p) - c * Math.sqrt(c * c + p) + p * Math.log(Math.abs((l + Math.sqrt(l * l + p)) / (c + Math.sqrt(c * c + p)))));\n  }\n\n  function q(t, n) {\n    return qn[t][n];\n  }\n\n  function k(t, n, e) {\n    var r,\n        i,\n        a,\n        o = e.length - 1;\n    if (0 === o) return 0;\n\n    if (0 === t) {\n      for (i = 0, a = 0; a <= o; a++) {\n        i += q(o, a) * Math.pow(1 - n, o - a) * Math.pow(n, a) * e[a];\n      }\n\n      return i;\n    }\n\n    for (r = new Array(o), a = 0; a < o; a++) {\n      r[a] = o * (e[a + 1] - e[a]);\n    }\n\n    return k(t - 1, n, r);\n  }\n\n  function P(t, n, e) {\n    var r = k(1, e, t),\n        i = k(1, e, n),\n        a = r * r + i * i;\n    return Math.sqrt(a);\n  }\n\n  function _(t, n, e) {\n    var r, i, a, o;\n    void 0 === e && (e = 1);\n\n    for (r = e / 2, i = 0, a = 0; a < 20; a++) {\n      o = r * Ln[20][a] + r, i += An[20][a] * P(t, n, o);\n    }\n\n    return r * i;\n  }\n\n  function E(t, n, e, r) {\n    var i = t * r - n * e < 0 ? -1 : 1,\n        a = t * e + n * r;\n    return a > 1 && (a = 1), a < -1 && (a = -1), i * Math.acos(a);\n  }\n\n  function S(t, n, e, r, i, a, o, s, h, u) {\n    var c = u * (t - e) / 2 + h * (n - r) / 2,\n        f = -h * (t - e) / 2 + u * (n - r) / 2,\n        l = o * o,\n        p = s * s,\n        g = c * c,\n        v = f * f,\n        x = l * p - l * v - p * g;\n    x < 0 && (x = 0), x /= l * v + p * g, x = Math.sqrt(x) * (i === a ? -1 : 1);\n    var y = x * o / s * f,\n        d = x * -s / o * c,\n        m = u * y - h * d + (t + e) / 2,\n        M = h * y + u * d + (n + r) / 2,\n        w = (c - y) / o,\n        b = (f - d) / s,\n        L = (-c - y) / o,\n        A = (-f - d) / s,\n        q = E(1, 0, w, b),\n        k = E(w, b, L, A);\n    return 0 === a && k > 0 && (k -= kn), 1 === a && k < 0 && (k += kn), [m, M, q, k];\n  }\n\n  function C(t, n) {\n    var e = 4 / 3 * Math.tan(n / 4),\n        r = Math.cos(t),\n        i = Math.sin(t),\n        a = Math.cos(t + n),\n        o = Math.sin(t + n);\n    return [r, i, r - i * e, i + r * e, a + o * e, o - a * e, a, o];\n  }\n\n  function Z(t, n, e, r, i, a, o, s, h) {\n    var u = 0,\n        c = [],\n        f = [];\n    Pn(t, n, e, r, i, a, o, s, h).forEach(function (t) {\n      var n = new bn(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7]),\n          e = n.getTotalLength();\n      u += e, c.push(e), f.push(n);\n    }), this.length = u, this.partialLengths = c, this.curves = f;\n  }\n\n  function T(t, n, e, r) {\n    this.x0 = t, this.x1 = n, this.y0 = e, this.y1 = r;\n  }\n\n  function F(t, n) {\n    return Math.sqrt((t[0] - n[0]) * (t[0] - n[0]) + (t[1] - n[1]) * (t[1] - n[1]));\n  }\n\n  function z(t, n, e) {\n    return [t[0] + (n[0] - t[0]) * e, t[1] + (n[1] - t[1]) * e];\n  }\n\n  function j(t, n) {\n    return F(t, n) < 1e-9;\n  }\n\n  function I(t, n, e) {\n    var r = t.map(function (t, e) {\n      return V(t, n[e]);\n    });\n    return function (t) {\n      var n = r.map(function (n) {\n        return n(t);\n      });\n      return e ? H(n) : n;\n    };\n  }\n\n  function V(t, n) {\n    return function (e) {\n      return t.map(function (t, r) {\n        return t + e * (n[r] - t);\n      });\n    };\n  }\n\n  function X(t) {\n    return \"number\" == typeof t && isFinite(t);\n  }\n\n  function Y(t) {\n    return G(t) ? nn(t) : [(t[0][0] + t[t.length - 1][0]) / 2, (t[0][1] + t[t.length - 1][1]) / 2];\n  }\n\n  function G(t) {\n    for (var n = 0; n < t.length - 2; n++) {\n      var e = t[n],\n          r = t[n + 1],\n          i = t[n + 2];\n      if (e[0] * (r[1] - i[1]) + r[0] * (i[1] - e[1]) + i[0] * (e[1] - r[1])) return !0;\n    }\n\n    return !1;\n  }\n\n  function O(t) {\n    return new yn(t).abs();\n  }\n\n  function D(t) {\n    return t.toString().split(\"M\").map(function (t, n) {\n      return t = t.trim(), n && t ? \"M\" + t : t;\n    }).filter(function (t) {\n      return t;\n    });\n  }\n\n  function H(t) {\n    return \"M\" + t.join(\"L\") + \"Z\";\n  }\n\n  function N(t) {\n    return D(O(t));\n  }\n\n  function Q(t, n) {\n    var e = O(t);\n    return U(e) || R(e, n);\n  }\n\n  function U(t) {\n    var n = t.segments || [],\n        e = [];\n    if (!n.length || \"M\" !== n[0][0]) return !1;\n\n    for (var r = 0; r < n.length; r++) {\n      var i = n[r],\n          a = i[0],\n          o = i[1],\n          s = i[2];\n      if (\"M\" === a && r || \"Z\" === a) break;\n      if (\"M\" === a || \"L\" === a) e.push([o, s]);else if (\"H\" === a) e.push([o, e[e.length - 1][1]]);else {\n        if (\"V\" !== a) return !1;\n        e.push([e[e.length - 1][0], o]);\n      }\n    }\n\n    return !!e.length && {\n      ring: e\n    };\n  }\n\n  function R(t, n) {\n    var e,\n        r,\n        i = D(t)[0],\n        a = [],\n        o = 3;\n    if (!i) throw new TypeError(Cn);\n    r = B(i), e = r.getTotalLength(), n && X(n) && n > 0 && (o = Math.max(o, Math.ceil(e / n)));\n\n    for (var s = 0; s < o; s++) {\n      var h = r.getPointAtLength(e * s / o);\n      a.push([h.x, h.y]);\n    }\n\n    return {\n      ring: a,\n      skipBisect: !0\n    };\n  }\n\n  function B(t) {\n    if (\"undefined\" != typeof window && window && window.document) try {\n      var n = window.document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n      return n.setAttributeNS(null, \"d\", t), n;\n    } catch (t) {}\n    return Sn(t);\n  }\n\n  function W(t, n) {\n    for (var e = t.length + n, r = en(t) / n, i = 0, a = 0, o = r / 2; t.length < e;) {\n      var s = t[i],\n          h = t[(i + 1) % t.length],\n          u = F(s, h);\n      o <= a + u ? (t.splice(i + 1, 0, u ? z(s, h, (o - a) / u) : s.slice(0)), o += r) : (a += u, i++);\n    }\n  }\n\n  function $(t, n) {\n    void 0 === n && (n = 1 / 0);\n\n    for (var e = 0; e < t.length; e++) {\n      for (var r = t[e], i = e === t.length - 1 ? t[0] : t[e + 1]; F(r, i) > n;) {\n        i = z(r, i, .5), t.splice(e + 1, 0, i);\n      }\n    }\n  }\n\n  function J(t, n) {\n    var e, r, i;\n\n    if (\"string\" == typeof t) {\n      var a = Q(t, n);\n      t = a.ring, i = a.skipBisect;\n    } else if (!Array.isArray(t)) throw new TypeError(Cn);\n\n    if (e = t.slice(0), !K(e)) throw new TypeError(Cn);\n    return e.length > 1 && j(e[0], e[e.length - 1]) && e.pop(), r = tn(e), r > 0 && e.reverse(), !i && n && X(n) && n > 0 && $(e, n), e;\n  }\n\n  function K(t) {\n    return t.every(function (t) {\n      return Array.isArray(t) && t.length >= 2 && X(t[0]) && X(t[1]);\n    });\n  }\n\n  function tt(t, n, e) {\n    var r;\n    return r = t.length - n.length, W(t, r < 0 ? -1 * r : 0), W(n, r > 0 ? r : 0), Tn(t, n), I(t, n, e);\n  }\n\n  function nt(t, n, e) {\n    e = e || 2;\n    var r = n && n.length,\n        i = r ? n[0] * e : t.length,\n        a = et(t, 0, i, e, !0),\n        o = [];\n    if (!a) return o;\n    var s, h, u, c, f, l, p;\n\n    if (r && (a = ut(t, n, a, e)), t.length > 80 * e) {\n      s = u = t[0], h = c = t[1];\n\n      for (var g = e; g < i; g += e) {\n        f = t[g], l = t[g + 1], f < s && (s = f), l < h && (h = l), f > u && (u = f), l > c && (c = l);\n      }\n\n      p = Math.max(u - s, c - h);\n    }\n\n    return it(a, o, e, s, h, p), o;\n  }\n\n  function et(t, n, e, r, i) {\n    var a, o;\n    if (i === Et(t, n, e, r) > 0) for (a = n; a < e; a += r) {\n      o = kt(a, t[a], t[a + 1], o);\n    } else for (a = e - r; a >= n; a -= r) {\n      o = kt(a, t[a], t[a + 1], o);\n    }\n    return o && Mt(o, o.next) && (Pt(o), o = o.next), o;\n  }\n\n  function rt(t, n) {\n    if (!t) return t;\n    n || (n = t);\n    var e,\n        r = t;\n\n    do {\n      if (e = !1, r.steiner || !Mt(r, r.next) && 0 !== mt(r.prev, r, r.next)) r = r.next;else {\n        if (Pt(r), (r = n = r.prev) === r.next) return null;\n        e = !0;\n      }\n    } while (e || r !== n);\n\n    return n;\n  }\n\n  function it(t, n, e, r, i, a, o) {\n    if (t) {\n      !o && a && pt(t, r, i, a);\n\n      for (var s, h, u = t; t.prev !== t.next;) {\n        if (s = t.prev, h = t.next, a ? ot(t, r, i, a) : at(t)) n.push(s.i / e), n.push(t.i / e), n.push(h.i / e), Pt(t), t = h.next, u = h.next;else if ((t = h) === u) {\n          o ? 1 === o ? (t = st(t, n, e), it(t, n, e, r, i, a, 2)) : 2 === o && ht(t, n, e, r, i, a) : it(rt(t), n, e, r, i, a, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  function at(t) {\n    var n = t.prev,\n        e = t,\n        r = t.next;\n    if (mt(n, e, r) >= 0) return !1;\n\n    for (var i = t.next.next; i !== t.prev;) {\n      if (yt(n.x, n.y, e.x, e.y, r.x, r.y, i.x, i.y) && mt(i.prev, i, i.next) >= 0) return !1;\n      i = i.next;\n    }\n\n    return !0;\n  }\n\n  function ot(t, n, e, r) {\n    var i = t.prev,\n        a = t,\n        o = t.next;\n    if (mt(i, a, o) >= 0) return !1;\n\n    for (var s = i.x < a.x ? i.x < o.x ? i.x : o.x : a.x < o.x ? a.x : o.x, h = i.y < a.y ? i.y < o.y ? i.y : o.y : a.y < o.y ? a.y : o.y, u = i.x > a.x ? i.x > o.x ? i.x : o.x : a.x > o.x ? a.x : o.x, c = i.y > a.y ? i.y > o.y ? i.y : o.y : a.y > o.y ? a.y : o.y, f = vt(s, h, n, e, r), l = vt(u, c, n, e, r), p = t.nextZ; p && p.z <= l;) {\n      if (p !== t.prev && p !== t.next && yt(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && mt(p.prev, p, p.next) >= 0) return !1;\n      p = p.nextZ;\n    }\n\n    for (p = t.prevZ; p && p.z >= f;) {\n      if (p !== t.prev && p !== t.next && yt(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && mt(p.prev, p, p.next) >= 0) return !1;\n      p = p.prevZ;\n    }\n\n    return !0;\n  }\n\n  function st(t, n, e) {\n    var r = t;\n\n    do {\n      var i = r.prev,\n          a = r.next.next;\n      !Mt(i, a) && wt(i, r, r.next, a) && Lt(i, a) && Lt(a, i) && (n.push(i.i / e), n.push(r.i / e), n.push(a.i / e), Pt(r), Pt(r.next), r = t = a), r = r.next;\n    } while (r !== t);\n\n    return r;\n  }\n\n  function ht(t, n, e, r, i, a) {\n    var o = t;\n\n    do {\n      for (var s = o.next.next; s !== o.prev;) {\n        if (o.i !== s.i && dt(o, s)) {\n          var h = qt(o, s);\n          return o = rt(o, o.next), h = rt(h, h.next), it(o, n, e, r, i, a), void it(h, n, e, r, i, a);\n        }\n\n        s = s.next;\n      }\n\n      o = o.next;\n    } while (o !== t);\n  }\n\n  function ut(t, n, e, r) {\n    var i,\n        a,\n        o,\n        s,\n        h,\n        u = [];\n\n    for (i = 0, a = n.length; i < a; i++) {\n      o = n[i] * r, s = i < a - 1 ? n[i + 1] * r : t.length, h = et(t, o, s, r, !1), h === h.next && (h.steiner = !0), u.push(xt(h));\n    }\n\n    for (u.sort(ct), i = 0; i < u.length; i++) {\n      ft(u[i], e), e = rt(e, e.next);\n    }\n\n    return e;\n  }\n\n  function ct(t, n) {\n    return t.x - n.x;\n  }\n\n  function ft(t, n) {\n    if (n = lt(t, n)) {\n      var e = qt(n, t);\n      rt(e, e.next);\n    }\n  }\n\n  function lt(t, n) {\n    var e,\n        r = n,\n        i = t.x,\n        a = t.y,\n        o = -1 / 0;\n\n    do {\n      if (a <= r.y && a >= r.next.y) {\n        var s = r.x + (a - r.y) * (r.next.x - r.x) / (r.next.y - r.y);\n\n        if (s <= i && s > o) {\n          if (o = s, s === i) {\n            if (a === r.y) return r;\n            if (a === r.next.y) return r.next;\n          }\n\n          e = r.x < r.next.x ? r : r.next;\n        }\n      }\n\n      r = r.next;\n    } while (r !== n);\n\n    if (!e) return null;\n    if (i === o) return e.prev;\n    var h,\n        u = e,\n        c = e.x,\n        f = e.y,\n        l = 1 / 0;\n\n    for (r = e.next; r !== u;) {\n      i >= r.x && r.x >= c && yt(a < f ? i : o, a, c, f, a < f ? o : i, a, r.x, r.y) && ((h = Math.abs(a - r.y) / (i - r.x)) < l || h === l && r.x > e.x) && Lt(r, t) && (e = r, l = h), r = r.next;\n    }\n\n    return e;\n  }\n\n  function pt(t, n, e, r) {\n    var i = t;\n\n    do {\n      null === i.z && (i.z = vt(i.x, i.y, n, e, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;\n    } while (i !== t);\n\n    i.prevZ.nextZ = null, i.prevZ = null, gt(i);\n  }\n\n  function gt(t) {\n    var n,\n        e,\n        r,\n        i,\n        a,\n        o,\n        s,\n        h,\n        u = 1;\n\n    do {\n      for (e = t, t = null, a = null, o = 0; e;) {\n        for (o++, r = e, s = 0, n = 0; n < u && (s++, r = r.nextZ); n++) {\n          ;\n        }\n\n        for (h = u; s > 0 || h > 0 && r;) {\n          0 === s ? (i = r, r = r.nextZ, h--) : 0 !== h && r ? e.z <= r.z ? (i = e, e = e.nextZ, s--) : (i = r, r = r.nextZ, h--) : (i = e, e = e.nextZ, s--), a ? a.nextZ = i : t = i, i.prevZ = a, a = i;\n        }\n\n        e = r;\n      }\n\n      a.nextZ = null, u *= 2;\n    } while (o > 1);\n\n    return t;\n  }\n\n  function vt(t, n, e, r, i) {\n    return t = 32767 * (t - e) / i, n = 32767 * (n - r) / i, t = 16711935 & (t | t << 8), t = 252645135 & (t | t << 4), t = 858993459 & (t | t << 2), t = 1431655765 & (t | t << 1), n = 16711935 & (n | n << 8), n = 252645135 & (n | n << 4), n = 858993459 & (n | n << 2), n = 1431655765 & (n | n << 1), t | n << 1;\n  }\n\n  function xt(t) {\n    var n = t,\n        e = t;\n\n    do {\n      n.x < e.x && (e = n), n = n.next;\n    } while (n !== t);\n\n    return e;\n  }\n\n  function yt(t, n, e, r, i, a, o, s) {\n    return (i - o) * (n - s) - (t - o) * (a - s) >= 0 && (t - o) * (r - s) - (e - o) * (n - s) >= 0 && (e - o) * (a - s) - (i - o) * (r - s) >= 0;\n  }\n\n  function dt(t, n) {\n    return t.next.i !== n.i && t.prev.i !== n.i && !bt(t, n) && Lt(t, n) && Lt(n, t) && At(t, n);\n  }\n\n  function mt(t, n, e) {\n    return (n.y - t.y) * (e.x - n.x) - (n.x - t.x) * (e.y - n.y);\n  }\n\n  function Mt(t, n) {\n    return t.x === n.x && t.y === n.y;\n  }\n\n  function wt(t, n, e, r) {\n    return !!(Mt(t, n) && Mt(e, r) || Mt(t, r) && Mt(e, n)) || mt(t, n, e) > 0 != mt(t, n, r) > 0 && mt(e, r, t) > 0 != mt(e, r, n) > 0;\n  }\n\n  function bt(t, n) {\n    var e = t;\n\n    do {\n      if (e.i !== t.i && e.next.i !== t.i && e.i !== n.i && e.next.i !== n.i && wt(e, e.next, t, n)) return !0;\n      e = e.next;\n    } while (e !== t);\n\n    return !1;\n  }\n\n  function Lt(t, n) {\n    return mt(t.prev, t, t.next) < 0 ? mt(t, n, t.next) >= 0 && mt(t, t.prev, n) >= 0 : mt(t, n, t.prev) < 0 || mt(t, t.next, n) < 0;\n  }\n\n  function At(t, n) {\n    var e = t,\n        r = !1,\n        i = (t.x + n.x) / 2,\n        a = (t.y + n.y) / 2;\n\n    do {\n      e.y > a != e.next.y > a && i < (e.next.x - e.x) * (a - e.y) / (e.next.y - e.y) + e.x && (r = !r), e = e.next;\n    } while (e !== t);\n\n    return r;\n  }\n\n  function qt(t, n) {\n    var e = new _t(t.i, t.x, t.y),\n        r = new _t(n.i, n.x, n.y),\n        i = t.next,\n        a = n.prev;\n    return t.next = n, n.prev = t, e.next = i, i.prev = e, r.next = e, e.prev = r, a.next = r, r.prev = a, r;\n  }\n\n  function kt(t, n, e, r) {\n    var i = new _t(t, n, e);\n    return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i;\n  }\n\n  function Pt(t) {\n    t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);\n  }\n\n  function _t(t, n, e) {\n    this.i = t, this.x = n, this.y = e, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;\n  }\n\n  function Et(t, n, e, r) {\n    for (var i = 0, a = n, o = e - r; a < e; a += r) {\n      i += (t[o] - t[a]) * (t[a + 1] + t[o + 1]), o = a;\n    }\n\n    return i;\n  }\n\n  function St(t, n) {\n    var e = n.id,\n        r = n.bbox,\n        i = null == n.properties ? {} : n.properties,\n        a = Ct(t, n);\n    return null == e && null == r ? {\n      type: \"Feature\",\n      properties: i,\n      geometry: a\n    } : null == r ? {\n      type: \"Feature\",\n      id: e,\n      properties: i,\n      geometry: a\n    } : {\n      type: \"Feature\",\n      id: e,\n      bbox: r,\n      properties: i,\n      geometry: a\n    };\n  }\n\n  function Ct(t, n) {\n    function e(t, n) {\n      n.length && n.pop();\n\n      for (var e = u[t < 0 ? ~t : t], r = 0, i = e.length; r < i; ++r) {\n        n.push(h(e[r], r));\n      }\n\n      t < 0 && Vn(n, i);\n    }\n\n    function r(t) {\n      return h(t);\n    }\n\n    function i(t) {\n      for (var n = [], r = 0, i = t.length; r < i; ++r) {\n        e(t[r], n);\n      }\n\n      return n.length < 2 && n.push(n[0]), n;\n    }\n\n    function a(t) {\n      for (var n = i(t); n.length < 4;) {\n        n.push(n[0]);\n      }\n\n      return n;\n    }\n\n    function o(t) {\n      return t.map(a);\n    }\n\n    function s(t) {\n      var n,\n          e = t.type;\n\n      switch (e) {\n        case \"GeometryCollection\":\n          return {\n            type: e,\n            geometries: t.geometries.map(s)\n          };\n\n        case \"Point\":\n          n = r(t.coordinates);\n          break;\n\n        case \"MultiPoint\":\n          n = t.coordinates.map(r);\n          break;\n\n        case \"LineString\":\n          n = i(t.arcs);\n          break;\n\n        case \"MultiLineString\":\n          n = t.arcs.map(i);\n          break;\n\n        case \"Polygon\":\n          n = o(t.arcs);\n          break;\n\n        case \"MultiPolygon\":\n          n = t.arcs.map(o);\n          break;\n\n        default:\n          return null;\n      }\n\n      return {\n        type: e,\n        coordinates: n\n      };\n    }\n\n    var h = In(t.transform),\n        u = t.arcs;\n    return s(n);\n  }\n\n  function Zt(t) {\n    for (var n, e = -1, r = t.length, i = t[r - 1], a = 0; ++e < r;) {\n      n = i, i = t[e], a += n[0] * i[1] - n[1] * i[0];\n    }\n\n    return Math.abs(a);\n  }\n\n  function Tt(t, n) {\n    function e(t) {\n      switch (t.type) {\n        case \"GeometryCollection\":\n          t.geometries.forEach(e);\n          break;\n\n        case \"Polygon\":\n          r(t.arcs);\n          break;\n\n        case \"MultiPolygon\":\n          t.arcs.forEach(r);\n      }\n    }\n\n    function r(t) {\n      t.forEach(function (n) {\n        n.forEach(function (n) {\n          (a[n = n < 0 ? ~n : n] || (a[n] = [])).push(t);\n        });\n      }), o.push(t);\n    }\n\n    function i(n) {\n      return Zt(Ct(t, {\n        type: \"Polygon\",\n        arcs: [n]\n      }).coordinates[0]);\n    }\n\n    var a = {},\n        o = [],\n        s = [];\n    return n.forEach(e), o.forEach(function (t) {\n      if (!t._) {\n        var n = [],\n            e = [t];\n\n        for (t._ = 1, s.push(n); t = e.pop();) {\n          n.push(t), t.forEach(function (t) {\n            t.forEach(function (t) {\n              a[t < 0 ? ~t : t].forEach(function (t) {\n                t._ || (t._ = 1, e.push(t));\n              });\n            });\n          });\n        }\n      }\n    }), o.forEach(function (t) {\n      delete t._;\n    }), {\n      type: \"MultiPolygon\",\n      arcs: s.map(function (n) {\n        var e,\n            r = [];\n        if (n.forEach(function (t) {\n          t.forEach(function (t) {\n            t.forEach(function (t) {\n              a[t < 0 ? ~t : t].length < 2 && r.push(t);\n            });\n          });\n        }), r = Yn(t, r), (e = r.length) > 1) for (var o, s, h = 1, u = i(r[0]); h < e; ++h) {\n          (o = i(r[h])) > u && (s = r[0], r[0] = r[h], r[h] = s, u = o);\n        }\n        return r;\n      })\n    };\n  }\n\n  function Ft(t) {\n    return function (n, e) {\n      return Dn(t(n), e);\n    };\n  }\n\n  function zt(t, n) {\n    var e = {},\n        r = {\n      type: \"Topology\",\n      objects: {\n        triangles: {\n          type: \"GeometryCollection\",\n          geometries: []\n        }\n      },\n      arcs: []\n    };\n    return t.forEach(function (t) {\n      var i = [];\n      t.forEach(function (t, a) {\n        var o = t[0] < t[1] ? t.join(\",\") : t[1] + \",\" + t[0],\n            s = t.map(function (t) {\n          return n[t];\n        });\n        o in e ? i.push(~e[o]) : (i.push(e[o] = r.arcs.length), r.arcs.push(s));\n      }), r.objects.triangles.geometries.push({\n        type: \"Polygon\",\n        area: Math.abs(tn(t.map(function (t) {\n          return n[t[0]];\n        }))),\n        arcs: [i]\n      });\n    }), r.objects.triangles.geometries.sort(function (t, n) {\n      return t.area - n.area;\n    }), r;\n  }\n\n  function jt(t, n) {\n    for (var e = t.objects.triangles.geometries, r = Hn(function (t) {\n      return t.area;\n    }).left; e.length > n;) {\n      !function () {\n        var n = e[0],\n            i = On(e)[0][0],\n            a = e[i],\n            o = Tt(t, [n, a]);\n        o.area = n.area + a.area, o.type = \"Polygon\", o.arcs = o.arcs[0], e.splice(i, 1), e.shift(), e.splice(r(e, o.area), 0, o);\n      }();\n    }\n\n    if (n > e.length) throw new RangeError(\"Can't collapse topology into \" + n + \" pieces.\");\n    return Xn(t, t.objects.triangles).features.map(function (t) {\n      return t.geometry.coordinates[0].pop(), t.geometry.coordinates[0];\n    });\n  }\n\n  function It(t) {\n    for (var n = zn(t.reduce(function (t, n) {\n      return t.concat([n[0]], [n[1]]);\n    }, [])), e = [], r = 0, i = n.length; r < i; r += 3) {\n      e.push([[n[r], n[r + 1]], [n[r + 1], n[r + 2]], [n[r + 2], n[r]]]);\n    }\n\n    return e;\n  }\n\n  function Vt(t, n, e) {\n    function r(t, n, o) {\n      void 0 === n && (n = []), void 0 === o && (o = 0);\n\n      for (var s = 0; s < t.length; s++) {\n        var h = t.splice(s, 1),\n            u = e[h[0]][n.length];\n        o + u < i && (t.length ? r(t.slice(), n.concat(h), o + u) : (i = o + u, a = n.concat(h))), t.length && t.splice(s, 0, h[0]);\n      }\n    }\n\n    var i = 1 / 0,\n        a = t.map(function (t, n) {\n      return n;\n    });\n    return r(a), a;\n  }\n\n  function Xt(t, n) {\n    var e = F(Y(t), Y(n));\n    return e * e;\n  }\n\n  function Yt(t, n, e) {\n    void 0 === e && (e = {});\n    var r = e.maxSegmentLength;\n    void 0 === r && (r = 10);\n    var i = e.string;\n    void 0 === i && (i = !0);\n    var a = e.single;\n    void 0 === a && (a = !1);\n    var o = J(t, r);\n    o.length < n.length + 2 && W(o, n.length + 2 - o.length);\n    var s,\n        h = Qn(o, n.length),\n        u = n.map(function (t) {\n      return J(t, r);\n    }),\n        c = \"string\" == typeof t && t;\n    return a && !n.every(function (t) {\n      return \"string\" == typeof t;\n    }) || (s = n.slice(0)), Dt(h, u, {\n      match: !0,\n      string: i,\n      single: a,\n      t0: c,\n      t1: s\n    });\n  }\n\n  function Gt(t, n, e) {\n    void 0 === e && (e = {});\n    var r = e.maxSegmentLength;\n    void 0 === r && (r = 10);\n    var i = e.string;\n    void 0 === i && (i = !0);\n    var a = e.single;\n    void 0 === a && (a = !1);\n    var o = Yt(n, t, {\n      maxSegmentLength: r,\n      string: i,\n      single: a\n    });\n    return a ? function (t) {\n      return o(1 - t);\n    } : o.map(function (t) {\n      return function (n) {\n        return t(1 - n);\n      };\n    });\n  }\n\n  function Ot(t, n, e) {\n    void 0 === e && (e = {});\n    var r = e.maxSegmentLength;\n    void 0 === r && (r = 10);\n    var i = e.string;\n    void 0 === i && (i = !0);\n    var a = e.single;\n    if (void 0 === a && (a = !1), !Array.isArray(t) || !Array.isArray(n) || t.length !== n.length || !t.length) throw new TypeError(Zn);\n\n    var o,\n        s,\n        h = function h(t) {\n      return J(t, r);\n    },\n        u = t.map(h),\n        c = n.map(h);\n\n    return a ? (t.every(function (t) {\n      return \"string\" == typeof t;\n    }) && (o = t.slice(0)), n.every(function (t) {\n      return \"string\" == typeof t;\n    }) && (s = n.slice(0))) : (o = t.slice(0), s = n.slice(0)), Dt(u, c, {\n      string: i,\n      single: a,\n      t0: o,\n      t1: s,\n      match: !1\n    });\n  }\n\n  function Dt(t, n, e) {\n    void 0 === e && (e = {});\n    var r = e.string,\n        i = e.single,\n        a = e.t0,\n        o = e.t1,\n        s = e.match,\n        h = s ? Un(t, n) : t.map(function (t, n) {\n      return n;\n    }),\n        u = h.map(function (e, i) {\n      return tt(t[e], n[i], r);\n    });\n\n    if (s && Array.isArray(a) && (a = h.map(function (t) {\n      return a[t];\n    })), i && r && (Array.isArray(a) && (a = a.join(\" \")), Array.isArray(o) && (o = o.join(\" \"))), i) {\n      var c = r ? function (t) {\n        return u.map(function (n) {\n          return n(t);\n        }).join(\" \");\n      } : function (t) {\n        return u.map(function (n) {\n          return n(t);\n        });\n      };\n      return r && (a || o) ? function (t) {\n        return t < 1e-4 && a || 1 - t < 1e-4 && o || c(t);\n      } : c;\n    }\n\n    return r ? (a = Array.isArray(a) ? a.map(function (t) {\n      return \"string\" == typeof t && t;\n    }) : [], o = Array.isArray(o) ? o.map(function (t) {\n      return \"string\" == typeof t && t;\n    }) : [], u.map(function (t, n) {\n      return a[n] || o[n] ? function (e) {\n        return e < 1e-4 && a[n] || 1 - e < 1e-4 && o[n] || t(e);\n      } : t;\n    })) : u;\n  }\n\n  function Ht(t, n, e, r, i) {\n    return Rt(Bt(t, n, e), r, Jt(t, n, e), 2 * Math.PI * e, i);\n  }\n\n  function Nt(t, n, e, r, i) {\n    var a = Ht(n, e, r, t, i);\n    return function (t) {\n      return a(1 - t);\n    };\n  }\n\n  function Qt(t, n, e, r, i, a) {\n    return Rt(Wt(t, n, e, r), i, Kt(t, n, e, r), 2 * e + 2 * r, a);\n  }\n\n  function Ut(t, n, e, r, i, a) {\n    var o = Qt(n, e, r, i, t, a);\n    return function (t) {\n      return o(1 - t);\n    };\n  }\n\n  function Rt(t, n, e, r, i) {\n    void 0 === i && (i = {});\n    var a = i.maxSegmentLength;\n    void 0 === a && (a = 10);\n    var o = i.string;\n    void 0 === o && (o = !0);\n    var s,\n        h,\n        u = J(n, a);\n    return X(r) && u.length < r / a && W(u, Math.ceil(r / a - u.length)), s = t(u), h = I(s, u, o), o ? function (t) {\n      return t < 1e-4 ? e : h(t);\n    } : h;\n  }\n\n  function Bt(t, n, e) {\n    return function (r) {\n      var i = Y(r),\n          a = en(r.concat([r[0]])),\n          o = Math.atan2(r[0][1] - i[1], r[0][0] - i[0]),\n          s = 0;\n      return r.map(function (i, h) {\n        var u;\n        return h && (s += F(i, r[h - 1])), u = o + 2 * Math.PI * (a ? s / a : h / r.length), [Math.cos(u) * e + t, Math.sin(u) * e + n];\n      });\n    };\n  }\n\n  function Wt(t, n, e, r) {\n    return function (i) {\n      var a = Y(i),\n          o = en(i.concat([i[0]])),\n          s = Math.atan2(i[0][1] - a[1], i[0][0] - a[0]),\n          h = 0;\n      s < 0 && (s = 2 * Math.PI + s);\n      var u = s / (2 * Math.PI);\n      return i.map(function (a, s) {\n        s && (h += F(a, i[s - 1]));\n        var c = $t((u + (o ? h / o : s / i.length)) % 1);\n        return [t + c[0] * e, n + c[1] * r];\n      });\n    };\n  }\n\n  function $t(t) {\n    return t <= 1 / 8 ? [1, .5 + 4 * t] : t <= 3 / 8 ? [1.5 - 4 * t, 1] : t <= 5 / 8 ? [0, 2.5 - 4 * t] : t <= 7 / 8 ? [4 * t - 2.5, 0] : [1, 4 * t - 3.5];\n  }\n\n  function Jt(t, n, e) {\n    var r = t - e + \",\" + n,\n        i = t + e + \",\" + n,\n        a = \"A\" + e + \",\" + e + \",0,1,1,\";\n    return \"M\" + r + a + i + a + r + \"Z\";\n  }\n\n  function Kt(t, n, e, r) {\n    var i = t + e,\n        a = n + r;\n    return \"M\" + t + \",\" + n + \"L\" + i + \",\" + n + \"L\" + i + \",\" + a + \"L\" + t + \",\" + a + \"Z\";\n  }\n\n  var tn = function tn(t) {\n    for (var n, e = -1, r = t.length, i = t[r - 1], a = 0; ++e < r;) {\n      n = i, i = t[e], a += n[1] * i[0] - n[0] * i[1];\n    }\n\n    return a / 2;\n  },\n      nn = function nn(t) {\n    for (var n, e, r = -1, i = t.length, a = 0, o = 0, s = t[i - 1], h = 0; ++r < i;) {\n      n = s, s = t[r], h += e = n[0] * s[1] - s[0] * n[1], a += (n[0] + s[0]) * e, o += (n[1] + s[1]) * e;\n    }\n\n    return h *= 3, [a / h, o / h];\n  },\n      en = function en(t) {\n    for (var n, e, r = -1, i = t.length, a = t[i - 1], o = a[0], s = a[1], h = 0; ++r < i;) {\n      n = o, e = s, a = t[r], o = a[0], s = a[1], n -= o, e -= s, h += Math.sqrt(n * n + e * e);\n    }\n\n    return h;\n  },\n      rn = {\n    a: 7,\n    c: 6,\n    h: 1,\n    l: 2,\n    m: 2,\n    r: 4,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    z: 0\n  },\n      an = [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279],\n      on = function on(t) {\n    var n = new a(t),\n        e = n.max;\n\n    for (o(n); n.index < e && !n.err.length;) {\n      u(n);\n    }\n\n    return n.err.length ? n.result = [] : n.result.length && (\"mM\".indexOf(n.result[0][0]) < 0 ? (n.err = \"SvgPath: string should start with `M` or `m`\", n.result = []) : n.result[0][0] = \"M\"), {\n      err: n.err,\n      segments: n.result\n    };\n  };\n\n  f.prototype.matrix = function (t) {\n    return 1 === t[0] && 0 === t[1] && 0 === t[2] && 1 === t[3] && 0 === t[4] && 0 === t[5] ? this : (this.cache = null, this.queue.push(t), this);\n  }, f.prototype.translate = function (t, n) {\n    return 0 === t && 0 === n || (this.cache = null, this.queue.push([1, 0, 0, 1, t, n])), this;\n  }, f.prototype.scale = function (t, n) {\n    return 1 === t && 1 === n || (this.cache = null, this.queue.push([t, 0, 0, n, 0, 0])), this;\n  }, f.prototype.rotate = function (t, n, e) {\n    var r, i, a;\n    return 0 !== t && (this.translate(n, e), r = t * Math.PI / 180, i = Math.cos(r), a = Math.sin(r), this.queue.push([i, a, -a, i, 0, 0]), this.cache = null, this.translate(-n, -e)), this;\n  }, f.prototype.skewX = function (t) {\n    return 0 !== t && (this.cache = null, this.queue.push([1, 0, Math.tan(t * Math.PI / 180), 1, 0, 0])), this;\n  }, f.prototype.skewY = function (t) {\n    return 0 !== t && (this.cache = null, this.queue.push([1, Math.tan(t * Math.PI / 180), 0, 1, 0, 0])), this;\n  }, f.prototype.toArray = function () {\n    var t = this;\n    if (this.cache) return this.cache;\n    if (!this.queue.length) return this.cache = [1, 0, 0, 1, 0, 0], this.cache;\n    if (this.cache = this.queue[0], 1 === this.queue.length) return this.cache;\n\n    for (var n = 1; n < this.queue.length; n++) {\n      t.cache = c(t.cache, t.queue[n]);\n    }\n\n    return this.cache;\n  }, f.prototype.calc = function (t, n, e) {\n    var r;\n    return this.queue.length ? (this.cache || (this.cache = this.toArray()), r = this.cache, [t * r[0] + n * r[2] + (e ? 0 : r[4]), t * r[1] + n * r[3] + (e ? 0 : r[5])]) : [t, n];\n  };\n\n  var sn = f,\n      hn = {\n    matrix: !0,\n    scale: !0,\n    rotate: !0,\n    translate: !0,\n    skewX: !0,\n    skewY: !0\n  },\n      un = /\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/,\n      cn = /[\\s,]+/,\n      fn = function fn(t) {\n    var n,\n        e,\n        r = new sn();\n    return t.split(un).forEach(function (t) {\n      if (t.length) {\n        if (void 0 !== hn[t]) return void (n = t);\n\n        switch (e = t.split(cn).map(function (t) {\n          return +t || 0;\n        }), n) {\n          case \"matrix\":\n            return void (6 === e.length && r.matrix(e));\n\n          case \"scale\":\n            return void (1 === e.length ? r.scale(e[0], e[0]) : 2 === e.length && r.scale(e[0], e[1]));\n\n          case \"rotate\":\n            return void (1 === e.length ? r.rotate(e[0], 0, 0) : 3 === e.length && r.rotate(e[0], e[1], e[2]));\n\n          case \"translate\":\n            return void (1 === e.length ? r.translate(e[0], 0) : 2 === e.length && r.translate(e[0], e[1]));\n\n          case \"skewX\":\n            return void (1 === e.length && r.skewX(e[0]));\n\n          case \"skewY\":\n            return void (1 === e.length && r.skewY(e[0]));\n        }\n      }\n    }), r;\n  },\n      ln = 2 * Math.PI,\n      pn = function pn(t, n, e, r, i, a, o, s, h) {\n    var u = Math.sin(h * ln / 360),\n        c = Math.cos(h * ln / 360),\n        f = c * (t - e) / 2 + u * (n - r) / 2,\n        l = -u * (t - e) / 2 + c * (n - r) / 2;\n    if (0 === f && 0 === l) return [];\n    if (0 === o || 0 === s) return [];\n    o = Math.abs(o), s = Math.abs(s);\n    var v = f * f / (o * o) + l * l / (s * s);\n    v > 1 && (o *= Math.sqrt(v), s *= Math.sqrt(v));\n    var x = p(t, n, e, r, i, a, o, s, u, c),\n        y = [],\n        d = x[2],\n        m = x[3],\n        M = Math.max(Math.ceil(Math.abs(m) / (ln / 4)), 1);\n    m /= M;\n\n    for (var w = 0; w < M; w++) {\n      y.push(g(d, m)), d += m;\n    }\n\n    return y.map(function (t) {\n      for (var n = 0; n < t.length; n += 2) {\n        var e = t[n + 0],\n            r = t[n + 1];\n        e *= o, r *= s;\n        var i = c * e - u * r,\n            a = u * e + c * r;\n        t[n + 0] = i + x[0], t[n + 1] = a + x[1];\n      }\n\n      return t;\n    });\n  },\n      gn = Math.PI / 180;\n\n  v.prototype.transform = function (t) {\n    var n = Math.cos(this.ax * gn),\n        e = Math.sin(this.ax * gn),\n        r = [this.rx * (t[0] * n + t[2] * e), this.rx * (t[1] * n + t[3] * e), this.ry * (-t[0] * e + t[2] * n), this.ry * (-t[1] * e + t[3] * n)],\n        i = r[0] * r[0] + r[2] * r[2],\n        a = r[1] * r[1] + r[3] * r[3],\n        o = ((r[0] - r[3]) * (r[0] - r[3]) + (r[2] + r[1]) * (r[2] + r[1])) * ((r[0] + r[3]) * (r[0] + r[3]) + (r[2] - r[1]) * (r[2] - r[1])),\n        s = (i + a) / 2;\n    if (o < 1e-10 * s) return this.rx = this.ry = Math.sqrt(s), this.ax = 0, this;\n    var h = r[0] * r[1] + r[2] * r[3];\n    o = Math.sqrt(o);\n    var u = s + o / 2,\n        c = s - o / 2;\n    return this.ax = Math.abs(h) < 1e-10 && Math.abs(u - a) < 1e-10 ? 90 : 180 * Math.atan(Math.abs(h) > Math.abs(u - a) ? (u - i) / h : h / (u - a)) / Math.PI, this.ax >= 0 ? (this.rx = Math.sqrt(u), this.ry = Math.sqrt(c)) : (this.ax += 90, this.rx = Math.sqrt(c), this.ry = Math.sqrt(u)), this;\n  }, v.prototype.isDegenerate = function () {\n    return this.rx < 1e-10 * this.ry || this.ry < 1e-10 * this.rx;\n  };\n  var vn = v;\n  x.prototype.__matrix = function (t) {\n    var n,\n        e = this;\n    t.queue.length && this.iterate(function (r, i, a, o) {\n      var s, h, u, c;\n\n      switch (r[0]) {\n        case \"v\":\n          s = t.calc(0, r[1], !0), h = 0 === s[0] ? [\"v\", s[1]] : [\"l\", s[0], s[1]];\n          break;\n\n        case \"V\":\n          s = t.calc(a, r[1], !1), h = s[0] === t.calc(a, o, !1)[0] ? [\"V\", s[1]] : [\"L\", s[0], s[1]];\n          break;\n\n        case \"h\":\n          s = t.calc(r[1], 0, !0), h = 0 === s[1] ? [\"h\", s[0]] : [\"l\", s[0], s[1]];\n          break;\n\n        case \"H\":\n          s = t.calc(r[1], o, !1), h = s[1] === t.calc(a, o, !1)[1] ? [\"H\", s[0]] : [\"L\", s[0], s[1]];\n          break;\n\n        case \"a\":\n        case \"A\":\n          var f = t.toArray(),\n              l = vn(r[1], r[2], r[3]).transform(f);\n\n          if (f[0] * f[3] - f[1] * f[2] < 0 && (r[5] = r[5] ? \"0\" : \"1\"), s = t.calc(r[6], r[7], \"a\" === r[0]), \"A\" === r[0] && r[6] === a && r[7] === o || \"a\" === r[0] && 0 === r[6] && 0 === r[7]) {\n            h = [\"a\" === r[0] ? \"l\" : \"L\", s[0], s[1]];\n            break;\n          }\n\n          h = l.isDegenerate() ? [\"a\" === r[0] ? \"l\" : \"L\", s[0], s[1]] : [r[0], l.rx, l.ry, l.ax, r[4], r[5], s[0], s[1]];\n          break;\n\n        case \"m\":\n          c = i > 0, s = t.calc(r[1], r[2], c), h = [\"m\", s[0], s[1]];\n          break;\n\n        default:\n          for (u = r[0], h = [u], c = u.toLowerCase() === u, n = 1; n < r.length; n += 2) {\n            s = t.calc(r[n], r[n + 1], c), h.push(s[0], s[1]);\n          }\n\n      }\n\n      e.segments[i] = h;\n    }, !0);\n  }, x.prototype.__evaluateStack = function () {\n    var t,\n        n,\n        e = this;\n\n    if (this.__stack.length) {\n      if (1 === this.__stack.length) return this.__matrix(this.__stack[0]), void (this.__stack = []);\n\n      for (t = sn(), n = this.__stack.length; --n >= 0;) {\n        t.matrix(e.__stack[n].toArray());\n      }\n\n      this.__matrix(t), this.__stack = [];\n    }\n  }, x.prototype.toString = function () {\n    var t,\n        n,\n        e = this,\n        r = [];\n\n    this.__evaluateStack();\n\n    for (var i = 0; i < this.segments.length; i++) {\n      n = e.segments[i][0], t = i > 0 && \"m\" !== n && \"M\" !== n && n === e.segments[i - 1][0], r = r.concat(t ? e.segments[i].slice(1) : e.segments[i]);\n    }\n\n    return r.join(\" \").replace(/ ?([achlmqrstvz]) ?/gi, \"$1\").replace(/ \\-/g, \"-\").replace(/zm/g, \"z m\");\n  }, x.prototype.translate = function (t, n) {\n    return this.__stack.push(sn().translate(t, n || 0)), this;\n  }, x.prototype.scale = function (t, n) {\n    return this.__stack.push(sn().scale(t, n || 0 === n ? n : t)), this;\n  }, x.prototype.rotate = function (t, n, e) {\n    return this.__stack.push(sn().rotate(t, n || 0, e || 0)), this;\n  }, x.prototype.skewX = function (t) {\n    return this.__stack.push(sn().skewX(t)), this;\n  }, x.prototype.skewY = function (t) {\n    return this.__stack.push(sn().skewY(t)), this;\n  }, x.prototype.matrix = function (t) {\n    return this.__stack.push(sn().matrix(t)), this;\n  }, x.prototype.transform = function (t) {\n    return t.trim() ? (this.__stack.push(fn(t)), this) : this;\n  }, x.prototype.round = function (t) {\n    var n,\n        e = 0,\n        r = 0,\n        i = 0,\n        a = 0;\n    return t = t || 0, this.__evaluateStack(), this.segments.forEach(function (o) {\n      var s = o[0].toLowerCase() === o[0];\n\n      switch (o[0]) {\n        case \"H\":\n        case \"h\":\n          return s && (o[1] += i), i = o[1] - o[1].toFixed(t), void (o[1] = +o[1].toFixed(t));\n\n        case \"V\":\n        case \"v\":\n          return s && (o[1] += a), a = o[1] - o[1].toFixed(t), void (o[1] = +o[1].toFixed(t));\n\n        case \"Z\":\n        case \"z\":\n          return i = e, void (a = r);\n\n        case \"M\":\n        case \"m\":\n          return s && (o[1] += i, o[2] += a), i = o[1] - o[1].toFixed(t), a = o[2] - o[2].toFixed(t), e = i, r = a, o[1] = +o[1].toFixed(t), void (o[2] = +o[2].toFixed(t));\n\n        case \"A\":\n        case \"a\":\n          return s && (o[6] += i, o[7] += a), i = o[6] - o[6].toFixed(t), a = o[7] - o[7].toFixed(t), o[1] = +o[1].toFixed(t), o[2] = +o[2].toFixed(t), o[3] = +o[3].toFixed(t + 2), o[6] = +o[6].toFixed(t), void (o[7] = +o[7].toFixed(t));\n\n        default:\n          return n = o.length, s && (o[n - 2] += i, o[n - 1] += a), i = o[n - 2] - o[n - 2].toFixed(t), a = o[n - 1] - o[n - 1].toFixed(t), void o.forEach(function (n, e) {\n            e && (o[e] = +o[e].toFixed(t));\n          });\n      }\n    }), this;\n  }, x.prototype.iterate = function (t, n) {\n    var e,\n        r,\n        i,\n        a = this.segments,\n        o = {},\n        s = !1,\n        h = 0,\n        u = 0,\n        c = 0,\n        f = 0;\n    if (n || this.__evaluateStack(), a.forEach(function (n, e) {\n      var r = t(n, e, h, u);\n      Array.isArray(r) && (o[e] = r, s = !0);\n      var i = n[0] === n[0].toLowerCase();\n\n      switch (n[0]) {\n        case \"m\":\n        case \"M\":\n          return h = n[1] + (i ? h : 0), u = n[2] + (i ? u : 0), c = h, void (f = u);\n\n        case \"h\":\n        case \"H\":\n          return void (h = n[1] + (i ? h : 0));\n\n        case \"v\":\n        case \"V\":\n          return void (u = n[1] + (i ? u : 0));\n\n        case \"z\":\n        case \"Z\":\n          return h = c, void (u = f);\n\n        default:\n          h = n[n.length - 2] + (i ? h : 0), u = n[n.length - 1] + (i ? u : 0);\n      }\n    }), !s) return this;\n\n    for (i = [], e = 0; e < a.length; e++) {\n      if (void 0 !== o[e]) for (r = 0; r < o[e].length; r++) {\n        i.push(o[e][r]);\n      } else i.push(a[e]);\n    }\n\n    return this.segments = i, this;\n  }, x.prototype.abs = function () {\n    return this.iterate(function (t, n, e, r) {\n      var i,\n          a = t[0],\n          o = a.toUpperCase();\n      if (a !== o) switch (t[0] = o, a) {\n        case \"v\":\n          return void (t[1] += r);\n\n        case \"a\":\n          return t[6] += e, void (t[7] += r);\n\n        default:\n          for (i = 1; i < t.length; i++) {\n            t[i] += i % 2 ? e : r;\n          }\n\n      }\n    }, !0), this;\n  }, x.prototype.rel = function () {\n    return this.iterate(function (t, n, e, r) {\n      var i,\n          a = t[0],\n          o = a.toLowerCase();\n      if (a !== o && (0 !== n || \"M\" !== a)) switch (t[0] = o, a) {\n        case \"V\":\n          return void (t[1] -= r);\n\n        case \"A\":\n          return t[6] -= e, void (t[7] -= r);\n\n        default:\n          for (i = 1; i < t.length; i++) {\n            t[i] -= i % 2 ? e : r;\n          }\n\n      }\n    }, !0), this;\n  }, x.prototype.unarc = function () {\n    return this.iterate(function (t, n, e, r) {\n      var i,\n          a,\n          o,\n          s = [],\n          h = t[0];\n      return \"A\" !== h && \"a\" !== h ? null : (\"a\" === h ? (a = e + t[6], o = r + t[7]) : (a = t[6], o = t[7]), i = pn(e, r, a, o, t[4], t[5], t[1], t[2], t[3]), 0 === i.length ? [[\"a\" === t[0] ? \"l\" : \"L\", t[6], t[7]]] : (i.forEach(function (t) {\n        s.push([\"C\", t[2], t[3], t[4], t[5], t[6], t[7]]);\n      }), s));\n    }), this;\n  }, x.prototype.unshort = function () {\n    var t,\n        n,\n        e,\n        r,\n        i,\n        a = this.segments;\n    return this.iterate(function (o, s, h, u) {\n      var c,\n          f = o[0],\n          l = f.toUpperCase();\n      s && (\"T\" === l ? (c = \"t\" === f, e = a[s - 1], \"Q\" === e[0] ? (t = e[1] - h, n = e[2] - u) : \"q\" === e[0] ? (t = e[1] - e[3], n = e[2] - e[4]) : (t = 0, n = 0), r = -t, i = -n, c || (r += h, i += u), a[s] = [c ? \"q\" : \"Q\", r, i, o[1], o[2]]) : \"S\" === l && (c = \"s\" === f, e = a[s - 1], \"C\" === e[0] ? (t = e[3] - h, n = e[4] - u) : \"c\" === e[0] ? (t = e[3] - e[5], n = e[4] - e[6]) : (t = 0, n = 0), r = -t, i = -n, c || (r += h, i += u), a[s] = [c ? \"c\" : \"C\", r, i, o[1], o[2], o[3], o[4]]));\n    }), this;\n  };\n\n  var xn = x,\n      yn = xn,\n      dn = {\n    a: 7,\n    c: 6,\n    h: 1,\n    l: 2,\n    m: 2,\n    q: 4,\n    s: 4,\n    t: 2,\n    v: 1,\n    z: 0\n  },\n      mn = /([astvzqmhlc])([^astvzqmhlc]*)/gi,\n      Mn = function Mn(t) {\n    var n = [];\n    return t.replace(mn, function (t, e, r) {\n      var i = e.toLowerCase();\n\n      for (r = y(r), \"m\" === i && r.length > 2 && (n.push([e].concat(r.splice(0, 2))), i = \"l\", e = \"m\" === e ? \"l\" : \"L\"); r.length >= 0;) {\n        if (r.length === dn[i]) return r.unshift(e), n.push(r);\n        if (r.length < dn[i]) throw new Error(\"malformed path data\");\n        n.push([e].concat(r.splice(0, dn[i])));\n      }\n    }), n;\n  },\n      wn = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi,\n      bn = function bn(t, n, e, r, i, a, o, s) {\n    return new d(t, n, e, r, i, a, o, s);\n  };\n\n  d.prototype = {\n    constructor: d,\n    init: function init() {\n      this.length = this.getArcLength([this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y]);\n    },\n    getTotalLength: function getTotalLength() {\n      return this.length;\n    },\n    getPointAtLength: function getPointAtLength(t) {\n      var n = w(t, this.length, this.getArcLength, [this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y]);\n      return this.getPoint([this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y], n);\n    },\n    getTangentAtLength: function getTangentAtLength(t) {\n      var n = w(t, this.length, this.getArcLength, [this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y]),\n          e = this.getDerivative([this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y], n),\n          r = Math.sqrt(e.x * e.x + e.y * e.y);\n      return r > 0 ? {\n        x: e.x / r,\n        y: e.y / r\n      } : {\n        x: 0,\n        y: 0\n      };\n    },\n    getPropertiesAtLength: function getPropertiesAtLength(t) {\n      var n,\n          e = w(t, this.length, this.getArcLength, [this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y]),\n          r = this.getDerivative([this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y], e),\n          i = Math.sqrt(r.x * r.x + r.y * r.y);\n      n = i > 0 ? {\n        x: r.x / i,\n        y: r.y / i\n      } : {\n        x: 0,\n        y: 0\n      };\n      var a = this.getPoint([this.a.x, this.b.x, this.c.x, this.d.x], [this.a.y, this.b.y, this.c.y, this.d.y], e);\n      return {\n        x: a.x,\n        y: a.y,\n        tangentX: n.x,\n        tangentY: n.y\n      };\n    }\n  };\n\n  var Ln = [[], [], [-.5773502691896257, .5773502691896257], [0, -.7745966692414834, .7745966692414834], [-.33998104358485626, .33998104358485626, -.8611363115940526, .8611363115940526], [0, -.5384693101056831, .5384693101056831, -.906179845938664, .906179845938664], [.6612093864662645, -.6612093864662645, -.2386191860831969, .2386191860831969, -.932469514203152, .932469514203152], [0, .4058451513773972, -.4058451513773972, -.7415311855993945, .7415311855993945, -.9491079123427585, .9491079123427585], [-.1834346424956498, .1834346424956498, -.525532409916329, .525532409916329, -.7966664774136267, .7966664774136267, -.9602898564975363, .9602898564975363], [0, -.8360311073266358, .8360311073266358, -.9681602395076261, .9681602395076261, -.3242534234038089, .3242534234038089, -.6133714327005904, .6133714327005904], [-.14887433898163122, .14887433898163122, -.4333953941292472, .4333953941292472, -.6794095682990244, .6794095682990244, -.8650633666889845, .8650633666889845, -.9739065285171717, .9739065285171717], [0, -.26954315595234496, .26954315595234496, -.5190961292068118, .5190961292068118, -.7301520055740494, .7301520055740494, -.8870625997680953, .8870625997680953, -.978228658146057, .978228658146057], [-.1252334085114689, .1252334085114689, -.3678314989981802, .3678314989981802, -.5873179542866175, .5873179542866175, -.7699026741943047, .7699026741943047, -.9041172563704749, .9041172563704749, -.9815606342467192, .9815606342467192], [0, -.2304583159551348, .2304583159551348, -.44849275103644687, .44849275103644687, -.6423493394403402, .6423493394403402, -.8015780907333099, .8015780907333099, -.9175983992229779, .9175983992229779, -.9841830547185881, .9841830547185881], [-.10805494870734367, .10805494870734367, -.31911236892788974, .31911236892788974, -.5152486363581541, .5152486363581541, -.6872929048116855, .6872929048116855, -.827201315069765, .827201315069765, -.9284348836635735, .9284348836635735, -.9862838086968123, .9862838086968123], [0, -.20119409399743451, .20119409399743451, -.3941513470775634, .3941513470775634, -.5709721726085388, .5709721726085388, -.7244177313601701, .7244177313601701, -.8482065834104272, .8482065834104272, -.937273392400706, .937273392400706, -.9879925180204854, .9879925180204854], [-.09501250983763744, .09501250983763744, -.2816035507792589, .2816035507792589, -.45801677765722737, .45801677765722737, -.6178762444026438, .6178762444026438, -.755404408355003, .755404408355003, -.8656312023878318, .8656312023878318, -.9445750230732326, .9445750230732326, -.9894009349916499, .9894009349916499], [0, -.17848418149584785, .17848418149584785, -.3512317634538763, .3512317634538763, -.5126905370864769, .5126905370864769, -.6576711592166907, .6576711592166907, -.7815140038968014, .7815140038968014, -.8802391537269859, .8802391537269859, -.9506755217687678, .9506755217687678, -.9905754753144174, .9905754753144174], [-.0847750130417353, .0847750130417353, -.2518862256915055, .2518862256915055, -.41175116146284263, .41175116146284263, -.5597708310739475, .5597708310739475, -.6916870430603532, .6916870430603532, -.8037049589725231, .8037049589725231, -.8926024664975557, .8926024664975557, -.9558239495713977, .9558239495713977, -.9915651684209309, .9915651684209309], [0, -.16035864564022537, .16035864564022537, -.31656409996362983, .31656409996362983, -.46457074137596094, .46457074137596094, -.600545304661681, .600545304661681, -.7209661773352294, .7209661773352294, -.8227146565371428, .8227146565371428, -.9031559036148179, .9031559036148179, -.96020815213483, .96020815213483, -.9924068438435844, .9924068438435844], [-.07652652113349734, .07652652113349734, -.22778585114164507, .22778585114164507, -.37370608871541955, .37370608871541955, -.5108670019508271, .5108670019508271, -.636053680726515, .636053680726515, -.7463319064601508, .7463319064601508, -.8391169718222188, .8391169718222188, -.912234428251326, .912234428251326, -.9639719272779138, .9639719272779138, -.9931285991850949, .9931285991850949], [0, -.1455618541608951, .1455618541608951, -.2880213168024011, .2880213168024011, -.4243421202074388, .4243421202074388, -.5516188358872198, .5516188358872198, -.6671388041974123, .6671388041974123, -.7684399634756779, .7684399634756779, -.8533633645833173, .8533633645833173, -.9200993341504008, .9200993341504008, -.9672268385663063, .9672268385663063, -.9937521706203895, .9937521706203895], [-.06973927331972223, .06973927331972223, -.20786042668822127, .20786042668822127, -.34193582089208424, .34193582089208424, -.469355837986757, .469355837986757, -.5876404035069116, .5876404035069116, -.6944872631866827, .6944872631866827, -.7878168059792081, .7878168059792081, -.8658125777203002, .8658125777203002, -.926956772187174, .926956772187174, -.9700604978354287, .9700604978354287, -.9942945854823992, .9942945854823992], [0, -.1332568242984661, .1332568242984661, -.26413568097034495, .26413568097034495, -.3903010380302908, .3903010380302908, -.5095014778460075, .5095014778460075, -.6196098757636461, .6196098757636461, -.7186613631319502, .7186613631319502, -.8048884016188399, .8048884016188399, -.8767523582704416, .8767523582704416, -.9329710868260161, .9329710868260161, -.9725424712181152, .9725424712181152, -.9947693349975522, .9947693349975522], [-.06405689286260563, .06405689286260563, -.1911188674736163, .1911188674736163, -.3150426796961634, .3150426796961634, -.4337935076260451, .4337935076260451, -.5454214713888396, .5454214713888396, -.6480936519369755, .6480936519369755, -.7401241915785544, .7401241915785544, -.820001985973903, .820001985973903, -.8864155270044011, .8864155270044011, -.9382745520027328, .9382745520027328, -.9747285559713095, .9747285559713095, -.9951872199970213, .9951872199970213]],\n      An = [[], [], [1, 1], [.8888888888888888, .5555555555555556, .5555555555555556], [.6521451548625461, .6521451548625461, .34785484513745385, .34785484513745385], [.5688888888888889, .47862867049936647, .47862867049936647, .23692688505618908, .23692688505618908], [.3607615730481386, .3607615730481386, .46791393457269104, .46791393457269104, .17132449237917036, .17132449237917036], [.4179591836734694, .3818300505051189, .3818300505051189, .27970539148927664, .27970539148927664, .1294849661688697, .1294849661688697], [.362683783378362, .362683783378362, .31370664587788727, .31370664587788727, .22238103445337448, .22238103445337448, .10122853629037626, .10122853629037626], [.3302393550012598, .1806481606948574, .1806481606948574, .08127438836157441, .08127438836157441, .31234707704000286, .31234707704000286, .26061069640293544, .26061069640293544], [.29552422471475287, .29552422471475287, .26926671930999635, .26926671930999635, .21908636251598204, .21908636251598204, .1494513491505806, .1494513491505806, .06667134430868814, .06667134430868814], [.2729250867779006, .26280454451024665, .26280454451024665, .23319376459199048, .23319376459199048, .18629021092773426, .18629021092773426, .1255803694649046, .1255803694649046, .05566856711617366, .05566856711617366], [.24914704581340277, .24914704581340277, .2334925365383548, .2334925365383548, .20316742672306592, .20316742672306592, .16007832854334622, .16007832854334622, .10693932599531843, .10693932599531843, .04717533638651183, .04717533638651183], [.2325515532308739, .22628318026289723, .22628318026289723, .2078160475368885, .2078160475368885, .17814598076194574, .17814598076194574, .13887351021978725, .13887351021978725, .09212149983772845, .09212149983772845, .04048400476531588, .04048400476531588], [.2152638534631578, .2152638534631578, .2051984637212956, .2051984637212956, .18553839747793782, .18553839747793782, .15720316715819355, .15720316715819355, .12151857068790319, .12151857068790319, .08015808715976021, .08015808715976021, .03511946033175186, .03511946033175186], [.2025782419255613, .19843148532711158, .19843148532711158, .1861610000155622, .1861610000155622, .16626920581699392, .16626920581699392, .13957067792615432, .13957067792615432, .10715922046717194, .10715922046717194, .07036604748810812, .07036604748810812, .03075324199611727, .03075324199611727], [.1894506104550685, .1894506104550685, .18260341504492358, .18260341504492358, .16915651939500254, .16915651939500254, .14959598881657674, .14959598881657674, .12462897125553388, .12462897125553388, .09515851168249279, .09515851168249279, .062253523938647894, .062253523938647894, .027152459411754096, .027152459411754096], [.17944647035620653, .17656270536699264, .17656270536699264, .16800410215645004, .16800410215645004, .15404576107681028, .15404576107681028, .13513636846852548, .13513636846852548, .11188384719340397, .11188384719340397, .08503614831717918, .08503614831717918, .0554595293739872, .0554595293739872, .02414830286854793, .02414830286854793], [.1691423829631436, .1691423829631436, .16427648374583273, .16427648374583273, .15468467512626524, .15468467512626524, .14064291467065065, .14064291467065065, .12255520671147846, .12255520671147846, .10094204410628717, .10094204410628717, .07642573025488905, .07642573025488905, .0497145488949698, .0497145488949698, .02161601352648331, .02161601352648331], [.1610544498487837, .15896884339395434, .15896884339395434, .15276604206585967, .15276604206585967, .1426067021736066, .1426067021736066, .12875396253933621, .12875396253933621, .11156664554733399, .11156664554733399, .09149002162245, .09149002162245, .06904454273764123, .06904454273764123, .0448142267656996, .0448142267656996, .019461788229726478, .019461788229726478], [.15275338713072584, .15275338713072584, .14917298647260374, .14917298647260374, .14209610931838204, .14209610931838204, .13168863844917664, .13168863844917664, .11819453196151841, .11819453196151841, .10193011981724044, .10193011981724044, .08327674157670475, .08327674157670475, .06267204833410907, .06267204833410907, .04060142980038694, .04060142980038694, .017614007139152118, .017614007139152118], [.14608113364969041, .14452440398997005, .14452440398997005, .13988739479107315, .13988739479107315, .13226893863333747, .13226893863333747, .12183141605372853, .12183141605372853, .10879729916714838, .10879729916714838, .09344442345603386, .09344442345603386, .0761001136283793, .0761001136283793, .057134425426857205, .057134425426857205, .036953789770852494, .036953789770852494, .016017228257774335, .016017228257774335], [.13925187285563198, .13925187285563198, .13654149834601517, .13654149834601517, .13117350478706238, .13117350478706238, .12325237681051242, .12325237681051242, .11293229608053922, .11293229608053922, .10041414444288096, .10041414444288096, .08594160621706773, .08594160621706773, .06979646842452049, .06979646842452049, .052293335152683286, .052293335152683286, .03377490158481415, .03377490158481415, .0146279952982722, .0146279952982722], [.13365457218610619, .1324620394046966, .1324620394046966, .12890572218808216, .12890572218808216, .12304908430672953, .12304908430672953, .11499664022241136, .11499664022241136, .10489209146454141, .10489209146454141, .09291576606003515, .09291576606003515, .07928141177671895, .07928141177671895, .06423242140852585, .06423242140852585, .04803767173108467, .04803767173108467, .030988005856979445, .030988005856979445, .013411859487141771, .013411859487141771], [.12793819534675216, .12793819534675216, .1258374563468283, .1258374563468283, .12167047292780339, .12167047292780339, .1155056680537256, .1155056680537256, .10744427011596563, .10744427011596563, .09761865210411388, .09761865210411388, .08619016153195327, .08619016153195327, .0733464814110803, .0733464814110803, .05929858491543678, .05929858491543678, .04427743881741981, .04427743881741981, .028531388628933663, .028531388628933663, .0123412297999872, .0123412297999872]],\n      qn = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]],\n      kn = 2 * Math.PI,\n      Pn = function Pn(t, n, e, r, i, a, o, s, h) {\n    var u = Math.sin(i * kn / 360),\n        c = Math.cos(i * kn / 360),\n        f = c * (t - s) / 2 + u * (n - h) / 2,\n        l = -u * (t - s) / 2 + c * (n - h) / 2;\n    if (0 === f && 0 === l) return [];\n    if (0 === e || 0 === r) return [];\n    e = Math.abs(e), r = Math.abs(r);\n    var p = f * f / (e * e) + l * l / (r * r);\n    p > 1 && (e *= Math.sqrt(p), r *= Math.sqrt(p));\n    var g = S(t, n, s, h, a, o, e, r, u, c),\n        v = [],\n        x = g[2],\n        y = g[3],\n        d = Math.max(Math.ceil(Math.abs(y) / (kn / 4)), 1);\n    y /= d;\n\n    for (var m = 0; m < d; m++) {\n      v.push(C(x, y)), x += y;\n    }\n\n    return v.map(function (t) {\n      for (var n = 0; n < t.length; n += 2) {\n        var i = t[n + 0],\n            a = t[n + 1];\n        i *= e, a *= r;\n        var o = c * i - u * a,\n            s = u * i + c * a;\n        t[n + 0] = o + g[0], t[n + 1] = s + g[1];\n      }\n\n      return t;\n    });\n  },\n      _n = function _n(t, n, e, r, i, a, o, s, h) {\n    return new Z(t, n, e, r, i, a, o, s, h);\n  };\n\n  Z.prototype = {\n    constructor: Z,\n    init: function init() {},\n    getTotalLength: function getTotalLength() {\n      return this.length;\n    },\n    getPointAtLength: function getPointAtLength(t) {\n      var n = this;\n      t < 0 ? t = 0 : t > this.length && (t = this.length);\n\n      for (var e = this.partialLengths.length - 1; this.partialLengths[e] >= t && this.partialLengths[e] > 0;) {\n        e--;\n      }\n\n      e < this.partialLengths.length - 1 && e++;\n\n      for (var r = 0, i = 0; i < e; i++) {\n        r += n.partialLengths[i];\n      }\n\n      return this.curves[e].getPointAtLength(t - r);\n    },\n    getTangentAtLength: function getTangentAtLength(t) {\n      var n = this;\n      t < 0 ? t = 0 : t > this.length && (t = this.length);\n\n      for (var e = this.partialLengths.length - 1; this.partialLengths[e] >= t && this.partialLengths[e] > 0;) {\n        e--;\n      }\n\n      e < this.partialLengths.length - 1 && e++;\n\n      for (var r = 0, i = 0; i < e; i++) {\n        r += n.partialLengths[i];\n      }\n\n      return this.curves[e].getTangentAtLength(t - r);\n    },\n    getPropertiesAtLength: function getPropertiesAtLength(t) {\n      var n = this.getTangentAtLength(t),\n          e = this.getPointAtLength(t);\n      return {\n        x: e.x,\n        y: e.y,\n        tangentX: n.x,\n        tangentY: n.y\n      };\n    }\n  };\n\n  var En = function En(t, n, e, r) {\n    return new T(t, n, e, r);\n  };\n\n  T.prototype.getTotalLength = function () {\n    return Math.sqrt(Math.pow(this.x0 - this.x1, 2) + Math.pow(this.y0 - this.y1, 2));\n  }, T.prototype.getPointAtLength = function (t) {\n    var n = t / Math.sqrt(Math.pow(this.x0 - this.x1, 2) + Math.pow(this.y0 - this.y1, 2)),\n        e = (this.x1 - this.x0) * n,\n        r = (this.y1 - this.y0) * n;\n    return {\n      x: this.x0 + e,\n      y: this.y0 + r\n    };\n  }, T.prototype.getTangentAtLength = function () {\n    var t = Math.sqrt((this.x1 - this.x0) * (this.x1 - this.x0) + (this.y1 - this.y0) * (this.y1 - this.y0));\n    return {\n      x: (this.x1 - this.x0) / t,\n      y: (this.y1 - this.y0) / t\n    };\n  }, T.prototype.getPropertiesAtLength = function (t) {\n    var n = this.getPointAtLength(t),\n        e = this.getTangentAtLength();\n    return {\n      x: n.x,\n      y: n.y,\n      tangentX: e.x,\n      tangentY: e.y\n    };\n  };\n\n  var Sn = function Sn(t) {\n    function n(t) {\n      if (!t) return null;\n\n      for (var a, o = Mn(t), s = [0, 0], h = [0, 0], u = 0; u < o.length; u++) {\n        \"M\" === o[u][0] ? (s = [o[u][1], o[u][2]], i.push(null)) : \"m\" === o[u][0] ? (s = [o[u][1] + s[0], o[u][2] + s[1]], i.push(null)) : \"L\" === o[u][0] ? (e += Math.sqrt(Math.pow(s[0] - o[u][1], 2) + Math.pow(s[1] - o[u][2], 2)), i.push(new En(s[0], o[u][1], s[1], o[u][2])), s = [o[u][1], o[u][2]]) : \"l\" === o[u][0] ? (e += Math.sqrt(Math.pow(o[u][1], 2) + Math.pow(o[u][2], 2)), i.push(new En(s[0], o[u][1] + s[0], s[1], o[u][2] + s[1])), s = [o[u][1] + s[0], o[u][2] + s[1]]) : \"H\" === o[u][0] ? (e += Math.abs(s[0] - o[u][1]), i.push(new En(s[0], o[u][1], s[1], s[1])), s[0] = o[u][1]) : \"h\" === o[u][0] ? (e += Math.abs(o[u][1]), i.push(new En(s[0], s[0] + o[u][1], s[1], s[1])), s[0] = o[u][1] + s[0]) : \"V\" === o[u][0] ? (e += Math.abs(s[1] - o[u][1]), i.push(new En(s[0], s[0], s[1], o[u][1])), s[1] = o[u][1]) : \"v\" === o[u][0] ? (e += Math.abs(o[u][1]), i.push(new En(s[0], s[0], s[1], s[1] + o[u][1])), s[1] = o[u][1] + s[1]) : \"z\" === o[u][0] || \"Z\" === o[u][0] ? (e += Math.sqrt(Math.pow(o[0][1] - s[0], 2) + Math.pow(o[0][2] - s[1], 2)), i.push(new En(s[0], o[0][1], s[1], o[0][2])), s = [o[0][1], o[0][2]]) : \"C\" === o[u][0] ? (a = new bn(s[0], s[1], o[u][1], o[u][2], o[u][3], o[u][4], o[u][5], o[u][6]), e += a.getTotalLength(), s = [o[u][5], o[u][6]], i.push(a)) : \"c\" === o[u][0] ? (a = new bn(s[0], s[1], s[0] + o[u][1], s[1] + o[u][2], s[0] + o[u][3], s[1] + o[u][4], s[0] + o[u][5], s[1] + o[u][6]), e += a.getTotalLength(), s = [o[u][5] + s[0], o[u][6] + s[1]], i.push(a)) : \"S\" === o[u][0] ? (a = u > 0 && [\"C\", \"c\", \"S\", \"s\"].indexOf(o[u - 1][0]) > -1 ? new bn(s[0], s[1], 2 * s[0] - o[u - 1][o[u - 1].length - 4], 2 * s[1] - o[u - 1][o[u - 1].length - 3], o[u][1], o[u][2], o[u][3], o[u][4]) : new bn(s[0], s[1], s[0], s[1], o[u][1], o[u][2], o[u][3], o[u][4]), e += a.getTotalLength(), s = [o[u][3], o[u][4]], i.push(a)) : \"s\" === o[u][0] ? (a = u > 0 && [\"C\", \"c\", \"S\", \"s\"].indexOf(o[u - 1][0]) > -1 ? new bn(s[0], s[1], s[0] + a.d.x - a.c.x, s[1] + a.d.y - a.c.y, s[0] + o[u][1], s[1] + o[u][2], s[0] + o[u][3], s[1] + o[u][4]) : new bn(s[0], s[1], s[0], s[1], s[0] + o[u][1], s[1] + o[u][2], s[0] + o[u][3], s[1] + o[u][4]), e += a.getTotalLength(), s = [o[u][3] + s[0], o[u][4] + s[1]], i.push(a)) : \"Q\" === o[u][0] ? (a = new bn(s[0], s[1], o[u][1], o[u][2], o[u][3], o[u][4]), e += a.getTotalLength(), i.push(a), s = [o[u][3], o[u][4]], h = [o[u][1], o[u][2]]) : \"q\" === o[u][0] ? (a = new bn(s[0], s[1], s[0] + o[u][1], s[1] + o[u][2], s[0] + o[u][3], s[1] + o[u][4]), e += a.getTotalLength(), h = [s[0] + o[u][1], s[1] + o[u][2]], s = [o[u][3] + s[0], o[u][4] + s[1]], i.push(a)) : \"T\" === o[u][0] ? (a = u > 0 && [\"Q\", \"q\", \"T\", \"t\"].indexOf(o[u - 1][0]) > -1 ? new bn(s[0], s[1], 2 * s[0] - h[0], 2 * s[1] - h[1], o[u][1], o[u][2]) : new En(s[0], o[u][1], s[1], o[u][2]), i.push(a), e += a.getTotalLength(), h = [2 * s[0] - h[0], 2 * s[1] - h[1]], s = [o[u][1], o[u][2]]) : \"t\" === o[u][0] ? (a = u > 0 && [\"Q\", \"q\", \"T\", \"t\"].indexOf(o[u - 1][0]) > -1 ? new bn(s[0], s[1], 2 * s[0] - h[0], 2 * s[1] - h[1], s[0] + o[u][1], s[1] + o[u][2]) : new En(s[0], s[0] + o[u][1], s[1], s[1] + o[u][2]), e += a.getTotalLength(), h = [2 * s[0] - h[0], 2 * s[1] - h[1]], s = [o[u][1] + s[0], o[u][2] + s[0]], i.push(a)) : \"A\" === o[u][0] ? (a = new _n(s[0], s[1], o[u][1], o[u][2], o[u][3], o[u][4], o[u][5], o[u][6], o[u][7]), e += a.getTotalLength(), s = [o[u][6], o[u][7]], i.push(a)) : \"a\" === o[u][0] && (a = new _n(s[0], s[1], o[u][1], o[u][2], o[u][3], o[u][4], o[u][5], s[0] + o[u][6], s[1] + o[u][7]), e += a.getTotalLength(), s = [s[0] + o[u][6], s[1] + o[u][7]], i.push(a)), r.push(e);\n      }\n\n      return n;\n    }\n\n    var e = 0,\n        r = [],\n        i = [];\n    n.getTotalLength = function () {\n      return e;\n    }, n.getPointAtLength = function (t) {\n      var n = a(t);\n      return i[n.i].getPointAtLength(n.fraction);\n    }, n.getTangentAtLength = function (t) {\n      var n = a(t);\n      return i[n.i].getTangentAtLength(n.fraction);\n    }, n.getPropertiesAtLength = function (t) {\n      var n = a(t);\n      return i[n.i].getPropertiesAtLength(n.fraction);\n    };\n\n    var a = function a(t) {\n      t < 0 ? t = 0 : t > e && (t = e);\n\n      for (var n = r.length - 1; r[n] >= t && r[n] > 0;) {\n        n--;\n      }\n\n      return n++, {\n        fraction: t - r[n - 1],\n        i: n\n      };\n    };\n\n    return n(t);\n  },\n      Cn = 'All shapes must be supplied as arrays of [x, y] points or an SVG path string (https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d).\\nExample valid ways of supplying a shape would be:\\n[[0, 0], [10, 0], [10, 10]]\\n\"M0,0 L10,0 L10,10Z\"\\n',\n      Zn = \"flubber.all() expects two arrays of equal length as arguments. Each element in both arrays should be an array of [x, y] points or an SVG path string (https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d).\",\n      Tn = function Tn(t, n) {\n    for (var e, r, i, a = t.length, o = 1 / 0, s = 0; s < a; s++) {\n      !function (i) {\n        r = 0, n.forEach(function (n, e) {\n          var o = F(t[(i + e) % a], n);\n          r += o * o;\n        }), r < o && (o = r, e = i);\n      }(s);\n    }\n\n    e && (i = t.splice(0, e), t.splice.apply(t, [t.length, 0].concat(i)));\n  },\n      Fn = function Fn(t, n, e) {\n    void 0 === e && (e = {});\n    var r = e.maxSegmentLength;\n    void 0 === r && (r = 10);\n    var i = e.string;\n    void 0 === i && (i = !0);\n    var a = J(t, r),\n        o = J(n, r),\n        s = tt(a, o, i);\n    return !i || \"string\" != typeof t && \"string\" != typeof n ? s : function (e) {\n      return e < 1e-4 && \"string\" == typeof t ? t : 1 - e < 1e-4 && \"string\" == typeof n ? n : s(e);\n    };\n  },\n      zn = nt;\n\n  nt.deviation = function (t, n, e, r) {\n    var i = n && n.length,\n        a = i ? n[0] * e : t.length,\n        o = Math.abs(Et(t, 0, a, e));\n    if (i) for (var s = 0, h = n.length; s < h; s++) {\n      var u = n[s] * e,\n          c = s < h - 1 ? n[s + 1] * e : t.length;\n      o -= Math.abs(Et(t, u, c, e));\n    }\n    var f = 0;\n\n    for (s = 0; s < r.length; s += 3) {\n      var l = r[s] * e,\n          p = r[s + 1] * e,\n          g = r[s + 2] * e;\n      f += Math.abs((t[l] - t[g]) * (t[p + 1] - t[l + 1]) - (t[l] - t[p]) * (t[g + 1] - t[l + 1]));\n    }\n\n    return 0 === o && 0 === f ? 0 : Math.abs((f - o) / o);\n  }, nt.flatten = function (t) {\n    for (var n = t[0][0].length, e = {\n      vertices: [],\n      holes: [],\n      dimensions: n\n    }, r = 0, i = 0; i < t.length; i++) {\n      for (var a = 0; a < t[i].length; a++) {\n        for (var o = 0; o < n; o++) {\n          e.vertices.push(t[i][a][o]);\n        }\n      }\n\n      i > 0 && (r += t[i - 1].length, e.holes.push(r));\n    }\n\n    return e;\n  };\n\n  var jn = function jn(t) {\n    return t;\n  },\n      In = function In(t) {\n    if (null == t) return jn;\n    var n,\n        e,\n        r = t.scale[0],\n        i = t.scale[1],\n        a = t.translate[0],\n        o = t.translate[1];\n    return function (t, s) {\n      s || (n = e = 0);\n      var h = 2,\n          u = t.length,\n          c = new Array(u);\n\n      for (c[0] = (n += t[0]) * r + a, c[1] = (e += t[1]) * i + o; h < u;) {\n        c[h] = t[h], ++h;\n      }\n\n      return c;\n    };\n  },\n      Vn = function Vn(t, n) {\n    for (var e, r = t.length, i = r - n; i < --r;) {\n      e = t[i], t[i++] = t[r], t[r] = e;\n    }\n  },\n      Xn = function Xn(t, n) {\n    return \"GeometryCollection\" === n.type ? {\n      type: \"FeatureCollection\",\n      features: n.geometries.map(function (n) {\n        return St(t, n);\n      })\n    } : St(t, n);\n  },\n      Yn = function Yn(t, n) {\n    function e(n) {\n      var e,\n          r = t.arcs[n < 0 ? ~n : n],\n          i = r[0];\n      return t.transform ? (e = [0, 0], r.forEach(function (t) {\n        e[0] += t[0], e[1] += t[1];\n      })) : e = r[r.length - 1], n < 0 ? [e, i] : [i, e];\n    }\n\n    function r(t, n) {\n      for (var e in t) {\n        var r = t[e];\n        delete n[r.start], delete r.start, delete r.end, r.forEach(function (t) {\n          i[t < 0 ? ~t : t] = 1;\n        }), s.push(r);\n      }\n    }\n\n    var i = {},\n        a = {},\n        o = {},\n        s = [],\n        h = -1;\n    return n.forEach(function (e, r) {\n      var i,\n          a = t.arcs[e < 0 ? ~e : e];\n      a.length < 3 && !a[1][0] && !a[1][1] && (i = n[++h], n[h] = e, n[r] = i);\n    }), n.forEach(function (t) {\n      var n,\n          r,\n          i = e(t),\n          s = i[0],\n          h = i[1];\n      if (n = o[s]) {\n        if (delete o[n.end], n.push(t), n.end = h, r = a[h]) {\n          delete a[r.start];\n          var u = r === n ? n : n.concat(r);\n          a[u.start = n.start] = o[u.end = r.end] = u;\n        } else a[n.start] = o[n.end] = n;\n      } else if (n = a[h]) {\n        if (delete a[n.start], n.unshift(t), n.start = s, r = o[s]) {\n          delete o[r.end];\n          var c = r === n ? n : r.concat(n);\n          a[c.start = r.start] = o[c.end = n.end] = c;\n        } else a[n.start] = o[n.end] = n;\n      } else n = [t], a[n.start = s] = o[n.end = h] = n;\n    }), r(o, a), r(a, o), n.forEach(function (t) {\n      i[t < 0 ? ~t : t] || s.push([t]);\n    }), s;\n  },\n      Gn = function Gn(t, n) {\n    for (var e = 0, r = t.length; e < r;) {\n      var i = e + r >>> 1;\n      t[i] < n ? e = i + 1 : r = i;\n    }\n\n    return e;\n  },\n      On = function On(t) {\n    function n(t, n) {\n      t.forEach(function (t) {\n        t < 0 && (t = ~t);\n        var e = i[t];\n        e ? e.push(n) : i[t] = [n];\n      });\n    }\n\n    function e(t, e) {\n      t.forEach(function (t) {\n        n(t, e);\n      });\n    }\n\n    function r(t, n) {\n      \"GeometryCollection\" === t.type ? t.geometries.forEach(function (t) {\n        r(t, n);\n      }) : t.type in o && o[t.type](t.arcs, n);\n    }\n\n    var i = {},\n        a = t.map(function () {\n      return [];\n    }),\n        o = {\n      LineString: n,\n      MultiLineString: e,\n      Polygon: e,\n      MultiPolygon: function MultiPolygon(t, n) {\n        t.forEach(function (t) {\n          e(t, n);\n        });\n      }\n    };\n    t.forEach(r);\n\n    for (var s in i) {\n      for (var h = i[s], u = h.length, c = 0; c < u; ++c) {\n        for (var f = c + 1; f < u; ++f) {\n          var l,\n              p = h[c],\n              g = h[f];\n          (l = a[p])[s = Gn(l, g)] !== g && l.splice(s, 0, g), (l = a[g])[s = Gn(l, p)] !== p && l.splice(s, 0, p);\n        }\n      }\n    }\n\n    return a;\n  },\n      Dn = function Dn(t, n) {\n    return t < n ? -1 : t > n ? 1 : t >= n ? 0 : NaN;\n  },\n      Hn = function Hn(t) {\n    return 1 === t.length && (t = Ft(t)), {\n      left: function left(n, e, r, i) {\n        for (null == r && (r = 0), null == i && (i = n.length); r < i;) {\n          var a = r + i >>> 1;\n          t(n[a], e) < 0 ? r = a + 1 : i = a;\n        }\n\n        return r;\n      },\n      right: function right(n, e, r, i) {\n        for (null == r && (r = 0), null == i && (i = n.length); r < i;) {\n          var a = r + i >>> 1;\n          t(n[a], e) > 0 ? i = a : r = a + 1;\n        }\n\n        return r;\n      }\n    };\n  },\n      Nn = Hn(Dn),\n      Qn = (Nn.right, Math.sqrt(50), Math.sqrt(10), Math.sqrt(2), function (t, n) {\n    return jt(zt(It(t), t), n);\n  }),\n      Un = function Un(t, n) {\n    if (t.length > 8) return t.map(function (t, n) {\n      return n;\n    });\n    var e = t.map(function (t) {\n      return n.map(function (n) {\n        return Xt(t, n);\n      });\n    });\n    return Vt(t, n, e);\n  };\n\n  t.interpolate = Fn, t.separate = Yt, t.combine = Gt, t.interpolateAll = Ot, t.splitPathString = N, t.toPathString = H, t.fromCircle = Ht, t.toCircle = Nt, t.fromRect = Qt, t.toRect = Ut, Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"washing-module--left--1Or9d\",\"moveLeft\":\"washing-module--moveLeft--3QZU2\",\"right\":\"washing-module--right--3XrJs\",\"moveRight\":\"washing-module--moveRight--2TSMG\"};","module.exports = __webpack_public_path__ + \"static/BiryaniShowCase-593e35771ec0fb252c351760ca5133a0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"mandala-module--svg--1TZ0X\",\"spin\":\"mandala-module--spin--3Vtfb\",\"rotate\":\"mandala-module--rotate--2gUa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"padding\":\"testimonialCard-module--padding--iYOPZ\",\"container\":\"testimonialCard-module--container--38DGu\",\"imgContainer\":\"testimonialCard-module--imgContainer--3m-vm\",\"info\":\"testimonialCard-module--info--1IWJM\"};","module.exports = __webpack_public_path__ + \"static/mutton-d4bd9c4634642220005290007ee80bf3.png\";","module.exports = __webpack_public_path__ + \"static/center-decoration-13abcc6c6bedb7345b42c7e722af1e8d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductList-module--container--3ENsT\",\"products\":\"ProductList-module--products--1cBTW\",\"wave\":\"ProductList-module--wave--1xsIc\",\"flow\":\"ProductList-module--flow--1MOU2\",\"wave1\":\"ProductList-module--wave1--AXdmp\",\"flow1\":\"ProductList-module--flow1--2MTAN\",\"wave2\":\"ProductList-module--wave2--2QCh2\",\"smallScreen\":\"ProductList-module--smallScreen--3glO1\",\"bigScreen\":\"ProductList-module--bigScreen--24_Zk\"};","import React, { useState, useEffect } from \"react\"\nimport Img from './HomeImages'\nimport img from \"../images/BiryaniShowCase.png\"\nimport img2 from \"../images/mutton.png\"\nimport styles from \"../styles/showcase.module.css\"\n\nfunction Showcase() {\n  var imageSources = [<Img  className={`${styles.image}`} src=\"chicken\"/>, <Img className={`${styles.image}`} src=\"mutton\"/>]\n  const [sourceIndex, setSourceIndex] = useState(0)\n  useEffect(() => {\n    const handleChange = () => {\n      const imgElement = document.querySelector(`.${styles.image}`)\n      // console.log(\"QUERY\",imgElement)\n      Object.assign(imgElement.style, { transform: \"scale(0.8)\", opacity: 0 }) //Make the Image fade out first\n      setTimeout(() => {\n        setSourceIndex(state => (state + 1) % imageSources.length) //Update the source after 250ms\n        setTimeout(() => {\n          Object.assign(imgElement.style, {\n            transform: \"scale(1.1)\",\n            opacity: 1,\n          }) //Make the Image fade In after 250ms\n        }, 350)\n      }, 350)\n\n      // console.log(\"TRIGGER\")\n    }\n    var changeImg = setInterval(handleChange, 3000)\n    return () => {\n      clearInterval(changeImg)\n    }\n  }, [])\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.left}>N.K.</h2>\n      {imageSources[sourceIndex]}\n      {/* <img\n        id=\"showcase-image\"\n        className={styles.image}\n        src={imageSources[sourceIndex]}\n      /> */}\n\n      <div className={styles.info}>\n        <h3>Authentic Mughal Taste</h3>\n        <p className=\"text-mute\">\n          Biryani Royale promises you the flavour for which we have come to be\n          known. Perfecting our craft for over 30 years.\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Showcase\n","import React from \"react\"\nimport styles from '../styles/mandala.module.css'\n\nfunction Mandala() {\n  return (\n\n      <svg\n      className={styles.svg}\n        width=\"626\"\n        height=\"626\"\n        viewBox=\"0 0 626 626\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"Group\">\n          <g className={styles.innerCircle} id=\"innerCircle\">\n            <path\n              id=\"Vector\"\n              d=\"M433.784 526.793C433.784 526.793 434.607 525.623 433.013 525.392C419.266 528.953 409.699 523.013 400.325 522.383C391.388 522.228 392.301 532.194 397.933 533.531C403.836 534.663 403.566 536.334 403.566 536.334C403.566 536.334 402.112 538.585 395.181 536.823C389.601 535.692 385.267 538.456 386.463 544.757C388.623 550.737 394.577 551.534 398.396 546.467C402.923 540.411 405.43 541.375 405.43 541.375C405.43 541.375 406.806 542.262 402.768 547.329C398.821 552.048 404.118 560.394 412.31 553.964C420.604 547.663 422.725 535.28 433.784 526.793Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_2\"\n              d=\"M409.121 495.867C407.938 493.926 406.227 491.881 404.504 492.421C401.47 493.9 400.891 500.471 405.044 507.968C409.146 515.104 415.717 518.846 421.504 520.672C427.278 522.524 432.125 522.55 432.125 522.55C432.177 522.653 439.288 522.627 432.048 518.679C424.77 514.153 421.208 505.794 420.591 498.966C419.626 490.762 414.869 489.283 413.789 489.476C412.438 490.119 410.869 490.839 411.885 494.53C413.12 497.963 410.381 497.963 409.121 495.867Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_3\"\n              d=\"M448.276 551.701C442.194 547.226 437.951 539.163 438.504 531.178C439.262 522.845 435.443 528.761 435.392 528.683C435.392 528.683 432.46 532.387 429.965 538.16C427.471 543.921 425.22 551.817 427.149 559.918C429.309 568.7 435.443 571.889 439.867 569.755C442.451 568.379 442.104 565.563 441.191 563.621C440.69 561.165 443.159 558.812 445.242 561.667C447.505 564.881 450.089 563.48 451.607 562.438C453.279 561.628 455.902 556.793 448.276 551.701Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_4\"\n              d=\"M374.697 557.166C376.678 559.416 377.732 560.239 377.436 562.67C376.729 565.216 372.164 566.656 372.614 560.458C373.193 553.398 384.496 546.917 384.496 546.917C384.496 546.917 386.335 544.23 383.66 543.793C383.66 543.793 370.775 543.523 367.831 537.389C365.272 532.245 369.297 531.487 370.814 533.3C372.023 535.344 371.547 536.424 370.801 539.433C370.801 539.433 377.976 537.826 377.321 529.686C376.691 522.948 368.435 518.486 363.793 523.758C358.727 528.529 360.051 534.316 363.021 537.942C363.021 537.942 360.668 534.419 356.926 531.937C353.133 529.404 348.157 528.285 341.766 532.348C331.183 538.199 332.469 543.793 320.934 551.367C320.934 551.354 329.884 555.057 338.859 545.619C345.508 538.791 355.062 538.469 360.411 541.877C369.374 548.268 372.293 547.355 377.912 547.097C372.691 549.553 370.145 550.441 363.266 558.619C359.048 562.914 348.234 567.44 339.978 560.702C329.357 551.958 320.921 555.61 320.934 555.61C332.983 561.95 332.276 568.739 345.623 573.625C353.994 576.159 359.704 572.79 363.021 569.279C366.339 565.691 367.419 561.577 367.419 561.577C365.735 566.013 366.056 571.967 374.067 574.654C381.86 576.956 389.009 568.649 385.782 562.322C382.13 554.98 374.697 557.166 374.697 557.166Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_5\"\n              d=\"M348.928 561.024C354.984 559.982 358.752 553.077 358.752 553.077C361.542 553.373 364.577 552.742 366.892 552.035C369.219 551.367 370.801 550.454 370.801 550.454C370.801 550.454 373.681 548.319 370.196 547.547C370.196 547.547 368.422 547.457 366.004 547.329C363.587 547.303 360.565 547.496 358.045 548.409C358.045 548.409 352.567 543.034 347.038 543.87C340.197 544.68 340.235 549.991 328.932 553.707C340.415 555.854 341.56 561.898 348.928 561.024Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_6\"\n              d=\"M557.783 351.538C553.476 364.873 541.08 368.538 535.962 375.88C530.767 383.043 538.572 388.045 543.471 384.522C548.113 380.535 549.116 381.731 549.116 381.731C549.116 381.731 550.235 384.29 544.243 388.636C539.498 392.224 539.678 397.586 545.336 400.415C551.495 402.293 555.134 397.831 553.874 391.903C552.203 384.779 554.234 383.261 554.234 383.261C554.234 383.261 555.945 382.786 557.372 388.958C558.323 394.809 568.881 395.799 568.353 385.332C567.312 374.723 560.587 365.94 559.378 351.795C559.365 351.783 558.876 350.407 557.783 351.538Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_7\"\n              d=\"M527.012 363.381C535.177 364.384 542.61 361.504 547.483 357.968C552.228 354.457 554.967 350.561 554.967 350.561C554.967 350.561 559.365 344.89 551.765 348.272C543.999 351.41 535.126 349.185 529.172 345.533C521.945 341.367 517.972 344.273 517.573 345.263C517.342 346.755 517.098 348.452 520.672 349.867C524.157 350.947 522.64 353.171 520.222 352.889C517.946 352.657 515.439 352.811 514.654 354.496C513.793 357.775 518.474 362.16 527.012 363.381Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_8\"\n              d=\"M594.38 363.703C598.276 363.819 598.598 360.9 598.585 359.035C598.868 357.183 596.412 352.194 587.925 355.229C580.839 357.376 571.877 355.936 565.627 350.664C559.468 345.032 561.808 351.667 561.808 351.667C561.808 351.667 563.21 356.232 566.527 361.761C569.716 367.239 574.166 373.694 581.804 377.038C590.033 380.6 596.489 377.668 597.659 372.897C598.263 370.029 595.769 368.602 593.647 368.178C591.384 367.059 590.856 363.639 594.38 363.703Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_9\"\n              d=\"M558.606 346.022C560.587 347.051 566.695 349.018 567.505 346.176C568.353 343.154 564.251 340.21 565.062 330.63C565.679 323.596 563.21 313.823 561.911 313.334C561.911 313.334 561.435 312.55 560.574 313.334C559.468 314.144 555.777 323.249 555.7 330.231C555.829 339.605 549.721 340.891 550.004 343.823C550.145 346.613 556.125 346.459 558.606 346.022Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_10\"\n              d=\"M559.185 411.628C551.354 410.214 548.088 417.261 548.088 417.261C551.148 417.042 552.485 416.733 554.221 418.418C555.777 420.475 553.938 424.886 549.348 420.835C546.737 418.521 546.017 414.136 545.927 410.394C545.927 406.69 546.017 403.334 546.017 403.334C546.017 403.334 544.873 400.222 543.021 402.126C543.304 402.293 534.933 412.168 528.053 410.767C522.318 409.661 524.363 406.086 526.78 405.97C529.185 406.253 529.725 407.308 531.577 409.635C531.577 409.635 535.139 403.206 528.028 398.692C522.421 395.207 513.587 398.975 514.718 405.739C515.747 412.798 521.148 415.216 525.713 414.959C525.713 414.959 521.547 414.727 517.47 416.309C513.574 418.045 508.829 420.861 508.366 428.461C507.376 439.712 511.337 442.618 511.079 453.214C506.502 456.403 494.89 463.373 486.442 458.731C477.235 454.294 481.735 449.691 485.58 451.247C489.399 452.816 490.222 454.59 492.28 458.885C492.28 458.885 494.363 457.008 494.761 453.458C495.289 449.987 494.543 445.383 489.669 440.6C480.745 432.666 466.883 434.646 466.125 445.229C465.97 455.953 473.724 462.46 481.465 464.324C481.465 464.324 474.83 462.164 467.578 462.164C459.939 461.971 452.841 464.633 448.945 475.267C445.602 483.999 445.344 490.222 445.164 496.742C444.856 501.641 444.47 506.733 442.168 513.536C438.362 514.243 435.893 513.15 434.44 514.449C432.383 516.365 436.06 521.019 437.925 522.704C438.298 524.967 440.419 531.037 443.133 529.866C444.496 529.326 445.152 527.77 446.309 525.829C467.629 525.636 473.621 534.161 495.983 528.233C509.974 523.141 514.77 513.214 515.297 505.164C515.67 496.819 512.481 490.351 512.481 490.351C515.297 498.156 522.28 505.576 535.653 500.407C542.494 497.719 545.786 491.341 545.85 485.49C545.979 479.626 542.905 474.303 537.042 472.323C530.612 469.841 525.636 471.217 522.305 473.223C519.039 475.28 517.02 477.775 517.02 477.775C522.665 478.559 524.466 478.649 526.742 481.723C528.979 485.259 523.733 491.83 517.779 483.741C514.448 478.996 515.001 471.77 515.619 465.417C515.979 462.576 516.493 460.119 516.956 458.165C527.77 454.371 533.107 457.869 543.613 450.359C550.569 445.139 552.151 439.031 550.916 434.041C549.913 429.129 547.226 425.76 547.226 425.76C549.836 429.824 554.813 433.167 561.487 428.242C568.353 423.471 566.36 412.94 559.185 411.628ZM482.327 472.22C490.094 471.525 495.057 470.445 498.876 468.928C497.886 469.584 496.176 470.741 494.196 472.374C491.084 474.766 487.972 478.469 485.606 481.941C485.606 481.941 472.425 479.832 466.575 485.657C460.209 490.981 462.177 496.986 458.281 506.077C457.432 506.425 456.506 506.875 455.619 507.286C457.02 504.303 458.165 500.805 458.563 496.33C460.531 480.9 472.245 472.67 482.327 472.22ZM503.93 491.225C504.2 496.42 501.139 502.4 496.163 507.62C493.656 510.167 490.582 512.443 487.123 514.05C483.484 515.452 479.356 516.133 475.023 515.863C463.694 515.387 456.48 517.869 451.362 520.196C452.147 519.618 453.021 519.052 454.05 518.499C456.467 517.213 458.666 515.13 460.634 512.996C472.464 510.539 479.215 513.818 486.545 507.196C493.54 499.905 491.225 487.419 491.225 487.419C495.237 485.22 498.053 480.9 500.291 477.633C502.451 474.264 503.66 471.59 503.66 471.59C503.66 471.59 504.418 467.385 500.342 468.298C504.11 466.536 506.72 464.273 509.974 461.328C506.643 470.111 503.403 472.798 503.93 491.225ZM530.111 447.119C524.208 448.881 520.325 451.388 517.933 453.767C517.753 453.124 517.226 451.748 515.773 451.35C517.406 448.598 518.653 444.65 517.38 438.954C515.091 429.026 522.254 422.147 527.423 419.498C537.453 415.962 538.778 413.21 542.25 408.696C540.784 414.213 539.626 416.63 542.52 427.303C544.165 433.694 539.601 444.071 530.111 447.119Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_11\"\n              d=\"M537.595 414.972C537.595 414.972 532.708 420.179 531.384 425.413C531.384 425.413 529.583 425.76 527.23 426.609C524.916 427.458 522.254 428.885 520.801 431.277C517.033 437.063 522.177 440.792 517.908 451.787C526.947 444.161 531.577 446.296 535.614 440.085C537.145 437.449 537.17 434.311 536.785 431.881C536.463 429.476 535.511 427.638 535.511 427.638C539.112 423.459 540.256 416.232 540.256 416.232C540.256 416.232 540.424 412.773 537.595 414.972Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_12\"\n              d=\"M100.441 390.012C99.3098 395.902 97.6252 395.645 97.6252 395.645C97.6252 395.645 95.3878 394.204 97.1366 387.273C98.2682 381.68 95.5164 377.346 89.2155 378.516C83.2232 380.702 82.4259 386.656 87.5052 390.475C93.5361 395.002 92.6102 397.509 92.6102 397.509C92.6102 397.509 91.7101 398.859 86.6694 394.847C81.9244 390.9 73.6047 396.197 80.0342 404.363C86.2836 412.67 98.6668 414.792 107.141 425.863C107.141 425.863 108.311 426.686 108.555 425.104C104.993 411.345 110.921 401.791 111.564 392.404C111.732 383.429 101.779 384.393 100.441 390.012Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_13\"\n              d=\"M115.242 424.089C119.742 416.823 128.127 413.261 134.967 412.644C143.159 411.68 144.637 406.909 144.47 405.855C143.827 404.492 143.094 402.923 139.417 403.939C135.996 405.173 135.996 402.421 138.092 401.174C140.034 399.978 142.066 398.293 141.513 396.558C140.034 393.536 133.476 392.957 125.979 397.098C118.842 401.2 115.113 407.771 113.274 413.57C111.423 419.318 111.397 424.166 111.397 424.166C111.268 424.243 111.307 431.341 115.242 424.089Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_14\"\n              d=\"M105.264 427.432C105.264 427.432 101.56 424.513 95.7865 422.005C90.0129 419.524 82.1046 417.273 74.0035 419.228C65.2208 421.388 62.0446 427.522 64.1664 431.933C65.568 434.517 68.3712 434.17 70.3001 433.244C72.769 432.781 75.1222 435.25 72.2675 437.308C69.0656 439.571 70.4544 442.155 71.5217 443.673C72.3318 445.332 77.1668 447.955 82.2461 440.329C86.721 434.26 94.7707 430.017 102.756 430.544C111.102 431.302 105.161 427.496 105.264 427.432Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_15\"\n              d=\"M71.6115 377.835C78.9539 374.196 76.7808 366.738 76.7808 366.738C74.5305 368.731 73.6946 369.785 71.2771 369.477C68.7311 368.795 67.3037 364.23 73.4889 364.654C80.5484 365.259 87.0294 376.562 87.0294 376.562C87.0294 376.562 89.7169 378.401 90.1541 375.726C90.1541 375.726 90.4241 362.841 96.5579 359.897C101.701 357.338 102.46 361.375 100.647 362.88C98.6024 364.114 97.5094 363.613 94.539 362.867C94.539 362.867 96.1464 370.042 104.273 369.412C111.024 368.757 115.461 360.501 110.188 355.859C105.405 350.767 99.6311 352.117 96.0178 355.087C96.0178 355.087 99.554 352.721 102.01 348.979C104.556 345.186 105.675 340.21 101.599 333.819C95.7349 323.261 90.1669 324.535 82.593 313C82.593 313 78.8896 321.95 88.341 330.925C95.1819 337.586 95.4906 347.128 92.0958 352.477C85.7049 361.44 86.6307 364.372 86.8622 369.978C84.4061 364.783 83.5446 362.211 75.3406 355.332C71.0328 351.114 66.5193 340.287 73.2446 332.057C81.9887 321.423 78.3238 313 78.3238 313C71.9844 325.062 65.2206 324.342 60.3084 337.689C57.7752 346.06 61.1571 351.796 64.6548 355.1C68.2424 358.431 72.3444 359.498 72.3444 359.498C67.9081 357.814 61.9544 358.135 59.2797 366.146C56.9908 373.926 65.272 381.063 71.6115 377.835Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_16\"\n              d=\"M80.2271 320.934C78.1053 332.456 72.0488 333.6 72.9232 340.994C73.9519 347.025 80.8829 350.805 80.8829 350.805C80.5871 353.583 81.2172 356.618 81.9245 358.932C82.5803 361.273 83.5061 362.841 83.5061 362.841C83.5061 362.841 85.6407 365.722 86.4122 362.237C86.4122 362.237 86.5023 360.475 86.618 358.045C86.6437 355.627 86.4637 352.606 85.5507 350.098C85.5507 350.098 90.9257 344.607 90.077 339.104C89.2412 332.198 83.9433 332.25 80.2271 320.934Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_17\"\n              d=\"M282.409 549.836C269.061 545.529 265.409 533.133 258.067 528.028C250.917 522.833 245.902 530.638 249.438 535.537C253.412 540.166 252.216 541.182 252.216 541.169C252.216 541.169 249.657 542.301 245.311 536.296C241.697 531.551 236.348 531.744 233.532 537.389C231.629 543.548 236.103 547.187 242.044 545.914C249.155 544.256 250.66 546.274 250.66 546.274C250.66 546.3 251.148 548.01 244.963 549.412C239.1 550.364 238.11 560.921 248.59 560.394C259.224 559.365 267.981 552.627 282.126 551.418C282.151 551.418 283.54 550.929 282.409 549.836Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_18\"\n              d=\"M285.675 543.818C282.537 536.039 284.762 527.179 288.414 521.212C292.58 513.973 289.674 510.025 288.709 509.614C287.192 509.382 285.508 509.138 284.08 512.7C283 516.184 280.788 514.654 281.046 512.263C281.277 509.999 281.11 507.492 279.438 506.707C276.172 505.846 271.8 510.527 270.578 519.078C269.563 527.23 272.456 534.65 275.992 539.524C279.515 544.268 283.399 547.007 283.399 547.007C283.399 547.007 289.057 551.405 285.675 543.818Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_19\"\n              d=\"M282.293 553.861C282.293 553.861 277.702 555.263 272.186 558.555C266.708 561.744 260.265 566.219 256.922 573.831C253.347 582.087 256.305 588.516 261.075 589.686C263.93 590.303 265.357 587.796 265.782 585.674C266.888 583.373 270.295 582.858 270.244 586.394C270.115 590.291 273.034 590.612 274.899 590.612C276.738 590.882 281.765 588.413 278.705 579.939C276.558 572.841 277.998 563.891 283.27 557.667C288.915 551.508 282.293 553.861 282.293 553.861Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_20\"\n              d=\"M303.703 547.766C294.329 547.895 293.017 541.787 290.111 542.07C287.334 542.224 287.475 548.19 287.925 550.698C286.884 552.665 284.903 558.773 287.784 559.596C290.818 560.432 293.737 556.33 303.317 557.14C310.351 557.758 320.124 555.301 320.613 553.99C320.613 553.99 321.397 553.514 320.613 552.653C319.79 551.534 310.686 547.843 303.703 547.766Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_21\"\n              d=\"M223.18 520.081C224.273 514.346 227.861 516.403 227.964 518.795C227.681 521.212 226.652 521.74 224.299 523.591C224.299 523.591 230.741 527.153 235.242 520.055C238.727 514.449 234.946 505.614 228.208 506.759C221.148 507.788 218.731 513.175 218.975 517.74C218.975 517.74 219.207 513.574 217.625 509.498C215.902 505.602 213.073 500.869 205.46 500.394C194.209 499.404 191.328 503.364 180.733 503.12C177.544 498.529 170.561 486.93 175.216 478.469C179.64 469.262 184.256 473.776 182.7 477.608C181.131 481.427 179.357 482.25 175.062 484.307C175.062 484.307 176.965 486.403 180.501 486.789C183.96 487.316 188.564 486.57 193.36 481.697C201.307 472.773 199.301 458.911 188.718 458.152C177.981 458.011 171.474 465.764 169.61 473.48C169.61 473.493 171.783 466.858 171.757 459.592C171.963 451.967 169.288 444.856 158.68 440.972C149.948 437.616 143.712 437.359 137.205 437.179C132.306 436.858 127.214 436.497 120.411 434.196C119.717 430.402 120.81 427.933 119.485 426.455C117.569 424.397 112.94 428.075 111.243 429.939C108.993 430.3 102.897 432.408 104.08 435.134C104.62 436.51 106.189 437.153 108.144 438.311C108.324 459.618 99.7984 465.623 105.739 487.985C110.831 501.975 120.758 506.772 128.808 507.299C137.154 507.659 143.622 504.496 143.622 504.496C135.816 507.286 128.422 514.281 133.566 527.655C136.241 534.483 142.632 537.788 148.495 537.852C154.359 537.98 159.67 534.894 161.663 529.031C164.157 522.601 162.756 517.625 160.763 514.294C158.692 511.041 156.223 509.022 156.223 509.022C155.439 514.654 155.349 516.467 152.276 518.743C148.727 520.994 142.156 515.747 150.244 509.794C155.002 506.476 162.216 507.029 168.568 507.633C171.397 507.993 173.879 508.508 175.833 508.971C179.614 519.785 176.129 525.109 183.639 535.627C188.872 542.584 194.968 544.178 199.957 542.931C204.856 541.928 208.212 539.215 208.212 539.215C204.149 541.851 200.806 546.802 205.73 553.488C210.463 560.291 220.994 558.31 222.306 551.135C223.72 543.317 216.686 540.038 216.686 540.038C216.905 543.098 217.226 544.448 215.542 546.172C213.472 547.727 209.074 545.889 213.112 541.298C215.426 538.688 219.811 537.968 223.553 537.878C227.269 537.865 230.613 537.955 230.613 537.955C230.613 537.955 233.737 536.81 231.821 534.971C231.667 535.344 221.766 526.947 223.18 520.081ZM137.617 450.591C153.022 452.571 161.277 464.299 161.727 474.38C162.409 482.147 163.502 487.11 165.006 490.917C164.363 489.952 163.193 488.216 161.573 486.236C159.194 483.15 155.491 480.025 152.006 477.672C152.006 477.672 154.115 464.466 148.29 458.615C142.966 452.25 136.974 454.217 127.857 450.308C127.522 449.485 127.085 448.546 126.674 447.672C129.657 449.048 133.167 450.192 137.617 450.591ZM142.709 495.97C137.514 496.24 131.521 493.18 126.314 488.203C123.755 485.696 121.491 482.635 119.884 479.189C118.47 475.55 117.801 471.422 118.084 467.089C118.56 455.76 116.065 448.559 113.776 443.454C114.342 444.239 114.895 445.1 115.448 446.116C116.721 448.534 118.817 450.732 120.951 452.7C123.42 464.53 120.116 471.281 126.738 478.611C134.042 485.606 146.528 483.291 146.528 483.291C148.701 487.303 153.034 490.119 156.301 492.357C159.657 494.517 162.331 495.726 162.331 495.726C162.331 495.726 166.549 496.51 165.623 492.408C167.372 496.189 169.661 498.786 172.593 502.04C163.836 498.696 161.148 495.469 142.709 495.97ZM206.656 534.547C200.265 536.232 189.875 531.641 186.828 522.164C185.066 516.236 182.559 512.34 180.18 509.961C180.823 509.781 182.211 509.253 182.61 507.826C185.375 509.446 189.322 510.694 195.019 509.421C204.959 507.119 211.826 514.294 214.462 519.451C218.011 529.468 220.75 530.805 225.263 534.264C219.734 532.85 217.316 531.692 206.656 534.547Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_22\"\n              d=\"M208.508 523.411C208.508 523.411 208.148 521.611 207.325 519.271C206.476 516.943 205.062 514.294 202.657 512.828C196.871 509.061 193.129 514.204 182.147 509.961C189.786 518.975 187.638 523.617 193.862 527.655C196.498 529.172 199.623 529.211 202.053 528.838C204.458 528.529 206.296 527.565 206.296 527.565C210.501 531.178 217.702 532.284 217.702 532.284C217.702 532.284 221.2 532.49 218.963 529.622C218.95 529.635 213.742 524.761 208.508 523.411Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_23\"\n              d=\"M208.109 99.194C208.109 99.194 207.273 100.377 208.868 100.621C222.627 97.0466 232.181 102.987 241.555 103.618C250.505 103.772 249.567 93.819 243.947 92.4816C238.045 91.3501 238.315 89.6784 238.315 89.6784C238.315 89.6784 239.768 87.4281 246.699 89.1897C252.28 90.3213 256.626 87.5567 255.43 81.2558C253.27 75.2763 247.316 74.4791 243.497 79.5455C238.971 85.5892 236.45 84.6505 236.45 84.6505C236.45 84.6505 235.087 83.7504 239.125 78.6968C243.073 73.9647 237.762 65.6321 229.584 72.0616C221.277 78.3368 219.168 90.72 208.109 99.194Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_24\"\n              d=\"M232.773 130.133C233.956 132.074 235.653 134.106 237.389 133.553C240.424 132.087 241.003 125.516 236.849 118.02C232.747 110.883 226.176 107.154 220.377 105.315C214.603 103.463 209.768 103.437 209.768 103.437C209.704 103.322 202.606 103.347 209.833 107.295C217.124 111.796 220.673 120.18 221.277 127.008C222.241 135.212 227.012 136.691 228.079 136.511C229.442 135.868 230.998 135.135 229.995 131.457C228.774 128.05 231.513 128.05 232.773 130.133Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_25\"\n              d=\"M193.617 74.2862C199.687 78.7611 203.93 86.8108 203.377 94.7963C202.631 103.142 206.45 97.2137 206.502 97.3038C206.502 97.3038 209.421 93.6004 211.928 87.8267C214.423 82.053 216.66 74.1576 214.732 66.0565C212.571 57.2738 206.45 54.0848 202.014 56.2065C199.429 57.6081 199.777 60.4114 200.703 62.3531C201.191 64.8092 198.722 67.1623 196.639 64.3077C194.376 61.1058 191.791 62.4945 190.274 63.549C188.615 64.372 185.992 69.2069 193.617 74.2862Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_26\"\n              d=\"M267.209 68.834C265.216 66.5837 264.162 65.7608 264.47 63.3304C265.165 60.7843 269.742 59.357 269.292 65.5422C268.701 72.6017 257.398 79.0826 257.398 79.0826C257.398 79.0826 255.572 81.7702 258.247 82.2074C258.247 82.2074 271.131 82.4774 274.089 88.6111C276.648 93.7547 272.61 94.5134 271.093 92.7003C269.884 90.6557 270.373 89.5755 271.105 86.5794C271.105 86.5794 263.943 88.1868 264.586 96.3265C265.216 103.065 273.484 107.514 278.114 102.242C283.193 97.471 281.868 91.6844 278.885 88.071C278.885 88.071 281.238 91.6073 284.98 94.0762C288.774 96.6094 293.75 97.7281 300.141 93.6647C310.724 87.8139 309.425 82.2202 320.973 74.6463C320.973 74.6592 312.023 70.9558 303.06 80.3942C296.412 87.2352 286.858 87.5438 281.508 84.1362C272.533 77.7453 269.627 78.6711 263.994 78.9155C269.215 76.4594 271.774 75.585 278.641 67.3938C282.859 63.0861 293.686 58.5726 301.916 65.3107C312.55 74.0419 320.985 70.39 320.985 70.39C308.924 64.0505 309.644 57.2738 296.283 52.3746C287.912 49.8414 282.203 53.2104 278.898 56.7209C275.568 60.3085 274.5 64.4106 274.5 64.4106C276.172 59.9742 275.863 54.0334 267.852 51.3459C260.047 49.0441 252.897 57.3381 256.138 63.6776C259.764 71.0072 267.209 68.834 267.209 68.834Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_27\"\n              d=\"M292.966 64.9763C286.922 66.0179 283.141 72.9231 283.141 72.9231C280.364 72.6274 277.329 73.2575 275.014 73.9647C272.687 74.6334 271.105 75.5464 271.105 75.5464C271.105 75.5464 268.238 77.681 271.71 78.4525C271.71 78.4525 273.471 78.5425 275.902 78.6582C278.319 78.6968 281.341 78.5039 283.861 77.5909C283.861 77.5909 289.339 82.966 294.856 82.1173C301.723 81.3201 301.671 76.0093 312.987 72.2802C301.491 70.1585 300.334 64.089 292.966 64.9763Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_28\"\n              d=\"M84.1104 274.462C88.4181 261.114 100.814 257.462 105.932 250.12C111.127 242.97 103.322 237.955 98.4224 241.491C93.7803 245.465 92.7773 244.282 92.7773 244.282C92.7773 244.282 91.6457 241.71 97.6509 237.376C102.396 233.776 102.229 228.414 96.5579 225.598C90.3984 223.707 86.7593 228.182 88.0324 234.11C89.6912 241.221 87.6595 242.739 87.6595 242.739C87.6595 242.739 85.9492 243.227 84.5347 237.042C83.5703 231.178 73.026 230.201 73.5532 240.668C74.5948 251.29 81.3071 260.06 82.5287 274.205C82.5287 274.205 83.0174 275.593 84.1104 274.462Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_29\"\n              d=\"M112.734 280.467C119.961 284.633 123.935 281.727 124.333 280.75C124.565 279.245 124.809 277.548 121.234 276.121C117.749 275.053 119.267 272.829 121.684 273.099C123.947 273.33 126.468 273.163 127.239 271.478C128.114 268.225 123.42 263.84 114.882 262.632C106.729 261.616 99.2968 264.509 94.4233 268.045C89.6783 271.568 86.9394 275.452 86.9394 275.452C86.9394 275.452 82.5416 281.123 90.1413 277.741C97.9081 274.59 106.768 276.802 112.734 280.467Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_30\"\n              d=\"M76.2536 275.336C82.4259 280.968 80.0727 274.346 80.0727 274.346C80.0727 274.346 78.6711 269.768 75.3663 264.239C72.1773 258.761 67.7152 252.319 60.077 248.975C51.8473 245.4 45.4049 248.345 44.2091 253.116C43.6047 255.983 46.1122 257.411 48.2211 257.835C50.51 258.928 51.0243 262.349 47.5138 262.284C43.6176 262.169 43.2832 265.088 43.2961 266.952C43.0132 268.791 45.4692 273.806 53.9562 270.758C61.0543 268.624 70.017 270.064 76.2536 275.336Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_31\"\n              d=\"M91.8902 282.151C91.7488 279.374 85.7694 279.528 83.2747 279.965C81.2944 278.924 75.1993 276.956 74.3763 279.811C73.5276 282.846 77.6296 285.778 76.8324 295.358C76.2151 302.379 78.6712 312.164 79.9828 312.653C79.9828 312.653 80.4586 313.437 81.3201 312.653C82.4132 311.843 86.1037 302.739 86.1937 295.756C86.0651 286.382 92.1603 285.07 91.8902 282.151Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_32\"\n              d=\"M82.709 214.372C90.5273 215.773 93.8063 208.752 93.8063 208.752C90.7459 208.958 89.4085 209.28 87.6854 207.595C86.1295 205.538 87.9683 201.114 92.559 205.165C95.1693 207.479 95.8766 211.864 95.9666 215.606C95.9666 219.322 95.8766 222.666 95.8894 222.666C95.8894 222.666 97.0339 225.79 98.8984 223.887C98.6027 223.72 106.987 213.819 113.866 215.246C119.601 216.339 117.557 219.927 115.139 220.017C112.735 219.747 112.195 218.705 110.343 216.352C110.343 216.352 106.781 222.794 113.892 227.308C119.486 230.793 128.345 227.012 127.201 220.261C126.159 213.202 120.772 210.784 116.207 211.041C116.207 211.041 120.373 211.26 124.449 209.691C128.333 207.955 133.078 205.139 133.553 197.514C134.543 186.262 130.583 183.369 130.84 172.786C135.418 169.597 147.017 162.627 155.478 167.269C164.685 171.693 160.184 176.309 156.352 174.753C152.533 173.184 151.697 171.41 149.64 167.102C149.64 167.102 147.544 169.005 147.145 172.542C146.631 176.001 147.364 180.617 152.237 185.413C161.162 193.347 175.036 191.354 175.782 180.771C175.924 170.034 168.183 163.527 160.454 161.663C160.454 161.663 167.064 163.836 174.342 163.81C181.954 164.016 189.078 161.341 192.975 150.733C196.318 142.002 196.588 135.778 196.768 129.258C197.089 124.359 197.437 119.267 199.751 112.464C203.558 111.77 206.039 112.863 207.492 111.539C209.55 109.635 205.872 104.993 204.008 103.296C203.622 101.046 201.513 94.9506 198.8 96.1336C197.424 96.6865 196.781 98.2425 195.624 100.197C174.303 100.377 168.311 91.8387 145.949 97.7924C131.959 102.885 127.162 112.812 126.635 120.861C126.262 129.207 129.438 135.675 129.438 135.675C126.584 127.87 119.601 120.476 106.228 125.632C99.3871 128.307 96.0952 134.685 96.0309 140.548C95.9023 146.412 98.9885 151.723 104.826 153.716C111.269 156.211 116.232 154.822 119.563 152.816C122.816 150.746 124.848 148.277 124.835 148.264C119.19 147.479 117.39 147.402 115.114 144.329C112.876 140.78 118.135 134.222 124.076 142.297C127.407 147.055 126.854 154.269 126.224 160.621C125.864 163.45 125.349 165.932 124.886 167.887C114.085 171.667 108.736 168.182 98.2169 175.692C91.2602 180.913 89.6786 187.034 90.913 192.01C91.916 196.922 94.6164 200.265 94.6164 200.265C91.9932 196.215 87.0425 192.859 80.343 197.797C73.5406 202.516 75.5337 213.047 82.709 214.372ZM159.567 153.78C151.813 154.462 146.85 155.542 143.043 157.059C144.033 156.404 145.731 155.246 147.711 153.626C150.81 151.221 153.948 147.544 156.288 144.059C156.288 144.059 169.494 146.168 175.345 140.343C181.723 135.032 179.743 129.027 183.652 119.91C184.501 119.575 185.414 119.125 186.314 118.727C184.899 121.697 183.755 125.208 183.356 129.67C181.363 145.062 169.636 153.33 159.567 153.78ZM137.951 134.749C137.681 129.554 140.742 123.575 145.718 118.367C148.225 115.808 151.286 113.545 154.758 111.924C158.397 110.523 162.512 109.841 166.858 110.124C178.161 110.587 185.375 108.105 190.493 105.804C189.708 106.369 188.847 106.935 187.831 107.475C185.414 108.748 183.202 110.857 181.247 112.992C169.417 115.448 162.666 112.156 155.336 118.778C148.341 126.082 150.656 138.568 150.656 138.568C146.644 140.754 143.828 145.075 141.577 148.341C139.43 151.71 138.208 154.385 138.208 154.385C138.208 154.372 137.45 158.59 141.526 157.677C137.758 159.438 135.148 161.714 131.907 164.646C135.251 155.889 138.478 153.202 137.951 134.749ZM111.783 178.868C117.711 177.094 121.569 174.599 123.973 172.22C124.153 172.876 124.694 174.252 126.121 174.65C124.501 177.402 123.253 181.35 124.513 187.046C126.815 196.986 119.653 203.853 114.471 206.502C104.441 210.051 103.116 212.79 99.6443 217.304C101.11 211.787 102.267 209.37 99.3742 198.697C97.7154 192.319 102.28 181.916 111.783 178.868Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_33\"\n              d=\"M104.312 211.003C104.312 211.003 109.173 205.795 110.523 200.548C110.523 200.548 112.31 200.188 114.663 199.365C116.978 198.517 119.64 197.102 121.093 194.698C124.861 188.911 119.717 185.182 123.96 174.175C114.933 181.813 110.291 179.678 106.267 185.902C104.749 188.525 104.711 191.65 105.096 194.08C105.418 196.498 106.369 198.324 106.369 198.324C102.756 202.529 101.624 209.73 101.624 209.73C101.624 209.73 101.457 213.24 104.312 211.003Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_34\"\n              d=\"M541.452 235.988C542.584 230.085 544.268 230.368 544.268 230.355C544.268 230.368 546.506 231.809 544.744 238.74C543.613 244.32 546.39 248.667 552.678 247.471C558.658 245.31 559.455 239.357 554.388 235.538C548.357 231.011 549.283 228.504 549.283 228.504C549.283 228.504 550.183 227.141 555.25 231.166C559.969 235.113 568.289 229.803 561.885 221.624C555.636 213.317 543.24 211.221 534.766 200.15C534.766 200.15 533.595 199.314 533.364 200.908C536.926 214.668 530.985 224.222 530.355 233.596C530.162 242.546 540.115 241.62 541.452 235.988Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_35\"\n              d=\"M503.814 224.813C501.885 225.996 499.841 227.694 500.394 229.417C501.873 232.451 508.431 233.043 515.927 228.877C523.064 224.787 526.793 218.204 528.619 212.417C530.484 206.656 530.497 201.809 530.497 201.809C530.625 201.744 530.6 194.646 526.652 201.873C522.151 209.164 513.767 212.726 506.926 213.33C498.735 214.295 497.256 219.065 497.423 220.133C498.079 221.496 498.799 223.052 502.49 222.049C505.897 220.827 505.897 223.566 503.814 224.813Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_36\"\n              d=\"M536.63 198.555C536.63 198.555 540.321 201.461 546.12 203.969C551.868 206.463 559.777 208.714 567.878 206.772C576.66 204.625 579.849 198.491 577.715 194.055C576.313 191.483 573.523 191.817 571.581 192.743C569.112 193.232 566.759 190.763 569.614 188.692C572.816 186.429 571.44 183.845 570.359 182.327C569.562 180.668 564.727 178.045 559.635 185.671C555.16 191.74 547.11 195.983 539.125 195.443C530.805 194.685 536.733 198.504 536.63 198.555Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_37\"\n              d=\"M570.295 248.165C562.94 251.817 565.126 259.262 565.126 259.262C567.376 257.269 568.212 256.215 570.629 256.511C573.175 257.205 574.603 261.783 568.418 261.346C561.358 260.754 554.877 249.451 554.877 249.451C554.877 249.451 552.19 247.612 551.752 250.287C551.752 250.287 551.482 263.172 545.349 266.116C540.205 268.675 539.446 264.637 541.259 263.12C543.304 261.911 544.397 262.4 547.38 263.146C547.38 263.146 545.773 255.983 537.633 256.613C530.895 257.256 526.459 265.512 531.731 270.154C536.502 275.22 542.275 273.896 545.901 270.925C545.901 270.925 542.365 273.266 539.896 277.008C537.363 280.801 536.244 285.79 540.321 292.181C546.172 302.751 551.752 301.466 559.326 313C559.326 313 563.03 304.05 553.578 295.075C546.737 288.427 546.429 278.885 549.823 273.523C556.214 264.56 555.301 261.641 555.057 256.009C557.5 261.23 558.375 263.789 566.579 270.668C570.899 274.886 575.413 285.713 568.688 293.943C559.931 304.577 563.595 313 563.595 313C569.935 300.938 576.699 301.658 581.611 288.298C584.131 279.94 580.762 274.217 577.265 270.913C573.677 267.582 569.562 266.515 569.562 266.515C573.998 268.199 579.952 267.878 582.64 259.867C584.903 252.074 576.622 244.938 570.295 248.165Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_38\"\n              d=\"M561.679 305.066C563.788 293.544 569.845 292.387 568.97 285.019C567.929 278.962 561.011 275.195 561.011 275.195C561.294 272.417 560.676 269.382 559.969 267.068C559.313 264.727 558.387 263.159 558.387 263.159C558.387 263.159 556.253 260.278 555.481 263.763C555.481 263.763 555.391 265.525 555.263 267.955C555.237 270.373 555.417 273.394 556.343 275.915C556.343 275.915 550.968 281.393 551.804 286.909C552.665 293.789 557.963 293.75 561.679 305.066Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_39\"\n              d=\"M359.485 76.1636C372.833 80.4713 376.472 92.8674 383.84 97.9852C390.977 103.18 395.992 95.3749 392.456 90.4628C388.482 85.8335 389.691 84.8177 389.691 84.8305C389.691 84.8305 392.25 83.6989 396.583 89.7041C400.184 94.449 405.546 94.269 408.349 88.6111C410.253 82.4516 405.79 78.7997 399.837 80.0727C392.726 81.7444 391.221 79.7127 391.221 79.7127C391.221 79.6998 390.745 77.9896 396.918 76.5879C402.781 75.6235 403.746 65.0792 393.292 65.6064C382.657 66.6351 373.9 73.3603 359.755 74.5819C359.755 74.5819 358.354 75.0706 359.485 76.1636Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_40\"\n              d=\"M356.219 82.1816C359.344 89.9613 357.132 98.8211 353.467 104.788C349.314 112.027 352.207 115.975 353.184 116.386C354.702 116.618 356.386 116.862 357.813 113.3C358.894 109.803 361.105 111.333 360.848 113.738C360.604 116.001 360.771 118.508 362.456 119.293C365.722 120.154 370.107 115.473 371.302 106.922C372.318 98.7697 369.425 91.3501 365.889 86.4765C362.378 81.7316 358.482 78.9926 358.482 78.9926C358.482 78.9926 352.837 74.5948 356.219 82.1816Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_41\"\n              d=\"M359.601 72.1259C359.601 72.1259 364.192 70.7243 369.708 67.4195C375.186 64.2305 381.628 59.7684 384.972 52.1431C388.546 43.9005 385.602 37.4581 380.831 36.2751C377.963 35.6707 376.549 38.1782 376.125 40.2871C375.019 42.5889 371.611 43.1032 371.663 39.5799C371.778 35.6836 368.872 35.3621 367.008 35.3621C365.156 35.0921 360.141 37.5481 363.189 46.0222C365.336 53.1203 363.896 62.083 358.636 68.3068C352.979 74.4791 359.601 72.1259 359.601 72.1259Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_42\"\n              d=\"M338.191 78.2339C347.565 78.1182 348.877 84.2134 351.796 83.9433C354.573 83.789 354.432 77.8225 353.982 75.315C355.01 73.3347 356.991 67.2395 354.123 66.4166C351.088 65.5679 348.169 69.6827 338.589 68.8726C331.556 68.2554 321.783 70.7114 321.294 72.0231C321.294 72.0231 320.51 72.4988 321.294 73.3604C322.104 74.4663 331.208 78.1439 338.191 78.2339Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_43\"\n              d=\"M418.714 105.906C417.608 111.642 414.033 109.584 413.917 107.179C414.2 104.775 415.242 104.235 417.582 102.383C417.582 102.383 411.153 98.8212 406.639 105.919C403.154 111.526 406.922 120.373 413.673 119.228C420.745 118.2 423.15 112.812 422.906 108.234C422.906 108.234 422.661 112.4 424.243 116.476C425.966 120.36 428.795 125.105 436.408 125.581C447.659 126.558 450.552 122.597 461.123 122.855C464.337 127.445 471.294 139.044 466.652 147.492C462.228 156.699 457.612 152.199 459.168 148.367C460.737 144.548 462.511 143.712 466.806 141.654C466.806 141.654 464.929 139.571 461.367 139.16C457.908 138.645 453.304 139.378 448.508 144.252C440.561 153.163 442.567 167.051 453.15 167.797C463.874 167.938 470.381 160.184 472.245 152.456C472.245 152.456 470.085 159.078 470.111 166.344C469.892 173.969 472.567 181.08 483.188 184.976C491.92 188.332 498.156 188.577 504.663 188.77C509.562 189.091 514.642 189.451 521.457 191.753C522.138 195.559 521.058 198.028 522.37 199.494C524.286 201.551 528.915 197.861 530.625 196.009C532.863 195.636 538.958 193.515 537.788 190.801C537.235 189.425 535.679 188.782 533.737 187.625C533.557 166.318 542.083 160.326 536.142 137.951C531.05 123.948 521.122 119.151 513.06 118.637C504.727 118.264 498.259 121.44 498.259 121.44C506.052 118.637 513.471 111.654 508.315 98.2811C505.64 91.4272 499.262 88.1353 493.398 88.0839C487.535 87.9553 482.224 91.0415 480.231 96.8794C477.749 103.335 479.151 108.285 481.131 111.616C483.201 114.882 485.683 116.901 485.683 116.901C486.468 111.243 486.558 109.456 489.631 107.167C493.167 104.929 499.751 110.188 491.663 116.129C486.892 119.46 479.678 118.907 473.326 118.29C470.497 117.93 468.028 117.415 466.073 116.952C462.293 106.138 465.777 100.801 458.268 90.2828C453.047 83.339 446.939 81.7444 441.95 82.9918C437.038 83.9948 433.694 86.6951 433.694 86.6951C437.745 84.0719 441.101 79.1084 436.163 72.4217C431.431 65.6064 420.9 67.5996 419.588 74.7749C418.174 82.5931 425.207 85.8722 425.207 85.8722C425.002 82.8117 424.68 81.4615 426.378 79.7513C428.448 78.1954 432.846 80.0213 428.795 84.6248C426.48 87.2352 422.096 87.9425 418.354 88.0325C414.637 88.0453 411.281 87.9553 411.281 87.9553C411.281 87.9553 408.169 89.0998 410.072 90.9515C410.227 90.6557 420.128 99.0269 418.714 105.906ZM504.277 175.396C488.872 173.416 480.617 161.701 480.167 151.62C479.485 143.853 478.405 138.903 476.888 135.083C477.543 136.074 478.701 137.784 480.334 139.764C482.713 142.85 486.403 145.988 489.901 148.341C489.901 148.341 487.792 161.534 493.617 167.385C498.915 173.75 504.92 171.783 514.037 175.692C514.371 176.528 514.822 177.454 515.22 178.354C512.224 176.939 508.726 175.795 504.277 175.396ZM499.185 129.991C504.38 129.721 510.36 132.795 515.58 137.758C518.126 140.266 520.402 143.326 522.01 146.798C523.411 150.437 524.093 154.565 523.823 158.885C523.36 170.188 525.829 177.415 528.118 182.533C527.565 181.749 527.012 180.887 526.459 179.871C525.173 177.454 523.09 175.242 520.955 173.287C518.474 161.457 521.778 154.706 515.156 147.377C507.865 140.368 495.366 142.696 495.366 142.696C493.206 138.684 488.859 135.868 485.593 133.63C482.237 131.47 479.562 130.261 479.562 130.261C479.562 130.261 475.345 129.49 476.27 133.566C474.509 129.798 472.233 127.201 469.301 123.948C478.058 127.291 480.758 130.518 499.185 129.991ZM435.25 91.4272C441.654 89.7556 452.031 94.3334 455.092 103.823C456.853 109.738 459.335 113.609 461.74 116.014C461.097 116.194 459.708 116.734 459.309 118.161C456.558 116.541 452.61 115.293 446.913 116.567C436.973 118.868 430.107 111.693 427.471 106.524C423.922 96.5065 421.183 95.1821 416.669 91.6973C422.16 93.1632 424.577 94.3205 435.25 91.4272Z\"\n              fill=\"#85631A\"\n            />\n            <path\n              id=\"Vector_44\"\n              d=\"M433.385 102.589C433.385 102.589 433.733 104.376 434.568 106.729C435.417 109.044 436.832 111.706 439.236 113.172C445.01 116.939 448.752 111.796 459.746 116.039C452.121 107.012 454.256 102.37 448.032 98.3454C445.396 96.8151 442.284 96.7894 439.841 97.1623C437.423 97.4838 435.597 98.4354 435.597 98.4354C431.392 94.822 424.191 93.7033 424.191 93.7033C424.191 93.7033 420.694 93.5104 422.931 96.3779C422.944 96.3651 428.152 101.239 433.385 102.589Z\"\n              fill=\"#85631A\"\n            />\n          </g>\n          <g id=\"outerCircle\">\n            <path\n              id=\"Vector_45\"\n              d=\"M312.987 0C140.407 0 0 140.394 0 312.974C0 485.567 140.407 626 312.987 626C485.58 626 626 485.567 626 312.974C626 140.394 485.58 0 312.987 0ZM312.987 613.141C147.492 613.141 12.859 478.482 12.859 312.974C12.859 147.492 147.492 12.859 312.987 12.859C478.495 12.859 613.141 147.492 613.141 312.974C613.141 478.482 478.495 613.141 312.987 613.141Z\"\n              fill=\"#85631A\"\n            />\n          </g>\n        </g>\n      </svg>\n  \n  )\n}\n\nexport default Mandala\n","import React from \"react\"\nimport Img from \"./HomeImages\"\nimport InfoImg from \"../images/InfoBG.jpg\"\nimport corner from \"../images/corner-decoration.jpeg\"\nimport center from \"../images/center-decoration.png\"\nimport styles from \"../styles/about.module.css\"\nimport Mandala from './Mandala'\nimport Mandala1 from './Mandala1'\nimport Mandala2 from './Mandala2'\nimport Mandala3 from './Mandala3'\nfunction About() {\n  return (\n    <React.Fragment>\n\n      <div className={styles.container}>\n        <div className={styles.stackTop}>\n          <div className={styles.outerborder}>\n            <div className={styles.middleBorder}>\n              <div className={styles.innerBorder}>\n                <img className={styles.topLeft} src={corner} />\n                <img className={styles.topRight} src={corner} />\n                <img className={styles.bottomLeft} src={corner} />\n                <img className={styles.bottomRight} src={corner} />\n                <img className={styles.centerTop} src={center} />\n                <img className={styles.centerBottom} src={center} />\n                <div className={styles.info}>\n                  <Mandala3/>\n                  <h5 className={styles.cardTitle}>The King of Biryani</h5>\n                  {/* <h6 className={styles.cardSubtitle}></h6> */}\n                  <p style={{ textAlign: \"justify\" }}>\n                    A name that resonates with all that is beautiful about\n                    Bengal. Speaking strictly of food, 6 Ballygunge Place is one\n                    of the exquisite addresses in the city that will serve you a\n                    menu designed to perfection with authentic Bengali\n                    delicacies. Step in to experience what it feels to feast\n                    like a true Bengali and go back only to return for more.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.stackBottom}>\n          <Img className={`${styles.InfoBackgroundHeight}`} src=\"InfoBG\" />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default About\n","import React from \"react\"\nimport styles from \"../styles/cauldron.module.css\"\nfunction Cauldron() {\n  return (\n    <div>\n      <svg\n        width=\"100%\"\n        viewBox=\"0 0 486 508\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"Group\">\n          <g id=\"Wood\">\n            <g id=\"Group_2\">\n              <path\n                id=\"Vector\"\n                d=\"M235.92 437.812L210.032 463.704L215.784 488.932C217.796 497.748 225.632 504 234.676 504H261.7C269.604 504 276.716 499.2 279.672 491.872L291.032 463.704L271.544 444.216L235.92 437.812Z\"\n                fill=\"#693940\"\n              />\n            </g>\n            <g id=\"Group_3\">\n              <path\n                id=\"Vector_2\"\n                d=\"M177.364 437.812L45.284 427.888C34.124 427.048 24.608 435.88 24.608 447.072L4.984 472.964V504H73.828C74.944 504 76.056 503.904 77.156 503.712L177.364 486.112V437.812Z\"\n                fill=\"#693940\"\n              />\n            </g>\n            <g id=\"Group_4\">\n              <path\n                id=\"Vector_3\"\n                d=\"M4.984 476.964C3.152 476.964 1.5 475.7 1.084 473.84C0.600001 471.684 1.956 469.544 4.112 469.064L57.864 457.016C58.152 456.952 58.444 456.92 58.74 456.92H130.084C132.292 456.92 134.084 458.712 134.084 460.92C134.084 463.128 132.292 464.92 130.084 464.92H59.18L5.86 476.868C5.568 476.932 5.272 476.964 4.984 476.964V476.964Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_5\">\n              <path\n                id=\"Vector_4\"\n                d=\"M316.924 463.704V444L384.028 428.212H435.956C451.992 428.212 466.828 436.712 474.94 450.548L481.02 460.92V504H405.76C400.708 504 395.692 503.152 390.924 501.496L316.924 463.704Z\"\n                fill=\"#693940\"\n              />\n            </g>\n            <g id=\"Group_6\">\n              <path\n                id=\"Vector_5\"\n                d=\"M261.7 508H234.676C223.7 508 214.328 500.524 211.884 489.824L206.132 464.596C205.828 463.256 206.232 461.852 207.204 460.88L233.092 434.984C234.016 434.06 235.34 433.652 236.628 433.876L272.248 440.284C273.052 440.428 273.792 440.816 274.368 441.392L293.856 460.88C294.992 462.016 295.34 463.716 294.736 465.204L283.376 493.372C279.796 502.256 271.284 508 261.7 508ZM214.424 464.972L219.684 488.044C221.288 495.084 227.456 500 234.676 500H261.7C268.004 500 273.6 496.224 275.96 490.376L286.328 464.664L269.596 447.932L237.268 442.116L214.424 464.972Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_7\">\n              <path\n                id=\"Vector_6\"\n                d=\"M73.832 508H4.988C2.78 508 0.987999 506.208 0.987999 504V472.964C0.987999 472.092 1.272 471.244 1.8 470.548L20.652 445.668C21.012 439.732 23.66 434.096 28.044 430.032C32.768 425.648 39.136 423.42 45.588 423.896L177.668 433.816C179.756 433.972 181.368 435.712 181.368 437.804V486.104C181.368 488.044 179.972 489.708 178.06 490.044L154.476 494.188C152.272 494.564 150.224 493.116 149.844 490.94C149.46 488.764 150.916 486.692 153.092 486.308L173.368 482.744V441.52L44.988 431.876C40.692 431.568 36.628 432.984 33.484 435.9C30.34 438.816 28.608 442.784 28.608 447.068C28.608 447.94 28.324 448.788 27.796 449.484L8.988 474.308V500H73.832C74.712 500 75.596 499.92 76.468 499.768L127.756 490.764C129.936 490.372 132.008 491.836 132.388 494.012C132.772 496.188 131.316 498.264 129.14 498.644L77.852 507.648C76.524 507.88 75.172 508 73.832 508V508Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_8\">\n              <path\n                id=\"Vector_7\"\n                d=\"M481.012 508H405.752C400.244 508 394.808 507.084 389.6 505.272C389.428 505.212 389.26 505.14 389.096 505.056L315.104 467.268C313.764 466.584 312.924 465.208 312.924 463.704V444C312.924 442.144 314.2 440.532 316.008 440.104L383.108 424.316C383.408 424.244 383.716 424.212 384.024 424.212H435.948C436.072 424.212 436.512 424.236 436.636 424.248C438.768 424.452 440.512 426.308 440.4 428.448C440.288 430.588 438.652 432.164 436.516 432.252C436.404 432.252 435.992 432.224 435.88 432.216H384.484L320.916 447.172V461.256L392.476 497.804C396.756 499.264 401.22 500 405.744 500H477.004V462.004L471.476 452.572C467.272 445.4 460.976 439.716 453.276 436.132C451.276 435.2 450.404 432.82 451.336 430.816C452.268 428.812 454.648 427.952 456.652 428.876C465.832 433.148 473.344 439.94 478.38 448.524L484.46 458.896C484.82 459.512 485.008 460.208 485.008 460.92V504C485.012 506.208 483.224 508 481.012 508V508Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_9\">\n              <path\n                id=\"Vector_8\"\n                d=\"M481.012 464.916H425.188C424.968 464.916 424.752 464.9 424.536 464.864L404.084 461.48C401.904 461.12 400.428 459.06 400.788 456.88C401.148 454.7 403.208 453.244 405.388 453.584L425.516 456.916H481.012C483.22 456.916 485.012 458.708 485.012 460.916C485.012 463.124 483.224 464.916 481.012 464.916V464.916Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g className={styles.smoke1} id=\"smoke1\">\n            <g id=\"Group_10\">\n              <path\n                id=\"Vector_9\"\n                d=\"M206.467 96.8044C205.691 96.8044 204.903 96.5764 204.215 96.1084C202.391 94.8604 201.923 92.3724 203.171 90.5484C203.519 90.0324 211.759 77.4764 203.211 65.4204C193.687 51.9844 199.103 38.0604 203.295 32.5724C204.631 30.8204 207.143 30.4764 208.903 31.8244C210.655 33.1644 210.991 35.6644 209.659 37.4204C209.259 37.9564 201.319 48.9204 209.739 60.7924C221.551 77.4524 210.263 94.3524 209.779 95.0644C208.999 96.1964 207.743 96.8044 206.467 96.8044V96.8044Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_11\">\n              <path\n                id=\"Vector_10\"\n                d=\"M125.995 146.792C125.219 146.792 124.431 146.564 123.743 146.096C121.919 144.848 121.451 142.36 122.699 140.536C123.047 140.02 131.287 127.464 122.739 115.404C121.463 113.604 121.887 111.104 123.691 109.828C125.495 108.548 127.987 108.976 129.267 110.78C141.079 127.444 129.791 144.344 129.307 145.052C128.523 146.18 127.271 146.792 125.995 146.792V146.792Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g className={styles.smoke2} id=\"smoke2\">\n            <g id=\"Group_12\">\n              <path\n                id=\"Vector_11\"\n                d=\"M235.642 80.988C236.418 80.988 237.206 81.216 237.894 81.684C239.718 82.932 240.186 85.42 238.938 87.244C238.59 87.76 230.35 100.316 238.898 112.372C248.422 125.808 243.006 139.732 238.814 145.22C237.478 146.972 234.966 147.316 233.206 145.968C231.454 144.628 231.118 142.128 232.45 140.372C232.85 139.836 240.79 128.872 232.37 117C220.558 100.34 231.846 83.44 232.33 82.728C233.11 81.596 234.366 80.988 235.642 80.988V80.988Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_13\">\n              <path\n                id=\"Vector_12\"\n                d=\"M316.114 31C316.89 31 317.678 31.228 318.366 31.696C320.19 32.944 320.658 35.432 319.41 37.256C319.062 37.772 310.822 50.328 319.37 62.388C320.646 64.188 320.222 66.688 318.418 67.964C316.614 69.244 314.122 68.816 312.842 67.012C301.03 50.348 312.318 33.448 312.802 32.74C313.586 31.612 314.838 31 316.114 31V31Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g className={styles.stick} id=\"Stick\">\n            <g id=\"Group_14\">\n              <path\n                id=\"Vector_13\"\n                d=\"M411.204 25.688C411.204 30.964 409.22 36.244 405.248 40.348L318.232 132.78H278.036L373.356 12.74C380.756 3.13198 394.74 1.73198 403.896 9.67198C408.724 13.868 411.204 19.776 411.204 25.688V25.688Z\"\n                fill=\"#693940\"\n              />\n            </g>\n            <g id=\"Group_15\">\n              <path\n                id=\"Vector_14\"\n                d=\"M318.232 136.78H278.036C276.5 136.78 275.1 135.9 274.436 134.52C273.768 133.136 273.948 131.496 274.904 130.292L370.224 10.252C374.444 4.77199 380.616 1.34399 387.564 0.647987C394.52 -0.0480126 401.248 2.07999 406.516 6.65199C412.036 11.452 415.204 18.388 415.204 25.688C415.204 32.216 412.692 38.408 408.124 43.128L321.144 135.524C320.388 136.328 319.332 136.78 318.232 136.78ZM286.32 128.78H316.5L402.336 37.604C405.488 34.344 407.204 30.124 407.204 25.688C407.204 20.704 405.04 15.968 401.272 12.692C397.684 9.57999 393.108 8.13599 388.36 8.60799C383.624 9.08399 379.424 11.42 376.524 15.184L286.32 128.78Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_16\">\n              <path\n                id=\"Vector_15\"\n                d=\"M370.9 58.712C369.924 58.712 368.948 58.36 368.176 57.64C366.556 56.14 366.464 53.608 367.968 51.988L405.18 11.936C406.684 10.316 409.216 10.22 410.832 11.728C412.452 13.228 412.544 15.76 411.04 17.38L373.828 57.432C373.044 58.28 371.972 58.712 370.9 58.712Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_17\">\n              <path\n                id=\"Vector_16\"\n                d=\"M297.196 136.776C296.332 136.776 295.46 136.496 294.728 135.924C292.992 134.56 292.688 132.044 294.052 130.308L319.476 97.924C320.84 96.184 323.356 95.884 325.092 97.248C326.828 98.612 327.132 101.128 325.768 102.864L300.344 135.248C299.556 136.252 298.38 136.776 297.196 136.776V136.776Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g id=\"body\">\n            <g id=\"Group_18\">\n              <path\n                id=\"Vector_17\"\n                d=\"M361.144 170.48H125.568C115.996 170.48 108.236 162.72 108.236 153.148V150.108C108.236 140.536 115.996 132.776 125.568 132.776H361.144C370.716 132.776 378.476 140.536 378.476 150.108V153.148C378.476 162.72 370.716 170.48 361.144 170.48Z\"\n                fill=\"#2C2527\"\n              />\n            </g>\n            <g id=\"Group_19\">\n              <path\n                id=\"Vector_18\"\n                d=\"M378.472 150.12V153.148C378.472 155.76 377.892 158.208 376.856 160.448C374.12 154.516 368.104 150.412 361.136 150.412H125.552C118.624 150.412 112.612 154.52 109.876 160.448C108.84 158.208 108.26 155.76 108.26 153.148V150.12C108.26 140.54 116.016 132.784 125.556 132.784H361.14C370.716 132.78 378.472 140.536 378.472 150.12Z\"\n                fill=\"#403539\"\n              />\n            </g>\n            <g id=\"Group_20\">\n              <path\n                id=\"Vector_19\"\n                d=\"M411.204 350.892V380.98C411.204 395.236 407.552 408.948 400.872 420.992C399.52 423.472 397.984 425.864 396.316 428.212H384.044L316.924 444V463.712H291.032L271.544 444.224L235.908 437.82L210.016 463.712H177.356V437.82L92.728 431.46C81.72 417.204 75.496 399.52 75.496 380.98V350.892C75.496 313.18 83.976 276.008 100.216 241.992L134.408 170.492H352.296L386.488 241.992C402.768 276.008 411.204 313.18 411.204 350.892V350.892Z\"\n                fill=\"#403539\"\n              />\n            </g>\n            <g id=\"Group_21\">\n              <path\n                id=\"Vector_20\"\n                d=\"M75.488 376.62C73.28 376.62 71.488 374.828 71.488 372.62V350.892C71.488 312.928 80.172 274.676 96.6 240.272L130.796 168.768C131.464 167.38 132.864 166.496 134.404 166.496H165.152C167.36 166.496 169.152 168.288 169.152 170.496C169.152 172.704 167.36 174.496 165.152 174.496H136.924L103.82 243.72C87.904 277.052 79.488 314.116 79.488 350.892V372.62C79.488 374.828 77.696 376.62 75.488 376.62V376.62Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_22\">\n              <path\n                id=\"Vector_21\"\n                d=\"M375.3 222.604C373.808 222.604 372.376 221.768 371.688 220.332L349.768 174.496H184.708C182.5 174.496 180.708 172.704 180.708 170.496C180.708 168.288 182.5 166.496 184.708 166.496H352.292C353.832 166.496 355.236 167.38 355.9 168.768L378.908 216.88C379.86 218.876 379.016 221.264 377.024 222.216C376.468 222.48 375.88 222.604 375.3 222.604V222.604Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_23\">\n              <path\n                id=\"Vector_22\"\n                d=\"M316.924 467.716H291.028C289.968 467.716 288.948 467.296 288.2 466.544L269.6 447.944L237.256 442.128L212.84 466.544C212.088 467.296 211.072 467.716 210.012 467.716H177.352C175.144 467.716 173.352 465.924 173.352 463.716V441.532L92.424 435.448C91.292 435.364 90.252 434.8 89.556 433.904C81.212 423.096 75.48 410.236 72.976 396.712C72.572 394.54 74.008 392.452 76.18 392.048C78.352 391.652 80.44 393.08 80.844 395.252C83.008 406.948 87.832 418.096 94.828 427.6L177.652 433.824C179.74 433.98 181.352 435.72 181.352 437.812V459.708H208.356L233.08 434.984C234.004 434.06 235.336 433.656 236.616 433.876L272.252 440.284C273.056 440.428 273.796 440.816 274.372 441.392L292.688 459.708H312.928V444C312.928 442.144 314.204 440.532 316.012 440.104L383.136 424.316C383.436 424.244 383.744 424.212 384.052 424.212H394.228C395.416 422.448 396.452 420.756 397.368 419.076C403.812 407.452 407.208 394.288 407.208 380.98V350.892C407.208 314.144 398.84 277.192 383.012 244.016C382.06 242.02 382.904 239.636 384.9 238.684C386.892 237.728 389.28 238.576 390.232 240.572C406.572 274.816 415.212 312.964 415.212 350.892V380.98C415.212 395.64 411.464 410.148 404.38 422.932C403.036 425.392 401.464 427.888 399.584 430.528C398.832 431.584 397.62 432.208 396.324 432.208H384.52L320.932 447.164V463.708C320.924 465.924 319.132 467.716 316.924 467.716V467.716Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_24\">\n              <path\n                id=\"Vector_23\"\n                d=\"M361.144 174.48H184.708C182.5 174.48 180.708 172.688 180.708 170.48C180.708 168.272 182.5 166.48 184.708 166.48H361.144C368.496 166.48 374.476 160.5 374.476 153.148V150.108C374.476 142.756 368.496 136.776 361.144 136.776H125.568C118.22 136.776 112.236 142.756 112.236 150.108V153.148C112.236 160.496 118.216 166.48 125.568 166.48H165.152C167.36 166.48 169.152 168.272 169.152 170.48C169.152 172.688 167.36 174.48 165.152 174.48H125.568C113.808 174.48 104.236 164.912 104.236 153.148V150.108C104.236 138.348 113.804 128.776 125.568 128.776H361.144C372.904 128.776 382.476 138.348 382.476 150.108V153.148C382.476 164.912 372.908 174.48 361.144 174.48Z\"\n                fill=\"black\"\n              />\n            </g>\n            <path\n              id=\"Vector_24\"\n              d=\"M358.912 192.872H123L132 174H349.912L358.912 192.872Z\"\n              fill=\"#181617\"\n            />\n          </g>\n          <g className={styles.fire} id=\"Fire\">\n            <g id=\"Group_25\">\n              <path\n                id=\"Vector_25\"\n                d=\"M331.312 440.616L316.924 444V463.712H291.032L271.544 444.224L235.908 437.82L210.016 463.712H177.356V437.82L150.02 435.744C140.412 424.42 122.368 391.264 137.48 343.04C137.48 343.04 153.496 375.836 177.492 372.408C177.492 372.408 176.5 328.56 231.896 288.684V342.728C231.896 342.728 291.216 330.864 291.216 255.708C291.216 255.708 337.952 331 314.764 380.484C314.764 380.484 341.832 383.28 355.544 358.56C355.536 358.56 372.228 402.228 331.312 440.616V440.616Z\"\n                fill=\"#FF0000\"\n              />\n            </g>\n            <g id=\"Group_26\">\n              <path\n                id=\"Vector_26\"\n                d=\"M300.872 414.444C300.872 414.444 293.78 436.344 279.512 452.188L271.548 444.224L235.92 437.796L216.052 457.704C194.36 441.28 188.76 411.376 188.76 411.376L193.072 413.036C200.536 415.98 208.876 412.288 211.984 404.908C218.828 388.648 235.668 381.848 235.668 381.848C235.668 390.6 242.884 396.572 250.432 396.572C253.708 396.572 257.028 395.452 259.888 392.924C269.18 384.752 275.896 375.588 275.896 375.588C277.928 385.004 277.224 393.712 275.688 400.848C273.116 412.42 285.06 422.084 295.888 417.188C299.048 415.728 300.872 414.444 300.872 414.444V414.444Z\"\n                fill=\"#D9A486\"\n              />\n            </g>\n            <g id=\"Group_27\">\n              <path\n                id=\"Vector_27\"\n                d=\"M316.924 467.716H291.028C289.968 467.716 288.948 467.296 288.2 466.544L269.6 447.944L237.256 442.128L212.84 466.544C212.088 467.296 211.072 467.716 210.012 467.716H177.352C175.144 467.716 173.352 465.924 173.352 463.716V441.532L149.712 439.736C148.644 439.656 147.656 439.152 146.964 438.336C143.712 434.5 115.684 399.2 133.656 341.848C134.144 340.284 135.536 339.18 137.168 339.056C138.816 338.948 140.344 339.812 141.064 341.284C141.204 341.568 154.576 368.34 173.664 368.656C174.732 356.76 181.94 319.712 229.552 285.436C230.776 284.556 232.376 284.436 233.716 285.12C235.052 285.804 235.892 287.18 235.892 288.68V337.456C249.536 332.9 287.212 314.956 287.212 255.704C287.212 253.916 288.396 252.348 290.116 251.856C291.836 251.368 293.668 252.072 294.612 253.596C296.496 256.628 338.912 325.912 320.744 376.46C328.708 375.812 343.304 372.372 352.044 356.62C352.8 355.26 354.272 354.484 355.824 354.568C357.376 354.676 358.724 355.676 359.276 357.132C359.452 357.592 376.436 403.768 334.052 443.536C333.544 444.016 332.912 444.352 332.232 444.512L320.928 447.172V463.716C320.924 465.924 319.132 467.716 316.924 467.716V467.716ZM292.684 459.716H312.924V444C312.924 442.144 314.2 440.532 316.008 440.104L329.344 436.968C357.12 410.376 356.368 381.724 353.884 368.064C338.424 386.692 315.424 384.576 314.344 384.46C313.056 384.328 311.912 383.58 311.272 382.452C310.636 381.324 310.584 379.96 311.132 378.784C327.772 343.28 306.196 292.764 294.468 269.888C287.492 334.9 233.252 346.528 232.668 346.644C231.484 346.88 230.272 346.576 229.348 345.816C228.42 345.056 227.884 343.92 227.884 342.724V296.704C181.176 333.532 181.476 371.92 181.484 372.32C181.532 374.344 180.056 376.084 178.052 376.368C159.576 379.008 145.756 363.388 138.832 353.152C128.344 397.264 146.848 425.152 152.04 431.888L177.652 433.832C179.736 433.992 181.348 435.728 181.348 437.82V459.716H208.352L233.076 434.992C234 434.068 235.332 433.664 236.612 433.884L272.248 440.292C273.052 440.436 273.792 440.824 274.368 441.4L292.684 459.716ZM331.312 440.616H331.352H331.312Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_28\">\n              <path\n                id=\"Vector_28\"\n                d=\"M216.052 461.704C215.208 461.704 214.36 461.436 213.64 460.892C190.976 443.732 185.072 413.392 184.832 412.112C184.564 410.688 185.088 409.228 186.204 408.3C187.32 407.372 188.848 407.124 190.2 407.64L194.516 409.3C199.952 411.444 206 408.828 208.308 403.352C209.164 401.316 211.508 400.356 213.548 401.22C215.584 402.076 216.54 404.424 215.68 406.46C212.084 414.996 203.208 419.496 194.576 417.656C197.352 426.476 203.604 441.736 215.78 452.324L233.096 434.972C234.024 434.048 235.336 433.624 236.64 433.864L272.268 440.292C273.068 440.436 273.808 440.824 274.384 441.4L279.28 446.296C290.988 431.68 297.012 413.412 297.076 413.216C297.756 411.12 300.008 409.964 302.116 410.644C304.216 411.324 305.368 413.58 304.688 415.68C304.388 416.608 297.168 438.58 282.496 454.868C281.76 455.684 280.724 456.16 279.628 456.188C278.58 456.288 277.472 455.796 276.696 455.02L269.616 447.944L237.284 442.112L218.896 460.536C218.108 461.308 217.084 461.704 216.052 461.704V461.704Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_29\">\n              <path\n                id=\"Vector_29\"\n                d=\"M284.356 421.34C283.836 421.34 283.308 421.236 282.8 421.02C274.492 417.508 269.86 408.652 271.792 399.968C272.864 394.98 273.304 390.068 273.112 385.292C270.312 388.46 266.68 392.272 262.536 395.92C259.1 398.956 254.916 400.564 250.44 400.564C242.2 400.564 235.188 395.24 232.668 387.86C231.692 388.432 230.688 389.076 229.8 389.756C228.048 391.096 225.536 390.768 224.192 389.012C222.848 387.26 223.18 384.748 224.936 383.404C228.776 380.464 233.888 378.256 234.104 378.164C235.344 377.636 236.764 377.76 237.88 378.5C239.004 379.24 239.68 380.496 239.68 381.84C239.68 388.464 245.268 392.564 250.444 392.564C252.94 392.564 255.292 391.648 257.252 389.92C266.12 382.12 272.62 373.3 272.684 373.212C273.616 371.944 275.208 371.34 276.744 371.664C278.284 371.992 279.488 373.192 279.82 374.732C281.676 383.336 281.608 392.404 279.612 401.676C278.312 407.528 281.972 411.98 285.924 413.652C287.956 414.512 288.912 416.86 288.048 418.896C287.4 420.424 285.916 421.34 284.356 421.34V421.34Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default Cauldron\n","import React from \"react\"\nimport styles from \"../styles/cauldron1.module.css\"\n\nfunction Cauldron1() {\n  return (\n    <div>\n      <svg\n      className={styles.cauldron}\n    //   width=\"100%\"\n        // width=\"512\"\n        // height=\"537\"\n        viewBox=\"0 0 512 537\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"pot 1\">\n          <g id=\"background\">\n            <path\n              id=\"Vector\"\n              d=\"M512 281C512 422.385 397.385 537 256 537C114.615 537 0 422.385 0 281C0 139.615 114.615 25 256 25C397.385 25 512 139.615 512 281Z\"\n              fill=\"#BD3333\"\n            />\n          </g>\n          <g className={styles.stick} id=\"Stick\">\n            <path\n              id=\"Vector_2\"\n              d=\"M203.848 269.142C196.037 276.953 183.374 276.953 175.564 269.142L5.85799 99.436C-1.95201 91.626 -1.95201 78.962 5.85799 71.152C13.668 63.342 26.332 63.342 34.142 71.152L203.848 240.858C211.658 248.668 211.658 261.332 203.848 269.142Z\"\n              fill=\"#343B41\"\n            />\n            <path\n              id=\"Vector_3\"\n              d=\"M203.848 240.858C209.868 246.878 211.228 255.773 207.968 263.115C200.626 266.375 191.731 265.015 185.711 258.995L16.005 89.289C9.98501 83.269 8.62501 74.373 11.885 67.032C19.227 63.772 28.122 65.132 34.142 71.152L203.848 240.858Z\"\n              fill=\"#484E55\"\n            />\n          </g>\n          <g id=\"Body\">\n            <path\n              id=\"Vector_4\"\n              d=\"M84.423 470.986C56.722 438.373 40 396.142 40 350C40 322.246 48.38 296.452 62.74 275H55C46.716 275 40 268.284 40 260V230C40 221.716 46.716 215 55 215H175H337H457C465.284 215 472 221.716 472 230V260C472 268.284 465.284 275 457 275H449.26C463.62 296.452 472 322.246 472 350C472 396.142 455.278 438.372 427.577 470.985C427.082 471.433 426.575 471.868 426.076 472.311H85.924C85.425 471.868 84.919 471.433 84.423 470.986Z\"\n              fill=\"#3C5D78\"\n            />\n            <path\n              id=\"Vector_5\"\n              d=\"M84.423 470.986C56.722 438.373 40 396.142 40 350C40 322.243 48.389 296.453 62.754 275H55C46.716 275 40 268.284 40 260V230C40 221.716 46.716 215 55 215H83C74.716 215 68 221.716 68 230V260C68 268.284 74.716 275 83 275H432V280C432 288.284 425.284 295 417 295H120.451C108.23 295 98.915 305.858 100.663 317.953C109.497 379.052 139.915 433.158 183.93 472.312H85.924C85.425 471.868 84.919 471.433 84.423 470.986Z\"\n              fill=\"#384E64\"\n            />\n          </g>\n          <g className={styles.fire} id=\"Fire\">\n            <path\n              id=\"Vector_6\"\n              d=\"M85.802 472.208C85.802 472.208 112.5 468.5 138.99 419.02C145.08 407.645 175.485 455.515 175.485 455.515C175.485 455.515 239.5 414 256 355C264.671 323.993 336.515 455.515 336.515 455.515C336.515 455.515 365.407 408.595 373.01 419.02C408 467 426.198 472.208 426.198 472.208C380.962 512.503 321.346 537 256 537C190.654 537 131.038 512.503 85.802 472.208Z\"\n              fill=\"#F86A3D\"\n            />\n            <path\n              id=\"Vector_7\"\n              d=\"M112.787 493.223C112.787 493.223 129.778 466.042 138.99 467.02C151.821 468.382 162.582 503.515 175.485 503.515C203.951 503.515 262.7 387.485 270 415C283 464 308.049 503.515 336.515 503.515C349.418 503.515 360.179 468.382 373.01 467.02C382.222 466.042 399.213 493.223 399.213 493.223C358.339 520.86 309.055 537 256 537C202.945 537 153.661 520.86 112.787 493.223Z\"\n              fill=\"#FFCD61\"\n            />\n          </g>\n          <g className={styles.smoke2} id=\"smoke2\">\n            <g id=\"Group\">\n              <path\n                id=\"Vector_8\"\n                d=\"M362.278 108.885C363.022 108.885 363.776 109.103 364.435 109.551C366.183 110.747 366.631 113.13 365.435 114.877C365.102 115.372 357.209 127.399 365.397 138.948C374.52 151.819 369.332 165.157 365.317 170.414C364.037 172.092 361.631 172.422 359.945 171.13C358.266 169.847 357.945 167.452 359.22 165.77C359.604 165.256 367.21 154.754 359.144 143.381C347.829 127.422 358.642 111.233 359.106 110.551C359.853 109.467 361.056 108.885 362.278 108.885V108.885Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_2\">\n              <path\n                id=\"Vector_9\"\n                d=\"M439.364 61C440.107 61 440.862 61.2184 441.521 61.6667C443.268 62.8622 443.717 65.2455 442.521 66.9927C442.188 67.487 434.295 79.5147 442.483 91.0672C443.705 92.7915 443.299 95.1863 441.571 96.4086C439.843 97.6347 437.456 97.2247 436.23 95.4966C424.915 79.5338 435.728 63.345 436.191 62.6668C436.942 61.5862 438.142 61 439.364 61V61Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g className={styles.smoke3} id=\"smoke3\">\n            <g id=\"Group_3\">\n              <path\n                id=\"Vector_10\"\n                d=\"M249.754 151.286C250.271 151.286 250.796 151.438 251.254 151.75C252.469 152.581 252.78 154.238 251.949 155.452C251.717 155.796 246.231 164.157 251.923 172.185C258.264 181.131 254.658 190.403 251.867 194.058C250.977 195.224 249.304 195.453 248.132 194.556C246.966 193.663 246.742 191.999 247.629 190.829C247.895 190.473 253.182 183.172 247.576 175.266C239.71 164.173 247.227 152.919 247.549 152.445C248.068 151.691 248.905 151.286 249.754 151.286V151.286Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_4\">\n              <path\n                id=\"Vector_11\"\n                d=\"M303.34 118C303.856 118 304.381 118.152 304.839 118.463C306.054 119.294 306.365 120.951 305.534 122.166C305.303 122.509 299.816 130.87 305.508 138.901C306.358 140.099 306.075 141.764 304.874 142.614C303.673 143.466 302.013 143.181 301.161 141.98C293.295 130.884 300.812 119.63 301.134 119.159C301.656 118.408 302.49 118 303.34 118V118Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g className={styles.smoke1} id=\"smoke1\">\n            <g id=\"Group_5\">\n              <path\n                id=\"Vector_12\"\n                d=\"M249.527 89.2225C248.475 89.2225 247.406 88.9134 246.473 88.2788C244 86.5867 243.366 83.2133 245.058 80.7401C245.53 80.0405 256.702 63.0161 245.112 46.6697C232.199 28.4522 239.542 9.57298 245.226 2.13194C247.037 -0.243555 250.443 -0.709976 252.83 1.11774C255.205 2.93462 255.661 6.3243 253.855 8.70522C253.312 9.43197 242.547 24.2978 253.963 40.3947C269.979 62.9836 254.674 85.8979 254.017 86.8633C252.96 88.3981 251.257 89.2225 249.527 89.2225V89.2225Z\"\n                fill=\"black\"\n              />\n            </g>\n            <g id=\"Group_6\">\n              <path\n                id=\"Vector_13\"\n                d=\"M140.417 157C139.365 157 138.296 156.691 137.363 156.056C134.89 154.364 134.256 150.991 135.948 148.518C136.42 147.818 147.592 130.794 136.002 114.442C134.272 112.001 134.847 108.612 137.293 106.881C139.739 105.146 143.118 105.726 144.853 108.172C160.869 130.767 145.564 153.681 144.908 154.641C143.845 156.17 142.147 157 140.417 157V157Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default Cauldron1\n","import React from \"react\"\nimport styles from '../styles/washing.module.css'\n\nfunction Washing() {\n  return (\n    <div>\n      <svg\n        width=\"512\"\n        height=\"512\"\n        viewBox=\"0 0 512 512\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"washing-hands 1\" clip-path=\"url(#clip0)\">\n          <g id=\"Bubbles\">\n            <g id=\"Bubbles_2\">\n              <path\n                id=\"Vector\"\n                d=\"M14.7083 167.096C14.7083 180.357 25.4976 191.146 38.7589 191.146C52.0212 191.146 62.8105 180.357 62.8105 167.096C62.8105 153.834 52.0212 143.044 38.7589 143.044C25.4976 143.045 14.7083 153.835 14.7083 167.096V167.096ZM47.8091 167.096C47.8091 172.086 43.748 176.146 38.7579 176.146C33.7678 176.146 29.7077 172.086 29.7077 167.096C29.7077 162.105 33.7678 158.045 38.7579 158.045C43.748 158.045 47.8091 162.106 47.8091 167.096Z\"\n                fill=\"black\"\n              />\n              <path\n                id=\"Vector_2\"\n                d=\"M484.15 211.79C468.795 211.79 456.301 224.283 456.301 239.64C456.301 254.996 468.794 267.489 484.15 267.489C499.507 267.489 512 254.996 512 239.64C512 224.283 499.507 211.79 484.15 211.79V211.79ZM484.15 252.489C477.065 252.489 471.301 246.725 471.301 239.64C471.301 232.554 477.065 226.79 484.15 226.79C491.236 226.79 497 232.554 497 239.64C497 246.725 491.236 252.489 484.15 252.489Z\"\n                fill=\"black\"\n              />\n              <path\n                id=\"Vector_3\"\n                d=\"M47.4598 94.5826C65.6652 94.5826 80.4775 79.7712 80.4775 61.5648C80.4775 43.3584 65.6662 28.548 47.4598 28.548C29.2533 28.548 14.443 43.3594 14.443 61.5648C14.443 79.7702 29.2543 94.5826 47.4598 94.5826V94.5826ZM47.4598 43.5484C57.395 43.5484 65.4772 51.6305 65.4772 61.5658C65.4772 71.501 57.395 79.5832 47.4598 79.5832C37.5245 79.5832 29.4423 71.501 29.4423 61.5658C29.4423 51.6305 37.5255 43.5484 47.4598 43.5484Z\"\n                fill=\"black\"\n              />\n              <path\n                id=\"Vector_4\"\n                d=\"M466.837 377.033C466.837 372.475 465.697 367.955 463.541 363.96C461.922 360.96 461.496 357.459 462.341 354.098C463.149 350.887 463.493 347.565 463.364 344.225C462.685 326.618 448.387 311.973 430.813 310.884C421.089 310.283 411.863 313.609 404.8 320.25C397.832 326.798 393.837 336.035 393.837 345.592C393.837 356.223 398.608 366.13 406.925 372.77C409.617 374.919 411.385 377.924 411.902 381.223C412.014 381.942 412.16 382.677 412.336 383.414C415.133 395.061 425.379 403.771 437.252 404.594C437.918 404.64 438.58 404.663 439.24 404.663C446.26 404.663 452.879 402.064 458.053 397.236C463.636 392.03 466.837 384.665 466.837 377.033V377.033ZM447.82 386.271C445.232 388.685 441.844 389.876 438.289 389.632C432.88 389.257 428.206 385.26 426.923 379.919C426.843 379.583 426.776 379.25 426.723 378.911C425.623 371.889 421.916 365.545 416.285 361.049C411.553 357.271 408.839 351.637 408.839 345.594C408.839 340.079 411.053 334.961 415.074 331.181C418.78 327.697 423.546 325.819 428.609 325.819C429.033 325.819 429.459 325.832 429.885 325.859C439.866 326.477 447.989 334.799 448.375 344.805C448.448 346.717 448.253 348.613 447.793 350.439V350.44C446.029 357.447 446.935 364.78 450.341 371.087C451.333 372.925 451.836 374.926 451.836 377.034C451.837 380.573 450.41 383.854 447.82 386.271V386.271Z\"\n                fill=\"black\"\n              />\n            </g>\n          </g>\n          <g className={styles.right} id=\"Right\">\n            <path\n              id=\"thumb-c\"\n              d=\"M412 278.791L422.5 304.291L480.5 487H317L288 410.5L131.5 198.5L317 91.2906L395 147.791C400.235 149.151 403.971 149.137 412 147.791L432 91.2906C440.33 76.4217 459.5 66.2906 470.5 71.2906C481.5 76.2906 484.932 81.5113 484.5 91.2906L432 252.291C424.313 262.564 419.95 268.356 412 278.791Z\"\n              fill=\"#FFDFCF\"\n            />\n            <path\n              id=\"Vector 1\"\n              d=\"M315.5 490L290 413.5\"\n              stroke=\"black\"\n              stroke-width=\"10\"\n            />\n            <path\n              id=\"Vector 2\"\n              d=\"M479.5 491.5L451 409.5\"\n              stroke=\"black\"\n              stroke-width=\"10\"\n            />\n            <path\n              id=\"thumb\"\n              d=\"M421 308L410.5 282.5C418.45 272.066 422.813 266.274 430.5 256L483 95C483.432 85.2208 480 80 469 75C458 70 438.83 80.1312 430.5 95L410.5 151.5C402.471 152.847 398.735 152.86 393.5 151.5\"\n              stroke=\"black\"\n              stroke-width=\"10\"\n            />\n            <path\n              id=\"fingersC\"\n              d=\"M190.001 25.378C198.389 33.568 202.776 37.6894 212.501 47.878C199.428 51.6392 192.495 54.7579 183.501 68.878C179.356 77.9755 177.468 83.2179 178.5 94C188.615 108.165 192.121 110.422 199.5 118L181.001 136.378L154.001 163.378L124.001 190.878L116.501 181.878C113.762 177.78 112.294 175.016 110.001 167.878C109.965 160.559 110.591 156.627 116.501 150.878C120.825 145.83 124.502 143.871 132.501 141.378L132.447 141.308C123.606 129.924 118.632 123.52 110.001 110.378C110.595 99.8141 111.948 94.6191 116.501 86.878C120.459 81.3143 123.609 79.1073 132.501 78.378C128.23 71.9571 126.145 68.2865 124.001 61.378C124.886 54.2441 124.777 46.7974 131.501 41.378C140.751 35.2113 148.262 36.9747 162.501 43.378C162.357 34.4607 164.043 30.4241 171.001 25.378C179.309 22.0641 183.392 22.3539 190.001 25.378Z\"\n              fill=\"#FFDFCF\"\n            />\n            <path\n              id=\"fingers\"\n              d=\"M212.5 46.5L190 24C183.39 20.9759 179.308 20.686 171 24C164.041 29.0461 162.356 33.0826 162.5 42M162.5 42C148.26 35.5967 140.75 33.8333 131.5 40C124.776 45.4194 124.884 52.866 124 60C126.144 66.9084 128.229 70.5791 132.5 77M162.5 42L183.5 67.5M132.5 77C123.608 77.7293 120.458 79.9363 116.5 85.5C111.947 93.2411 110.594 98.4361 110 109C118.648 122.169 123.625 128.572 132.5 140M132.5 77L181 135M132.5 140C124.501 142.493 120.824 144.452 116.5 149.5C110.59 155.249 109.963 159.181 110 166.5C112.293 173.638 113.76 176.402 116.5 180.5L124 189.5M132.5 140L154 162\"\n              stroke=\"black\"\n              stroke-width=\"10\"\n            />\n          </g>\n          <g className={styles.left} id=\"Left\">\n            <path\n              id=\"LHC\"\n              d=\"M35.9724 304.575L23.4365 314.345C14.7774 321.094 11.2907 332.555 14.7239 342.983L52.1931 456.791C57.4492 472.756 76.2438 479.613 90.5461 470.785L134.53 443.634C140.283 440.083 147.175 439.032 153.85 440.099C167.707 442.315 178.071 441.739 193.59 438.503C194.862 438.238 196.11 437.866 197.325 437.404L361.327 375.112C363.104 374.438 364.825 373.595 366.345 372.454C374.978 365.969 376.527 359.183 373.6 345.283C373.223 343.497 372.649 341.739 371.73 340.161C367.773 333.37 362.291 331.277 348 332.097L275.15 342.296C273.719 342.497 272.266 342.587 270.823 342.514C259.05 341.92 254.933 339.126 256.905 329.69C257.478 326.948 258.839 324.441 260.485 322.174L387.76 146.871C389.572 144.375 390.969 141.585 391.664 138.58C393.393 131.101 393.449 125.895 391.974 119.716C391.157 116.298 389.414 113.115 386.782 110.785C383.34 107.737 379.671 106.024 373 104.597C374.39 98.4982 374.429 94.7242 373.494 89.2406C373.194 87.4788 372.674 85.7552 371.883 84.1527C368.963 78.239 365.325 74.8248 356.22 72.8533C350.933 71.7083 345.399 72.9212 340.873 75.8866C333.481 80.7312 328.02 85.968 321.5 95.5973C321.528 85.5949 322.926 80.3178 316.51 74.1356C314.631 72.3255 312.272 71.0494 309.72 70.5078C300.01 68.4469 290.61 72.4672 273 86.0973C270.318 75.8603 267.765 70.3547 259.017 70.233C254.07 70.1641 249.608 72.9398 246.064 76.3927C182.252 138.561 144.836 175.47 79.5 239.097C60.5422 255.96 52.0261 268.163 45.3594 290.497C43.7076 296.031 40.5275 301.024 35.9724 304.575Z\"\n              fill=\"#FFDFCF\"\n            />\n            <path\n              id=\"LH\"\n              d=\"M9 325.597L35.9724 304.575C40.5275 301.024 43.7076 296.031 45.3594 290.497C52.0261 268.163 60.5422 255.96 79.5 239.097C144.836 175.47 182.252 138.561 246.064 76.3927C249.608 72.9398 254.07 70.1641 259.017 70.233C267.765 70.3547 270.318 75.8603 273 86.0973M273 86.0973C290.61 72.4672 300.01 68.4469 309.72 70.5078C312.272 71.0494 314.631 72.3255 316.51 74.1356C322.926 80.3178 321.528 85.5949 321.5 95.5973M273 86.0973L196.5 165.597M321.5 95.5973C328.02 85.968 333.481 80.7312 340.873 75.8866C345.399 72.9212 350.933 71.7083 356.22 72.8533C365.325 74.8248 368.963 78.239 371.883 84.1527C372.674 85.7552 373.194 87.4788 373.494 89.2406C374.429 94.7242 374.39 98.4982 373 104.597M321.5 95.5973L222.5 200.597M373 104.597C379.671 106.024 383.34 107.737 386.782 110.785C389.414 113.115 391.157 116.298 391.974 119.716C393.449 125.895 393.393 131.101 391.664 138.58C390.969 141.585 389.572 144.375 387.76 146.871L260.485 322.174C258.839 324.441 257.478 326.948 256.905 329.69C254.933 339.126 259.05 341.92 270.823 342.514C272.266 342.587 273.719 342.497 275.15 342.296L348 332.097C362.291 331.277 367.773 333.37 371.73 340.161C372.649 341.739 373.223 343.497 373.6 345.283C376.527 359.183 374.978 365.969 366.345 372.454C364.825 373.595 363.104 374.438 361.327 375.112L197.325 437.404C196.11 437.866 194.862 438.238 193.59 438.503C178.071 441.739 167.707 442.315 153.85 440.099C147.175 439.032 140.283 440.083 134.53 443.634L62.5 488.097M373 104.597L260 234.597\"\n              stroke=\"black\"\n              stroke-width=\"8\"\n            />\n          </g>\n          <path\n            id=\"TopFoam\"\n            d=\"M196 108.5C187.263 101.579 184.115 96.2409 182.5 83.5C183.157 71.3893 185.397 65.3148 192.5 56.5C199.023 51.8349 203.62 50.5396 214.5 52C221.777 35.4743 229.042 31.3675 239 29.5C253.664 28.2703 258.264 33.1152 265 44C282.343 33.3579 288.132 33.2618 295.5 37.5C309.138 43.6706 311.723 52.2305 310.5 64\"\n            stroke=\"black\"\n            stroke-width=\"10\"\n          />\n          <path\n            id=\"BottomFoam\"\n            d=\"M329 288C316.873 287.514 311.449 284.251 304.5 273V267.5L371.5 172L377.5 175.5C392.046 191.27 399.572 200.267 392 221.5C383.412 236.151 376.898 242.806 358 248C357.863 273.959 354.249 285.245 329 288Z\"\n            fill=\"white\"\n            stroke=\"black\"\n            stroke-width=\"10\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0\">\n            <rect width=\"512\" height=\"512\" fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </div>\n  )\n}\n\nexport default Washing\n","import React from \"react\"\nimport styles from \"../styles/intro.module.css\"\nimport Cauldron from \"./Cauldron\"\nimport Cauldron1 from \"./Cauldron1\"\nimport Washing from \"./Washing\"\nimport SVGmorph from \"./SVGmorph\"\n\nfunction Intro() {\n  return (\n    <div className={styles.container}>\n      <div className={styles.bg}>\n        {/* <Cauldron /> */}\n        <Cauldron1 />\n      </div>\n\n      <div className={styles.info}>\n        <h3>Where Tradition meets Sophistication</h3>\n        <p>\n          We pride ourselves in providing you with the most authentic\n          traditional flavour, for which biryani is know around the world, while\n          also maintaining modern standards of sanitisation and consistency.\n        </p>\n        <p>\n          Originating with the mughals, this deluctable dish of rice, flavoured\n          with fragnant indian spices, and meat is well know around the world as\n          Biryani. This celebration of flavour is something that has inspired\n          our specialised menu of authentic Dum Biryani.\n        </p>\n        <p>\n          Mouth watering flavour and aroma requires First-Class ingredients.\n          This is where we use our 30 years of experience in the field to our\n          advantage by carefully selecting each ingredient that goes into our\n          biryani. From the best rice, to absorb the strong flavours of our\n          aromatic spices, to careful selection of the best cuts of meat to\n          complement our traditional dish, you can be sure that we spare no\n          expense to deliver an exquisite experience befitting a King.\n        </p>\n        <p>\n          So join us, to indulge your senses, in our specialised royal biryani.\n          Add a dash of flamboyance and savour the mughal delicacy.\n        </p>\n        <p>Welcome to the good times.</p>\n      </div>\n      {/* <Cauldron /> */}\n      {/* <Washing/> */}\n    </div>\n  )\n}\n\nexport default Intro\n","import React, { useEffect, useState, useRef } from \"react\"\nimport Img from \"./HomeImages\"\nimport styles from \"../styles/productCard.module.css\"\nimport { Link } from \"gatsby\"\n\nfunction ProductCard({ productInfo, circleStyle, dir }) {\n  var card = useRef(null)\n  var container = useRef(null)\n  const [scrollMove, setScrollMove] = useState({\n    state: true,\n    setPointer: true,\n  })\n  var title = useRef(null)\n  var description = useRef(null)\n  useEffect(() => {\n    //Move card\n    const moveCard = (xAxis, yAxis) => {\n      card.current.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`\n    }\n    //Popout Image\n    const popout = zTranslate => {\n      //   title.current.style.transform = `translateZ(150px)`\n      product.style.transform = `translateZ(${zTranslate})`\n    }\n    //To animate the card when visible\n    const handleScroll = () => {\n      var CurrentContainer = container.current\n      var CurrentCard = card.current\n      var containerDetails = CurrentContainer.getBoundingClientRect()\n      //Disable all events that will interfere\n      if (scrollMove.setPointer) {\n        //Check if pointer need to be set to null\n        Object.assign(CurrentContainer.style, { pointerEvents: \"none\" })\n        Object.assign(CurrentCard.style, {\n          transition: \"all 0.4s ease\",\n          pointerEvents: \"none\",\n        })\n        setScrollMove(state => {\n          return { ...state, setPointer: false }\n        })\n      }\n      if (scrollMove.state && window.innerHeight * 0.4 > containerDetails.top) {\n        moveCard(dir * -25, 25)\n        popout(\"120px\")\n        setTimeout(() => {\n          moveCard(dir * 25, -25)\n        }, 400)\n        setTimeout(() => {\n          moveCard(0, 0)\n          popout(\"0px\")\n          //Dont alllow this to happen more than once\n          setScrollMove(state => {\n            return { ...state, state: false }\n          })\n        }, 800)\n        setTimeout(() => {\n          //Enable all pointer events\n          Object.assign(CurrentCard.style, {\n            transition: \"none\",\n            pointerEvents: \"auto\",\n          })\n          Object.assign(CurrentContainer.style, { pointerEvents: \"auto\" })\n        }, 1200)\n      }\n    }\n\n    var product = document.querySelectorAll(`.${styles.img}`)[productInfo.num]\n\n    const handleMouseMove = e => {\n      let containerRect = container.current.getBoundingClientRect() //Get the rect to get top and height of container element\n      let xAxis = window.innerWidth / 2 - e.pageX //Get the posX of the cursor on the container from the center\n      let yAxis =\n        window.pageYOffset +\n        containerRect.top -\n        e.pageY +\n        containerRect.height / 2 //Get the posY of the cursor on the container from the center\n      //For the moving animation\n      moveCard(-xAxis / 25, yAxis / 25)\n      //For the moving animation\n      // Popout effect\n      popout(\"120px\")\n      //Popout effect\n    }\n    // Move on phone\n    const handleTouchMove = e => {\n      e.preventDefault()\n      let containerRect = container.current.getBoundingClientRect() //Get the rect to get top and height of container element\n      let xAxis = window.innerWidth / 2 - e.changedTouches[0].pageX //Get the posX of the cursor on the container from the center\n      let yAxis =\n        window.pageYOffset +\n        containerRect.top -\n        e.changedTouches[0].pageY +\n        containerRect.height / 2 //Get the posY of the cursor on the container from the center\n      moveCard(-xAxis / 10, yAxis / 10)\n      popout(\"120px\")\n\n      //   console.log(e.changedTouches[0].pageX, e.changedTouches[0].pageY)\n    }\n\n    // Disable any delay in movement of card on start\n    const handleMouseEnter = () => {\n      card.current.style.transition = \"none\"\n    }\n    const handleTouchStart = e => {\n      card.current.style.transition = \"none\"\n    }\n    // Disable any delay in movement of card on start\n\n    // Reset all animations to rest position\n    const handleTouchEnd = e => {\n      card.current.style.transition = \"all 0.5s ease\"\n      //Reset the card to initial pos(Without rotation)\n      moveCard(0, 0)\n      // Remove Popout effect\n      popout(\"0px\")\n      //Remove Popout effect\n    }\n\n    // Reset all animations to rest position\n    const handleLeave = e => {\n      card.current.style.transition = \"all 0.5s ease\"\n      //Reset the card to initial pos(Without rotation)\n      moveCard(0, 0)\n      // Remove Popout effect\n      popout(\"0px\")\n      //Remove Popout effect\n    }\n\n    window.addEventListener(\"scroll\", handleScroll)\n    // Disable any delay in movement of card on start\n    container.current.addEventListener(\"mouseenter\", handleMouseEnter)\n    card.current.addEventListener(\"touchstart\", handleTouchStart)\n    //Add moving functionality to card\n    container.current.addEventListener(\"mousemove\", handleMouseMove)\n    card.current.addEventListener(\"touchmove\", handleTouchMove)\n    //Reset card to initial pos\n    container.current.addEventListener(\"mouseleave\", handleLeave)\n    card.current.addEventListener(\"touchend\", handleTouchEnd)\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n\n      container.current.removeEventListener(\"mouseenter\", handleMouseEnter)\n      card.current.removeEventListener(\"touchstart\", handleTouchStart)\n\n      container.current.removeEventListener(\"mousemove\", handleMouseMove)\n      card.current.removeEventListener(\"touchmove\", handleTouchMove)\n\n      container.current.removeEventListener(\"mouseleave\", handleLeave)\n      card.current.removeEventListener(\"touchend\", handleTouchEnd)\n    }\n  }, [scrollMove])\n\n  return (\n    <React.Fragment>\n      <div ref={container} className={styles.container}>\n        <div ref={card} className={styles.card}>\n          <div className={styles.product}>\n            <div  className={styles.circle}></div>\n            <Img className={styles.img} src={productInfo.src} />\n          </div>\n          <div className={styles.info}>\n            <h3 ref={title} style={{ color: \"white\" }}>\n              {productInfo.title}\n            </h3>\n            <p>{productInfo.info}</p>\n            {/* <p style={{ color: \"red\" }}>₹{productInfo.price}</p> */}\n            <p>\n              <Link className={styles.order} to={productInfo.link}>\n                Order Now\n              </Link>\n            </p>\n            <p>*Minimum 6 hours in advance*</p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default ProductCard\n","import React from \"react\"\nimport txtDivider from \"../images/txtBorder.jpg\"\nimport styles from \"../styles/textDivider.module.css\"\n\nfunction TextDivider({children}) {\n  const Divider = ({style}) => {\n    return (\n      <svg\n      style={style}\n        width=\"100%\"\n        height=\"100\"\n        viewBox=\"0 0 1316 309\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M0.5 177.5C8.02532 181.426 12.3996 183.494 21 186.5C29.2652 186.243 33.8145 186.08 38.5 185C34.7458 195.119 35.0413 209.409 45.175 213.122C46.0358 213.437 46.9718 213.721 48 214C45.4887 208.569 44.9433 205.285 45.5 199C47.6008 191.66 49.6872 188.504 54 183.5H431.5C432.165 184.477 432.788 185.401 433.381 186.28C435.296 189.118 436.891 191.481 438.511 193.627C443.717 200.527 451.313 206.055 459.944 206.514C461.352 206.588 462.834 206.572 464.5 206.5C468.594 205.573 471.499 204.831 474 203C475.342 203.956 476.561 204.837 477.7 205.66L477.707 205.665C483.461 209.824 487.195 212.523 494.5 216C495.081 216.244 495.649 216.483 496.204 216.717C505.962 220.826 511.81 223.289 521.5 225.5C517.583 238.017 515.845 246.046 515.669 256.022C515.541 263.323 516.847 270.607 519.43 277.437C523.698 288.72 528.547 294.87 538 301C551.912 308.658 559.227 309.725 571.5 306.5C583.816 301.575 589.427 296.041 592.891 285.583C595.17 278.703 595.997 270.024 593.717 263.144C589.454 250.279 574.004 242.225 562.184 248.856C561.32 249.342 560.43 249.89 559.5 250.5C556.849 253.151 555.998 254.974 555 258.5C554.732 264.004 555.177 265.839 556.5 268C556.247 264.463 556.494 262.495 557.5 259C558.655 256.097 560.128 254.772 563 252.5C565.44 251.236 566.876 250.858 569.5 250.5C571.652 250.296 573.136 250.328 576 250.5C579.167 251.157 580.838 252 583 254.5C585.96 257.922 586.745 260.312 587.624 262.984C587.887 263.786 588.159 264.612 588.5 265.5C589.995 270.573 589.722 273.71 588.5 279.5C585.314 289.058 582.392 292.331 576 296C571.304 299.153 568.449 300 563 300C557.393 300.228 554.218 299.573 548.5 297C542.125 293.95 539.434 291.242 535 286C530.216 280.414 528.965 277.073 527.5 271C525.428 262.432 525.09 257.728 526 249.5C526.795 240.02 528.507 235.464 533.5 228.5C550.198 232.289 559.065 233.371 574.5 234.5H602.08C608.015 234.5 613.95 233.994 619.777 232.868C635.984 229.734 644.034 227.379 655 223.5C672.786 228.888 682.751 231.456 700.5 234.5C719.172 236.228 729.323 236.123 747 234.5C761.156 232.245 768.714 230.954 780 228.5C786.743 238.206 788.302 244.932 787.5 259C786.077 273.391 783.416 280.043 775.5 289.5C767.719 296.76 762.838 298.165 754 300C741.219 300.776 736.265 296.623 728.5 287C727.205 285.141 726.237 283.416 725.529 281.757C720.352 269.629 727.421 252.183 740.5 250.5C748.188 249.246 750.392 252.531 754 259C755.708 262.875 755.64 264.203 755.537 266.201C755.524 266.454 755.511 266.718 755.5 267C757.875 260.737 756.005 253.003 750.822 248.76C750.717 248.674 750.61 248.587 750.5 248.5C744.501 244.854 736.628 245.362 730.468 248.729C729.085 249.484 727.842 250.378 726.5 251.5C725.79 252.269 725.156 252.974 724.579 253.641C720.208 258.701 717.989 265.334 717.659 272.012C717.332 278.661 718.801 285.379 722.229 291.084C722.431 291.421 722.64 291.757 722.856 292.092C725.061 295.515 727.948 298.463 731.202 300.909C731.594 301.203 731.978 301.482 732.358 301.748C737.379 305.258 743.493 306.886 749.597 307.406C753.532 307.741 757.165 307.523 762 306.5C772.522 304.008 776.689 300.637 783 295C787.723 289.755 790.432 285.495 792.742 279.878C795.254 273.771 796.467 267.197 796.767 260.601C797.06 254.166 796.809 248.551 796 240.5C795.001 235.335 792.12 226.641 791.575 226.016C793.224 225.842 821.028 216.336 837.5 203.5C843.6 205.895 846.992 206.486 853 206.5C862.567 204.99 866.812 202.741 873 197C877.511 192.168 879.259 188.808 882 182.5H1258.5C1264.02 189.013 1266.21 192.63 1268 199C1268.29 205.903 1267.36 209.16 1264 214C1271.46 211.986 1274.57 210.363 1278 206.5C1278.03 206.437 1278.07 206.374 1278.1 206.311C1281.63 199.413 1279.49 190.817 1275 184.5C1281.22 186.151 1284.18 186.76 1288 187C1300.96 184.37 1306.47 182.043 1315.5 177.5C1306 171.989 1300.52 169.784 1290.5 167.5C1284.21 167.626 1280.74 168.038 1275 169.5C1275.84 167.919 1276.54 166.515 1277.13 165.152C1280.16 158.112 1278.77 150.37 1274.5 144C1274.4 143.912 1274.3 143.823 1274.19 143.732C1272.14 141.924 1269.63 139.723 1264 139.5C1266.46 142.563 1266.95 144.298 1267.84 147.427L1267.86 147.499L1267.95 147.834L1268 148C1268.78 151.193 1268.69 152.936 1268 156C1265.04 162.733 1263.17 165.982 1259.5 171H1170.5C1176.34 165.63 1178.7 162.328 1181.5 156C1184.58 148.734 1185.24 145.238 1185.5 139.5C1185.29 132.246 1184.33 128.319 1181.5 121.5C1177.63 115.658 1174.38 111.679 1169.98 107.783C1164.04 102.51 1156.86 98.6048 1149.08 96.9697C1148.23 96.7897 1147.38 96.6322 1146.52 96.4928C1139.91 95.4198 1133.12 95.7969 1126.57 97.1737C1119.94 98.5658 1115.26 100.338 1109.5 103.5C1103.28 107.443 1100.21 110.296 1096.59 113.661C1095.62 114.561 1094.62 115.497 1093.5 116.5C1087.51 124.063 1084.41 128.235 1079.5 135.5C1074.6 142.717 1071.66 146.571 1066 153C1058.54 160.072 1053.55 163.175 1043.5 167.5C1039.48 169.279 1037.3 170.011 1033.5 171H1005C1022.34 163.388 1031.04 157.821 1043.5 144C1054.8 131.796 1059.84 124.773 1063.5 111.5C1066.54 100.981 1067.26 93.5037 1066.75 83.37C1066.42 76.7968 1065.27 70.2258 1062.61 64.2089C1059.97 58.2592 1056.81 53.4531 1052.91 48.3428C1046.54 40.0101 1038.83 32.4576 1029.28 28.1438C1023.51 25.5393 1018.07 24.2508 1010.5 23.5C993.645 23.9966 986.089 26.31 975 33C959.838 46.2068 956.02 54.6065 953.5 70.5C955.624 88.452 958.499 96.5843 968.5 105.5C983.299 115.588 991.258 117.063 1005 114C1017.78 108.956 1023.34 104.713 1028 92.5C1029.73 86.5325 1030.67 81.7849 1030.27 76.9947C1029.77 70.8186 1026.3 65.3852 1022.92 60.1895L1021.5 58C1022.13 59.5852 1022.74 60.9267 1023.29 62.1441L1023.29 62.1447C1024.25 64.2618 1025.04 66.0037 1025.5 68C1028.56 77.103 1027.79 82.5077 1025 92.5C1019.63 101.696 1015.96 104.934 1008.5 108C999.465 110.351 993.296 111.506 988 109C974.631 104.572 969.523 99.5955 963.5 87.5C959.016 73.3192 959.679 64.7869 968 52C975.522 40.0781 982.742 37.6998 994.458 33.8408L994.46 33.8401L994.477 33.8345L994.503 33.8258L994.537 33.8145C995.337 33.5512 996.157 33.2808 997 33C1010.96 31.4133 1017.54 32.8907 1028 38C1039.3 45.5493 1043.94 50.7466 1050.5 61C1056.52 75.7194 1058.27 83.8523 1056.5 98C1048.57 129.643 1038.42 141.328 1014.5 156C995.753 164.607 984.61 167.629 963.5 169.5C925.894 168.803 903.086 163.064 879 148.5C868.932 137.178 862.241 133.683 849 131C838.741 130.312 828.469 132.686 819.587 137.866C810.367 143.242 804.231 149.124 796.5 158.5L795.639 159.455C785.152 171.086 779.013 177.895 768 188C758.512 195.472 752.176 198.366 738.5 200.5L690 208C717.398 201.719 728.736 193.177 747 175.5C763.192 159.153 779.68 138.489 788.585 127.328C791.939 123.126 794.217 120.27 795 119.5C809.873 100.626 820.595 90.7626 837.428 80.0156C844.995 75.1849 853.359 71.5851 862.212 70.0993C878.983 67.2849 891.903 68.8906 912 73C907.97 68.3186 904.065 65.7975 894 61.5C886.14 59.7245 881.777 59.4305 874 59C863.679 59.9694 858.756 60.7114 852 62.5C832.48 69.9469 823.43 76.4384 808.5 89.5C796.25 101.884 790.069 108.897 780 121.5L757 153.5C747.721 164.688 742.275 170.833 732 181.5C718.605 193.795 711.044 198.237 697.5 203.5C710.875 192.605 718.032 186.176 729.5 173.5C740.242 159.863 745.895 151.887 753 135C759.401 120.621 762.062 111.992 765 95.5C767.456 71.63 764.478 59.6561 757 39C750.409 25.1858 744.101 17.7656 732.395 9.96368C726.619 6.11462 720.239 3.15628 713.478 1.5883C708.483 0.429954 704.162 0.0730397 698.5 0.49998L696.589 0.839642C683.01 3.25376 669.556 7.85805 659.379 17.1669C658.5 17.9702 657.695 18.7547 657 19.5C652.574 15.2456 649.262 12.2954 644.829 9.35668C639.482 5.81196 633.448 3.35464 627.136 2.20562C624.505 1.72649 621.98 1.41447 619.292 1.1723C612.79 0.58681 606.204 0.757152 599.817 2.10429C594.384 3.25033 590.436 4.67343 585.5 6.99998C574.479 13.943 568.237 19.9527 561.428 30.0354C557.273 36.1866 554.244 43.0366 552.222 50.1785C548.289 64.0702 546.693 75.9624 549 95.5C556.365 134.11 564.592 148.5 585 173.5C597.397 188.687 601.96 193.693 616 203.5C605.865 199.487 598.461 195.336 592.842 191.565C584.206 185.768 577.024 178.097 570.267 170.189C551.421 148.131 540.688 133.683 526.308 114.324C523.984 111.195 521.564 107.938 519 104.5C501.575 85.0665 490.746 77.1878 476.215 69.3105C469.491 65.6652 462.283 62.8986 454.762 61.5063C447.879 60.2322 442.303 59.8857 435 60.5C417.739 62.1651 410.981 65.1697 401 72C412.831 69.3285 420.018 68.4048 435 69C447.926 68.8788 454.314 69.9222 464 74C491.406 87.8209 502.115 98.8243 519 120C541.807 150.288 555.2 165.094 580.5 188.5C595.032 200.707 614.678 206.736 623.646 207.954C618.119 207.229 611.194 206.224 603.752 205.143C592.676 203.535 580.455 201.761 570 200.5C561.947 198.164 557.357 196.249 549 191.5C535.294 180.669 529.5 173.5 517.5 158.5C501.668 142.521 493.727 136.329 482 132.5C480.136 132.077 478.485 131.736 476.881 131.464C468.416 130.025 459.558 131.022 451.751 134.595C448.688 135.997 446.108 137.559 443 139.5C441.582 141.024 440.413 142.166 439.377 143.178C437.738 144.778 436.432 146.054 435 148C420.465 156.2 411.84 159.756 395.5 164C387.486 166.536 382.349 167.431 372 168C360.274 168.999 353.618 169.116 341.5 168C319.61 165.383 310.934 162.181 298.5 155C277.516 143.566 271.699 133.8 262 116C256.305 103.249 255.052 94.4763 256.391 82.5072C257.176 75.4848 259.166 68.6026 262.49 62.367C266.739 54.3941 271.38 48.8658 277.795 43.5781C284.869 37.7467 293.338 33.3592 302.47 32.5379C309.084 31.943 315.157 32.9683 323.5 35.5C339.835 43.1324 344.715 48.9349 350 60.5C351.886 68.0219 352.224 71.9184 352 78.5C351.116 81.8741 350.279 84.6791 349.34 87.2023C345.66 97.096 337.57 105.4 327.431 108.338C321.752 109.984 316.943 109.422 310.5 108.5C304 107.267 300.043 104.864 296.569 101.157C290.812 95.0141 286.276 86.9897 286.912 78.595C287.136 75.6339 287.901 72.6669 289 69C290.074 65.7076 291.119 63.8372 293 60.5C286.06 64.4846 283.458 73.1098 283.573 81.1117C283.586 82.0002 283.621 82.8828 283.677 83.7776C283.981 88.6002 285.213 93.3622 287.475 97.6322C287.997 98.6173 288.526 99.5208 289.075 100.367C293.074 106.526 299.622 110.681 306.619 112.909C307.81 113.288 309.074 113.641 310.5 114C313.99 114.418 316.779 114.638 319.402 114.687C326.777 114.823 334.755 112.553 340.93 108.519C347.839 104.007 352.215 97.3664 355.195 89.6721C355.8 88.1101 356.388 86.4356 357 84.5C357.285 83.1454 357.509 81.8794 357.686 80.6568C359.265 69.7207 356.831 58.591 352.027 48.6407C351.699 47.9619 351.357 47.2514 351 46.5C347.108 40.6034 343.87 37.3186 336 31.5C329.927 28.0445 325.861 26.41 317.5 24C313.042 23.303 309.523 23.0436 306.134 23.0563C297.389 23.0891 288.668 25.1738 280.883 29.1563C276.312 31.4944 272.983 33.949 269.5 37.5C263.438 43.097 259.749 47.3404 255.929 53.1869C252.817 57.9496 250.393 63.1492 248.768 68.6013C246.99 74.5684 246.219 79.4854 246 86.5C246.677 101.391 247.685 108.716 251.5 118.5C258.982 132.834 263.323 139.614 271.5 148C285.273 159.548 293.377 164.688 308.5 171.5H277.5C266.658 167.311 260.956 164.157 251.5 157C242.595 148.303 238.097 142.768 231.5 131C226.127 123.678 222.194 118.906 217.916 114.481C212.235 108.603 205.467 103.775 197.878 100.735C194.789 99.4978 191.84 98.5444 188.731 97.7727C180.078 95.6242 170.948 95.8016 162.289 97.9279C154.437 99.8561 148.609 102.671 142 108.5C134.794 116.786 131.047 122.366 129.195 129.762C128.007 134.503 128.008 139.463 128.563 144.319C129.46 152.174 131.286 156.919 135.5 162.5L144.5 171.5H56C52.9834 168.46 50.9868 165.866 49.4943 163.129C45.7237 156.215 43.945 147.163 48.7022 140.886C48.7987 140.759 48.898 140.63 49 140.5C46.4616 140.666 45.0383 140.945 42.5 142C37.1333 144.904 34.0661 151.616 34.9656 157.652C35.0799 158.419 35.2562 159.195 35.5 160C36.6558 163.815 37.3115 165.809 38.5 169C31.4866 167.612 27.6748 167.503 21 168C11.9836 171.211 7.51125 173.297 0.5 177.5ZM180.5 171H257.5C253.54 168.477 250.654 166.499 247.565 164.171C243.123 160.825 239.114 156.934 235.547 152.667C229.753 145.736 225.748 140.147 220 131.5C209.927 119.149 203.109 114.949 190.5 108.5C177.246 104.883 171.066 105.464 161 108.5C153.754 111.387 146.79 115.408 141 126.5C135.216 139.172 136.564 146.692 142.5 155.5C149.678 163.628 154.197 166.245 163 168C172.928 167.181 179.095 163.566 183 157.5C187.778 150.06 189.155 146.727 190.5 141.5C191.857 143.342 192.211 144.931 192.36 147.19C192.504 149.387 192.301 151.593 191.908 153.759C190.985 158.834 188.953 163.766 185.245 167.351C183.598 168.944 182.201 169.97 180.5 171ZM1054.79 170.046H1131.79C1130.07 169.022 1128.67 168.003 1127 166.41C1123.33 162.903 1121.31 158.061 1120.39 153.07C1119.99 150.928 1119.79 148.745 1119.93 146.572C1120.08 144.354 1120.44 142.79 1121.79 140.979C1123.14 146.13 1124.51 149.413 1129.29 156.744C1131.05 159.44 1133.27 161.645 1136.09 163.327C1143.98 168.033 1154.59 167.389 1162.05 162.04C1164.5 160.284 1166.94 157.958 1169.79 154.774C1175.73 146.095 1177.07 138.686 1171.29 126.199C1165.5 115.269 1158.54 111.307 1151.29 108.463C1144.14 106.34 1138.96 105.435 1131.81 106.364C1125.06 107.241 1118.64 109.857 1112.75 113.276C1105.31 117.601 1099.67 122.207 1092.29 131.126C1088.45 136.816 1085.39 141.162 1082.05 145.457C1075.23 154.233 1067.15 162.035 1057.84 168.101C1056.88 168.721 1055.88 169.364 1054.79 170.046ZM657 212C603.45 184.119 577.289 158.883 562.305 103.61C558.186 88.4171 556.341 72.3473 559.848 57.0021C562.561 45.1336 567.241 36.2951 574.574 28.9803C593.409 10.192 625.572 4.31942 646.259 21.0461C647.78 22.2757 649.346 23.5939 651 25C647.079 32.0113 644.938 37.7262 643.424 44.3709C640.725 56.2122 641.195 68.7887 645.237 80.2411C647.067 85.4242 649.294 89.4129 653 93.5C650.677 96.118 648.371 97.7945 645.058 99.0564C638.617 101.51 631.145 102.302 624.956 99.2678C620.225 96.9484 616.428 92.6519 611.5 85.5C613.974 84.254 615.958 83.0738 617.582 81.7282C624.495 75.9988 625.092 63.9267 618.599 57.7255C618.124 57.2723 617.611 56.8525 617.055 56.4627C611.776 52.7603 604.739 52.3485 599.409 55.9787C591.462 61.3917 591.464 75.6074 598.804 81.819C601.278 83.9128 604.484 84.9996 609 85.5C613.366 93.0839 617.065 97.6713 621.329 100.536C629.322 105.906 640.252 105.344 648.995 101.311C651.539 100.138 653.897 98.6135 656.5 96.5C664.243 101.74 668.592 104.655 678 105C681.952 104.638 685.036 104.107 687.742 103.21C695.78 100.545 700.692 92.7902 705 85.5C711.75 83.8438 715.896 82.0249 718.358 77.902C721.538 72.5752 721.495 65.4065 718.206 60.1463C718.079 59.9433 717.948 59.7467 717.813 59.556C712.21 51.6336 697.75 51.7717 692.237 59.7568C688.494 65.1777 688.308 72.9892 692.245 78.2705C694.262 80.9759 697.337 83.0839 702 85.5C699.365 90.7694 695.853 95.794 690.705 98.6585C687.281 100.564 683.681 101.587 678 102C670.875 101.544 666.932 99.7538 660 93.5C667.572 83.468 670.17 76.6588 672 62.5C672.069 47.2674 670.84 38.8979 661 25C662.795 23.3528 664.502 21.8633 666.2 20.5095C684.348 6.03739 712.125 6.78874 731.202 20.0124C740.94 26.763 746.871 36.0682 750.667 48.8946C756.7 69.2789 754.037 91.1955 747.902 111.549C732.588 162.353 711.217 188.82 657 212ZM656.5 30.5C649.556 41.0759 645.292 49.3667 646 62.5C646.609 73.797 650.719 82.3749 656.5 89.5C660.299 84.4543 662.664 80.2888 664.442 75.0789C667.219 66.9379 667.68 58.0406 665.57 49.7017C663.773 42.5979 660.874 37.4817 656.5 30.5ZM846.193 196.824C847.953 197.556 849.939 198.382 853 197.539C865.986 193.462 868.556 187.819 872.423 179.33L872.438 179.298C872.622 178.894 872.809 178.484 873 178.067C875.913 168.574 875.173 163.69 870.5 155.6C865.57 148.765 861.87 146.186 854.5 142.618C845.995 140.736 841.429 140.4 835 142.119C822.776 145.158 817.959 149.869 810.767 156.904C809.886 157.765 808.97 158.662 808 159.594C803.72 163.865 800.261 167.355 797.225 170.417L797.216 170.426L797.215 170.427L797.213 170.43C791.672 176.019 787.541 180.186 782.402 185.087C777.853 189.426 772.874 193.335 767.335 196.308C761.231 199.584 755.906 201.701 749.5 203.531C765.418 206.364 773.616 209.434 784 217.011C804.884 213.86 833.5 201.534 831.5 197.539C831.27 197.081 831.054 196.653 830.848 196.25C830.719 195.995 830.594 195.749 830.472 195.511C829.112 192.846 828.23 191.119 827 187.554C828.885 188.348 830.074 189.311 831.734 190.656C832.734 191.465 833.905 192.413 835.5 193.545C844.218 187.525 847.273 182.509 850.5 171.577C853.433 160.566 851.738 153.297 849 143.617C852.634 147.076 854.818 150.113 856.229 154.773C858.152 161.127 857.851 168.278 856.663 174.808C855.55 180.925 853.335 186.531 849.674 191.555C848.491 193.178 847.178 194.737 845.5 196.541C845.728 196.631 845.958 196.726 846.193 196.824ZM910 171.577H885V159.594C892.346 164.139 897.897 166.765 910 171.577ZM727 225C744.341 224.759 753.683 223.573 770 220.506C759.577 214.651 750.321 212.835 727 212.518C710.142 213.989 699.762 215.473 680 219.009C694.102 223.24 703.805 224.813 727 225ZM460 197.5C463.061 198.343 465.048 197.516 466.808 196.783L466.81 196.783L466.816 196.78L466.816 196.78C467.047 196.684 467.275 196.589 467.5 196.5C465.823 194.695 464.512 193.135 463.329 191.511C459.665 186.477 457.45 180.861 456.337 174.735C455.149 168.196 454.848 161.036 456.77 154.675C458.181 150.006 460.366 146.965 464 143.5C461.262 153.194 459.567 160.474 462.5 171.5C465.727 182.448 468.782 187.471 477.5 193.5C479.095 192.366 480.266 191.417 481.265 190.606C482.926 189.26 484.115 188.295 486 187.5C484.909 190.665 484.093 191.864 482.787 193.783C482.28 194.528 481.699 195.381 481 196.5C478.5 200.5 508.116 213.844 529 217C539.384 209.411 547.582 206.338 563.5 203.5C554.426 200.904 547 198.5 537.5 191.5C528.573 183.268 523.571 178.215 515.784 170.348L515.783 170.347L515.747 170.311L515.742 170.306C512.714 167.247 509.265 163.762 505 159.5C504.03 158.566 503.114 157.669 502.233 156.806C495.041 149.762 490.224 145.043 478 142C471.571 140.278 467.005 140.615 458.5 142.5C451.13 146.072 447.43 148.655 442.5 155.5C440.819 158.415 439.635 160.785 438.949 163.115C436.1 172.784 440.458 183.917 447.719 190.908C450.413 193.502 454.149 195.66 460 197.5ZM428 171.5H403C415.103 166.681 420.654 164.051 428 159.5V171.5ZM543 220.5C559.317 223.571 568.659 224.758 586 225C609.195 224.813 618.898 223.237 633 219C613.238 215.459 602.858 213.973 586 212.5C562.679 212.818 553.423 214.636 543 220.5Z\"\n          fill=\"#85631a\"\n        />\n      </svg>\n    )\n  }\n  const Divider1=({style})=>(\n    <svg  style={style} width=\"100%\" height=\"260\" viewBox=\"0 0 1407 260\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 149.618C8.04895 152.934 12.7276 154.68 21.9264 157.219C30.7667 157.002 35.6325 156.864 40.6441 155.952C36.7405 164.259 37.7765 176.198 46.4267 179.266C47.7025 179.719 49.1409 180.086 50.8051 180.442C48.1191 175.856 47.5358 173.082 48.1312 167.775C50.3781 161.576 52.6097 158.911 57.2226 154.685H460.99C461.344 155.097 461.688 155.498 462.022 155.888C462.347 156.267 462.663 156.637 462.971 156.997L463 157.031L463.001 157.032L463.001 157.033L463.004 157.035C465.314 159.739 467.189 161.932 469.158 163.928C474.535 169.378 481.624 173.207 489.242 173.968C491.411 174.185 493.63 174.199 496.286 174.108C500.664 173.325 503.772 172.699 506.447 171.153C507.885 171.961 509.191 172.707 510.412 173.403L510.413 173.404C516.566 176.915 520.561 179.195 528.373 182.131C528.995 182.337 529.602 182.539 530.195 182.736C540.633 186.206 546.888 188.286 557.252 190.153C553.808 198.843 551.939 204.971 551.278 211.557C550.374 220.577 552.446 229.786 556.94 237.659C561.1 244.948 566.161 249.436 574.9 253.911C589.781 260.378 597.604 261.278 610.731 258.555C622.479 254.846 628.523 250.728 632.321 243.617C636.193 236.367 637.574 227.088 633.511 219.942C628.268 210.721 616.468 205.792 606.109 208.07C603.444 208.656 600.866 209.727 597.896 211.265C595.061 213.504 594.151 215.043 593.083 218.021C592.796 222.669 593.272 224.218 594.687 226.043C594.417 223.056 594.681 221.394 595.757 218.443C596.992 215.991 598.568 214.873 601.64 212.954C604.25 211.886 605.785 211.567 608.592 211.265C610.893 211.092 612.481 211.119 615.544 211.265C618.932 211.82 620.719 212.532 623.031 214.643C626.198 217.533 627.037 219.551 627.977 221.808C628.259 222.484 628.549 223.182 628.914 223.932C630.513 228.216 630.221 230.865 628.914 235.755C625.506 243.826 622.381 246.59 615.544 249.688C610.522 252.351 607.468 253.066 601.64 253.066C595.642 253.259 592.247 252.706 586.131 250.533C579.312 247.957 576.433 245.671 571.691 241.244C566.575 236.526 565.236 233.705 563.67 228.577C561.453 221.342 561.091 217.368 562.065 210.42C562.915 202.415 564.746 198.567 570.087 192.687C587.947 195.886 597.431 196.8 613.94 197.753H652.98C676.935 194.352 686.369 192.283 700.041 188.464C719.065 193.014 729.723 195.183 748.707 197.753C768.679 199.213 779.536 199.124 798.443 197.753C813.584 195.849 821.667 194.759 833.739 192.687C840.952 200.883 842.619 206.563 841.761 218.443C840.239 230.596 837.393 236.213 828.926 244.199C820.604 250.33 815.382 251.517 805.93 253.066C792.259 253.722 786.961 250.215 778.656 242.088C778.014 241.362 777.448 240.659 776.95 239.975C769.311 229.494 778.587 212.576 791.49 211.265C799.714 210.206 802.071 212.98 805.93 218.443C807.757 221.716 807.684 222.837 807.574 224.523L807.574 224.526C807.56 224.74 807.545 224.962 807.534 225.199C809.991 220.082 807.827 213.421 803.148 210.206C802.85 210.001 802.53 209.792 802.186 209.576C802.04 209.506 801.895 209.437 801.753 209.371C795.36 206.392 787.743 206.92 781.211 209.58C779.548 210.257 778.096 211.066 776.516 212.109C775.488 212.989 774.608 213.77 773.829 214.506C769.781 218.329 767.435 223.758 767.068 229.314C766.692 235.014 768.357 240.729 771.774 245.306C772.222 245.906 772.698 246.499 773.216 247.1C775.287 249.502 777.787 251.501 780.476 253.182C781.86 254.047 783.136 254.766 784.417 255.397C788.951 257.631 793.987 258.631 799.017 259.134C804.133 259.646 808.428 259.568 814.487 258.555C825.741 256.451 830.197 253.604 836.948 248.844C840.826 245.444 843.435 242.533 845.556 239.218C849.953 232.344 851.752 224.072 851.798 215.912C851.82 211.932 851.507 207.965 850.852 202.82C849.783 198.458 846.702 191.117 846.12 190.589C847.883 190.442 877.622 182.414 895.24 171.575C901.765 173.598 905.392 174.097 911.818 174.108C922.052 172.833 926.591 170.934 933.21 166.086C938.035 162.005 939.905 159.167 942.836 153.841H1345.53C1351.44 159.341 1353.78 162.396 1355.69 167.775C1356 173.604 1355.01 176.354 1351.42 180.442C1359.39 178.741 1362.72 177.371 1366.39 174.108C1370.11 168.447 1367.81 160.726 1363.3 155.667C1363.26 155.621 1363.22 155.576 1363.18 155.53C1369.84 156.924 1373 157.438 1377.09 157.641C1390.94 155.42 1396.84 153.455 1406.5 149.618C1396.33 144.965 1390.48 143.102 1379.76 141.174C1373.03 141.28 1369.32 141.628 1363.18 142.863C1363.97 141.696 1364.64 140.643 1365.21 139.628C1368.62 133.611 1367.12 126.603 1362.65 121.329C1362.57 121.275 1362.49 121.22 1362.41 121.165L1362.34 121.113L1362.32 121.103C1360.12 119.575 1357.44 117.717 1351.42 117.529C1354.04 120.116 1354.57 121.581 1355.52 124.222C1355.58 124.38 1355.63 124.541 1355.69 124.707C1356.53 127.403 1356.44 128.875 1355.69 131.462C1352.53 137.148 1350.52 139.892 1346.6 144.129H1251.41C1257.66 139.595 1260.18 136.806 1263.18 131.462C1266.47 125.327 1267.18 122.374 1267.45 117.529C1267.23 111.403 1266.2 108.086 1263.18 102.328C1258.67 96.9534 1254.94 93.4457 1249.57 89.862C1243.87 86.0617 1237.46 83.352 1230.74 82.0208C1228.12 81.5021 1225.64 81.1559 1222.98 80.9012C1217.71 80.3962 1212.39 80.603 1207.15 81.3628C1198.55 82.6089 1193.09 84.1279 1186.17 87.1275C1179.52 90.4576 1176.23 92.8669 1172.36 95.7085C1171.33 96.468 1170.25 97.2585 1169.05 98.1057C1162.64 104.493 1159.33 108.015 1154.08 114.151C1148.83 120.245 1145.69 123.499 1139.64 128.929C1131.66 134.901 1126.32 137.522 1115.57 141.174C1111.28 142.676 1108.95 143.294 1104.88 144.129H1074.39C1092.94 137.701 1102.25 133.001 1115.57 121.329C1127.65 111.022 1133.05 105.092 1136.97 93.8833C1139.71 86.397 1140.68 80.7352 1140.6 74.0174C1140.49 65.8714 1138.61 57.6692 1134.13 50.8612C1131.75 47.236 1129 44.0364 1125.77 40.6899C1118.84 33.5047 1110.71 27.3449 1101.36 23.854C1094.81 21.4097 1088.8 20.2378 1080.28 19.5698C1062.25 19.9892 1054.17 21.9428 1042.31 27.5923C1026.09 38.7451 1022.01 45.8384 1019.31 59.26C1021.58 74.4199 1024.66 81.2875 1035.36 88.8165C1051.18 97.3352 1059.7 98.581 1074.39 95.9945C1088.06 91.7346 1094.01 88.1521 1099 77.8384C1100.48 73.7993 1101.42 70.422 1101.51 67.1575C1101.71 60.4347 1097.07 54.8072 1092.77 49.5893L1092.36 49.0886L1092.04 48.7041C1092.72 50.0429 1093.37 51.1759 1093.96 52.204C1094.99 53.9919 1095.83 55.4629 1096.32 57.1488C1099.59 64.8361 1098.77 69.4002 1095.79 77.8384C1090.04 85.6045 1086.12 88.3384 1078.14 90.9277C1068.47 92.913 1061.88 93.8883 1056.21 91.7721C1041.91 88.0327 1036.45 83.8304 1030.01 73.616C1025.21 61.6407 1025.92 54.4355 1034.82 43.6373C1042.87 33.5695 1050.59 31.5612 1063.12 28.3023L1063.15 28.2956C1064.02 28.0683 1064.92 27.8349 1065.84 27.5923C1080.77 26.2524 1087.81 27.5 1099 31.8147C1111.08 38.1899 1116.04 42.5788 1123.06 51.2375C1129.5 63.6676 1131.37 70.5357 1129.48 82.483C1121 109.205 1110.14 119.072 1084.56 131.462C1064.5 138.731 1052.59 141.282 1030.01 142.863C989.784 142.274 965.39 137.428 939.628 125.129C928.859 115.568 921.703 112.616 907.54 110.351C906.193 110.279 904.969 110.219 903.825 110.172C895.285 109.821 886.777 111.542 878.914 114.894C867.422 119.793 860.423 124.922 851.387 133.574L850.467 134.379C839.25 144.202 832.683 149.952 820.904 158.485C810.756 164.796 803.979 167.239 789.351 169.041L737.477 175.375C766.781 170.071 778.908 162.858 798.443 147.93C815.761 134.125 833.396 116.675 842.922 107.25C846.508 103.701 848.945 101.29 849.783 100.639C866.316 84.0737 878.053 75.7279 897.318 66.221C904.057 62.8959 911.237 60.475 918.666 59.349C938.11 56.4019 952.244 57.7096 974.924 61.3712C970.613 57.4179 966.437 55.2889 955.671 51.6598C947.265 50.1604 942.598 49.9121 934.28 49.5486C923.241 50.3672 917.975 50.9938 910.749 52.5042C889.871 58.7929 880.19 64.2749 864.222 75.3049C851.12 85.7626 844.509 91.6849 833.739 102.328L809.139 129.351C799.214 138.799 793.389 143.988 782.399 152.996C768.072 163.379 759.984 167.13 745.498 171.575C759.805 162.374 767.459 156.945 779.725 146.241C791.215 134.725 797.261 127.989 804.86 113.728C811.707 101.586 814.552 94.2993 817.695 80.3718C820.323 60.2143 817.137 50.1027 809.139 32.6591C801.798 20.5116 794.786 14.2189 781.24 7.32038C776.027 4.6659 770.482 2.68068 764.755 1.49049C758.445 0.179329 753.426 -0.261323 746.568 0.146982L739.77 1.10111C728.345 2.70485 717.089 5.97961 707.461 12.3382C705.454 13.6637 703.602 14.9884 702.18 16.1919C696.94 12.2147 693.16 9.58716 687.596 6.82838C682.795 4.44765 677.651 2.79431 672.365 1.91661C667.861 1.16896 663.814 0.813421 659.119 0.539437C653.967 0.23873 648.786 0.356144 643.677 1.0908C636.419 2.1346 631.756 3.38421 625.705 5.63605C614.863 11.0291 608.345 15.7554 601.701 23.105C595.982 29.4311 591.734 36.9924 589.082 45.0971C585.642 55.6076 584.411 65.2935 586.666 80.3718C594.543 112.977 603.343 125.129 625.171 146.241C638.43 159.065 643.311 163.293 658.328 171.575C647.288 168.124 639.278 164.551 633.228 161.32C624.353 156.58 616.57 150.063 609.183 143.232C589.168 124.725 577.717 112.554 562.395 96.2682C559.909 93.626 557.321 90.8755 554.578 87.972C535.109 70.8291 523.34 64.3336 506.712 57.3647C500.871 54.9164 494.771 53.0932 488.52 52.0755C479.88 50.6689 473.46 50.2357 464.733 50.8153C446.272 52.2215 439.043 54.7588 428.367 60.5267C441.022 58.2707 448.709 57.4906 464.733 57.9933C478.558 57.8909 485.392 58.772 495.751 62.2156C525.064 73.8871 536.518 83.1791 554.578 101.061C578.972 126.638 593.297 139.142 620.357 158.908C635.9 169.216 656.914 174.308 666.505 175.336C660.595 174.724 653.188 173.875 645.23 172.963L645.227 172.963C633.38 171.605 620.309 170.106 609.127 169.041C600.514 167.068 595.604 165.452 586.666 161.441C572.006 152.295 565.809 146.241 552.974 133.574C536.04 120.079 527.547 114.851 515.004 111.617C511.639 111.014 508.92 110.609 506.005 110.346C499.207 109.732 492.308 110.366 485.777 112.349C480.982 113.805 477.615 115.396 473.29 117.529C471.773 118.815 470.523 119.779 469.415 120.634L469.415 120.634C467.662 121.986 466.265 123.063 464.733 124.707C449.186 131.631 439.962 134.634 422.485 138.218C413.913 140.36 408.419 141.115 397.35 141.596C384.808 142.44 377.689 142.539 364.727 141.596C341.314 139.386 332.034 136.682 318.735 130.618C296.291 120.963 290.069 112.715 279.696 97.6834C274.388 88.3013 272.688 81.4697 273.285 73.1808C273.898 64.6746 277.037 56.4215 282.195 49.6299C286.609 43.8181 291.579 39.5963 298.336 35.4178C304.961 31.3203 312.347 28.407 320.081 27.4801C328.349 26.4894 335.349 27.2774 345.475 29.7035C362.947 36.1489 368.166 41.0489 373.819 50.8153C375.836 57.1673 376.198 60.4579 375.958 66.0158C375.138 68.4871 374.356 70.5969 373.508 72.5034C369.366 81.8133 360.473 88.4622 350.602 90.9895C344.117 92.6498 338.807 92.1677 331.57 91.3499C325.81 90.4875 321.917 88.9466 318.638 86.6631C310.859 81.2457 304.505 71.8613 306.983 62.7115C307.378 61.2543 307.921 59.7152 308.574 57.9933C309.723 55.2129 310.841 53.6334 312.853 50.8153C305.868 53.9814 302.384 61.9804 302.824 69.6366C302.837 69.8738 302.853 70.1114 302.871 70.3499C303.19 74.5106 304.547 78.5656 306.856 82.0414C307.816 83.4876 308.797 84.7256 309.872 85.8618C313.844 90.063 319.224 92.6705 324.76 94.3393C326.841 94.9667 328.95 95.4741 331.57 95.9945C336.301 96.4419 339.828 96.6211 343.314 96.5767C349.734 96.495 357.085 94.7908 362.864 91.9926C371.216 87.9487 376.946 81.2837 380.611 72.759C380.841 72.2246 381.072 71.6677 381.306 71.0826C381.343 70.9433 381.379 70.8052 381.415 70.6681C381.429 70.6136 381.442 70.5593 381.456 70.5051C384.181 59.7373 380.62 48.5069 374.888 38.9927C370.725 34.0132 367.263 31.2392 358.845 26.3256C352.349 23.4075 348.001 22.0273 339.057 19.9921C332.766 19.2155 328.225 19.0822 323.44 19.2712C316.39 19.5497 309.388 20.853 302.754 23.2545C296.316 25.585 292.133 27.8385 287.717 31.3924C281.919 35.6193 278.15 38.9319 274.496 43.1162C270.217 48.0171 266.795 53.685 264.761 59.8655C263.408 63.9764 262.781 67.7333 262.582 72.7715C263.306 85.3467 264.385 91.5322 268.465 99.7946C276.467 111.899 281.111 117.625 289.857 124.707C304.588 134.459 313.256 138.8 329.431 144.552H296.274C284.678 141.014 278.579 138.351 268.465 132.307C258.94 124.963 254.13 120.289 247.073 110.351C241.055 103.876 236.726 99.7622 231.894 95.8732C226.151 91.2514 219.638 87.6257 212.646 85.2915C207.58 83.6005 202.965 82.4859 197.707 81.6506C190.742 80.5443 183.623 80.6658 176.661 81.7852C166.355 83.442 159.391 85.7477 151.346 91.3499C144.846 97.2505 140.978 101.526 138.737 106.467C136.183 112.098 136.166 118.599 137.525 124.631C138.634 129.549 140.617 133.002 144.394 136.951L154.02 144.552H59.3618C56.3053 142.12 54.2279 140.026 52.6605 137.847C48.4758 132.031 46.8266 123.458 51.8747 118.373C49.1597 118.514 47.6374 118.749 44.9224 119.64C39.536 121.941 35.4709 128.236 37.1046 133.861C37.1982 134.183 37.3082 134.509 37.4354 134.84C38.6716 138.061 39.3729 139.746 40.6441 142.44C33.1427 141.268 29.0656 141.176 21.9264 141.596C12.2826 144.308 7.4991 146.069 0 149.618ZM192.525 144.129H274.883C270.569 141.959 267.447 140.266 264.072 138.253C259.468 135.506 255.194 132.233 251.298 128.549C245.157 122.741 240.887 118.034 234.773 110.773C223.999 100.342 216.707 96.7954 203.221 91.3498C189.045 88.2951 182.435 88.7864 171.668 91.3498C163.918 93.7874 156.469 97.1832 150.276 106.55C144.089 117.252 145.531 123.602 151.881 131.04C159.558 137.904 164.391 140.114 173.807 141.596C184.425 140.904 191.022 137.852 195.199 132.729C200.309 126.446 201.782 123.632 203.221 119.217C204.616 120.712 205.019 122.01 205.19 123.802C205.38 125.797 205.132 127.808 204.682 129.761C203.729 133.9 201.673 137.782 198.366 140.447C196.255 142.148 194.601 143.136 192.525 144.129ZM1127.65 143.324H1210.01C1207.91 142.338 1206.25 141.356 1204.12 139.656C1200.85 137.053 1198.8 133.248 1197.85 129.18C1197.4 127.247 1197.15 125.254 1197.34 123.278C1197.52 121.521 1197.92 120.246 1199.31 118.777C1200.75 123.127 1202.22 125.9 1207.33 132.091C1209.87 135.154 1213.29 137.466 1217.97 138.962C1224.9 141.18 1232.59 140.921 1239.29 138.085C1243.04 136.495 1246.41 134.159 1250.65 130.427C1257 123.098 1258.44 116.841 1252.26 106.296C1246.06 97.0663 1238.61 93.7203 1230.86 91.3184C1222.46 89.3466 1216.59 88.619 1207.67 89.8269C1202.07 90.5855 1196.64 92.2938 1191.46 94.5673C1182.57 98.4749 1176.24 102.362 1167.76 110.456C1163.73 115.177 1160.49 118.802 1157 122.367C1149.52 129.99 1140.92 136.494 1131.44 141.407C1130.26 142.016 1129.02 142.646 1127.65 143.324ZM702.18 178.753C648.715 156.775 620.776 136.743 604.259 96.2091C596.776 77.844 592.763 56.3846 601.842 38.7541C605.968 30.7427 612.189 24.6431 621.125 19.3814C639.551 8.53135 663.049 3.416 682.304 12.7164C686.719 14.849 690.881 17.5602 695.763 20.8367C693.416 24.1505 691.665 27.1213 690.294 30.0789C683.867 43.9454 684.048 61.7186 693.323 73.8659C694.59 75.5249 696.078 77.0952 697.902 78.683C694.836 81.4108 691.798 82.9283 686.732 84.0711C681.409 85.2717 675.813 85.7747 670.534 84.3984C664.168 82.739 659.665 78.9748 653.514 71.9272C654.802 71.4151 655.966 70.9161 657.022 70.4078C666.316 65.9321 667.413 50.7689 657.948 46.6673C657.473 46.4616 656.973 46.2673 656.447 46.0836C652.146 44.5835 646.895 44.4975 642.625 46.0821C632.562 49.8166 632.877 66.5197 642.91 70.3336C645.059 71.1506 647.643 71.6475 650.84 71.9272C656.633 79.8712 661.328 83.9218 667.44 86.1324C674.604 88.7234 682.561 88.3264 689.936 86.4157C694.204 85.3097 697.655 83.7741 701.646 81.2164C709.928 85.6413 714.579 88.1035 724.642 88.3944C729.489 88.0437 733.116 87.5059 736.312 86.5285C743.664 84.2804 748.914 78.0821 753.52 71.9272C758.74 70.9161 762.503 69.8332 765.183 67.9952C771.591 63.6007 771.494 52.3448 764.98 48.1093C764.786 47.9832 764.587 47.8614 764.383 47.7436C757.856 43.9769 747.528 44.0672 741.534 48.6355C735.062 53.5686 735.881 63.6129 742.658 68.1182C744.609 69.4155 747.11 70.6178 750.312 71.9272C747.495 76.3745 743.849 80.3916 739.092 82.6457C735.16 84.5093 731.196 85.4848 724.642 85.861C717.021 85.4762 712.804 83.9642 705.389 78.683C711.54 72.2487 714.622 67.3844 716.607 60.1784C717.993 55.1444 718.429 49.8679 717.981 44.6658C717.257 36.2657 714.642 29.9626 706.459 20.8367C711.034 17.5219 715.073 14.9635 719.72 12.9098C736.531 5.48023 756.289 6.40841 773.469 12.9393C783.857 16.8882 791.109 22.2077 796.268 29.3732C811.9 51.0827 805.573 81.533 794.429 105.853C778.26 141.14 754.541 161.078 702.18 178.753ZM701.646 25.4813C694.218 34.4123 689.658 41.4137 690.415 52.5044C691.066 62.0444 695.463 69.2882 701.646 75.3051C704.191 72.6361 706.135 70.2587 707.699 67.7735C713.478 58.5905 714.189 46.4373 709.326 36.738C707.456 33.0089 704.942 29.6363 701.646 25.4813ZM904.537 165.937C906.42 166.555 908.544 167.252 911.818 166.541C925.708 163.098 928.457 158.332 932.593 151.164C932.795 150.814 933 150.459 933.21 150.098C936.325 142.08 935.535 137.957 930.536 131.124C925.263 125.352 921.306 123.174 913.423 120.162C904.326 118.572 899.442 118.288 892.566 119.74C879.492 122.306 874.339 126.285 866.647 132.226C865.705 132.953 864.725 133.71 863.687 134.497C859.108 138.105 855.407 141.053 852.159 143.64L852.152 143.645L852.152 143.646C846.076 148.485 841.586 152.061 835.894 156.337C831.287 159.798 826.359 162.84 821.07 165.126C814.169 168.108 808.274 169.987 801.117 171.601C818.142 173.994 826.91 176.586 838.017 182.985C860.354 180.324 890.962 169.914 888.822 166.541C888.422 165.909 888.059 165.348 887.723 164.828C886.268 162.578 885.325 161.119 884.009 158.109C886.025 158.779 887.298 159.593 889.073 160.728L889.074 160.728C890.143 161.412 891.395 162.212 893.101 163.168C902.425 158.084 905.693 153.848 909.144 144.616C912.282 135.318 910.469 129.18 907.54 121.005C911.318 123.845 913.631 126.347 915.144 130.1C917.345 135.561 917.023 141.924 915.664 147.653C914.493 152.589 912.199 157.031 908.846 160.838C907.425 162.451 905.872 163.936 903.797 165.698C903.909 165.733 904.022 165.769 904.135 165.806C904.268 165.849 904.402 165.892 904.537 165.937ZM972.785 144.616H946.045V134.497C953.902 138.335 959.839 140.553 972.785 144.616ZM777.051 189.731C795.599 189.527 805.591 188.526 823.043 185.936C811.894 180.992 801.995 179.458 777.051 179.19C759.02 180.432 747.918 181.685 726.781 184.671C741.864 188.244 752.242 189.573 777.051 189.731ZM491.473 166.508C494.747 167.22 496.872 166.522 498.754 165.903C499.005 165.82 499.251 165.739 499.495 165.663C497.421 163.901 495.869 162.415 494.449 160.801C491.092 156.986 488.798 152.535 487.627 147.591C486.268 141.855 485.947 135.485 488.147 130.017C489.659 126.257 491.972 123.751 495.751 120.906C492.823 129.093 491.009 135.24 494.147 144.552C497.598 153.797 500.866 158.039 510.19 163.13C511.896 162.173 513.148 161.372 514.216 160.687L514.217 160.687L514.218 160.686C515.994 159.549 517.266 158.735 519.282 158.063C518.116 160.736 517.242 161.749 515.845 163.369C515.303 163.998 514.682 164.719 513.934 165.663C511.26 169.041 542.937 180.31 565.274 182.975C576.381 176.567 585.149 173.971 602.175 171.575C592.469 169.383 584.526 167.352 574.365 161.441C564.817 154.489 559.468 150.222 551.139 143.579L551.132 143.573L551.11 143.556L551.088 143.538C547.851 140.956 544.163 138.015 539.604 134.418C538.567 133.63 537.586 132.872 536.644 132.143C528.952 126.194 523.8 122.21 510.725 119.64C503.849 118.186 498.965 118.47 489.868 120.062C481.985 123.079 478.028 125.26 472.755 131.04C472.226 131.765 471.742 132.45 471.305 133.105C464.706 143.007 471.223 157.686 481.815 163.107C484.288 164.373 487.402 165.497 491.473 166.508ZM457.246 144.552H430.507C443.452 140.482 449.389 138.261 457.246 134.418V144.552ZM580.248 185.931C597.7 188.524 607.693 189.527 626.24 189.731C651.049 189.573 661.427 188.242 676.51 184.664C655.373 181.674 644.271 180.419 626.24 179.175C601.297 179.443 591.397 180.979 580.248 185.931Z\" fill=\"black\"/>\n    </svg>\n    \n  )\n  return (\n    <div className={styles.container}>\n        <Divider/>\n        {/* <Divider1/> */}\n      <h2 className={styles.title}>{children}</h2>\n      {/* <Divider style={{transform:\"rotate(180deg)\"}}/> */}\n    </div>\n  )\n}\n\nexport default TextDivider\n","import React from \"react\"\nimport styles from \"../styles/ProductList.module.css\"\nimport ProductCard from \"./ProductCard\"\nimport Text from './TextDivider'\n\n\nfunction ProductList({ products }) {\n  const isBrowser = typeof window !== \"undefined\"\n\n  const Wave = () => {\n    return (\n      <div>\n        <svg\n          className={styles.wave}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 1440 320\"\n        >\n          <path\n            fill=\"#f9090a\"\n            fillOpacity=\"1\"\n            d=\"M0,64L60,53.3C120,43,240,21,360,32C480,43,600,85,720,96C840,107,960,85,1080,85.3C1200,85,1320,107,1380,117.3L1440,128L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"\n          ></path>\n        </svg>\n\n        <svg className={styles.wave1} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n          <path\n            fill=\"#f9090a\"\n            fillOpacity=\"1\"\n            d=\"M0,128L40,149.3C80,171,160,213,240,213.3C320,213,400,171,480,133.3C560,96,640,64,720,85.3C800,107,880,181,960,213.3C1040,245,1120,235,1200,213.3C1280,192,1360,160,1400,144L1440,128L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\"\n          ></path>\n        </svg>\n\n        <svg\n          className={styles.wave2}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 1440 320\"\n        >\n          <path\n            fill=\"#f9090a\"\n            fillOpacity=\"1\"\n            d=\"M0,224L40,192C80,160,160,96,240,64C320,32,400,32,480,69.3C560,107,640,181,720,197.3C800,213,880,171,960,138.7C1040,107,1120,85,1200,90.7C1280,96,1360,128,1400,144L1440,160L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z\"\n          ></path>\n        </svg>\n      </div>\n    )\n  }\n\n  return (\n    <div id=\"OurProducts\" className={styles.container}>\n      <Text>Our Products</Text>\n      <div className={styles.products}>\n        <div style={{ position: \"relative\" }}>\n          <h3>Chicken</h3>\n          <ProductCard dir={1} productInfo={products.chicken} />\n          <div className={styles.smallScreen}>\n          <Wave />\n          </div>\n          {/* {isBrowser && window.innerWidth < 768 && <Wave />} */}\n        </div>\n        <div style={{ position: \"relative\" }}>\n          <h3>Mutton</h3>\n          <ProductCard\n         dir={-1}\n            circleStyle={{\n              background: `linear-gradient( to right, rgb(210 10 12) , rgb(76 14 16))`,\n            }}\n            productInfo={products.mutton}\n          />\n          <div className={styles.smallScreen}>\n          <Wave />\n          </div>\n          {/* {isBrowser && window.innerWidth < 768 && <Wave />} */}\n        </div>\n      </div>\n      <div className={styles.bigScreen}>\n          <Wave />\n          </div>\n      {/* {isBrowser && window.innerWidth > 768 && <Wave />} */}\n    </div>\n  )\n}\n\nexport default ProductList\n","import React from \"react\"\nimport styles from \"../styles/testimonialCard.module.css\"\nimport img from \"../images/gatsby-astronaut.png\"\n\nfunction TestimonialCard({details}) {\n  return (\n    <div className={styles.padding}>\n      <div className={styles.container}>\n        <div className={styles.imgContainer}>\n          <img src={details.src} />\n          <p>{details.imgTitle}</p>\n        </div>\n        <div className={styles.info}>\n          <h4>{details.title}</h4>\n         {details.info}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TestimonialCard\n","import React, { useState, useEffect } from \"react\"\nimport TestimonialCard from \"./TestimonialCard\"\nimport img from \"../images/gatsby-astronaut.png\"\nimport styles from \"../styles/testimonial.module.css\"\nimport Text from './TextDivider'\nimport { useTransition, useSpring, animated } from \"react-spring\"\nfunction Testimonial() {\n  const details = [\n    {\n      src: img,\n      imgTitle: \"This is an important person!!\",\n      title: \"Grand Opening 1!\",\n      info: (\n        <p>We had an openeing for something and a lot of people had fun!</p>\n      ),\n    },\n    {\n      src: img,\n      imgTitle: \"This is also an important person!!\",\n      title: \"Grand Opening 2!\",\n      info: (\n        <p>We had an openeing for something and a lot of people had fun!</p>\n      ),\n    },\n    {\n      src: img,\n      imgTitle: \"This is also an important person!!\",\n      title: \"Grand Opening 3!\",\n      info: (\n        <p>We had an openeing for something and a lot of people had fun!</p>\n      ),\n    },\n    {\n      src: img,\n      imgTitle: \"This is also an important person!!\",\n      title: \"Grand Opening 4!\",\n      info: (\n        <p>We had an openeing for something and a lot of people had fun!</p>\n      ),\n    },\n  ]\n  const [index, setIndex] = useState(0)\n  const [touchPos, setTouchPos] = useState({ start: 0, stop: 0 })\n\n  const props = useSpring({ transform: `translate3d(${index * -100}%,0,0)` })\n  useEffect(() => {\n    const handleTouchStart = e => {\n      console.log(\"STart\", e.changedTouches[0].clientX)\n      setTouchPos(state => {\n        return { ...state, start: e.changedTouches[0].clientX }\n      })\n    }\n    const handleTouchEnd = e => {\n      var TouchEnd = e.changedTouches[0].clientX\n      var distanceMoved = touchPos.start - TouchEnd\n      //If enough distance is moved to be registered as a touch stroke\n      if (Math.abs(distanceMoved) > 10) {\n        //If difference is -ve its a right stroke\n        if (distanceMoved < 0) {\n          setIndex(() =>\n            ((index - 1) < 0 ? details.length - 1 : index - 1)\n          )\n        } else {\n          setIndex(() => setIndex((index + 1) % details.length))\n        }\n      }\n      setTouchPos(state => {\n        return { ...state, stop: e.changedTouches[0].clientX }\n      })\n    }\n    const timer = setInterval(() => {\n      setIndex(() => setIndex((index + 1) % details.length))\n    }, 3000)\n    document\n      .querySelector(`.${styles.cardContainer}`)\n      .addEventListener(\"touchstart\", handleTouchStart)\n    document\n      .querySelector(`.${styles.cardContainer}`)\n      .addEventListener(\"touchend\", handleTouchEnd)\n    return () => {\n      clearInterval(timer)\n      document\n        .querySelector(`.${styles.cardContainer}`)\n        .removeEventListener(\"touchstart\", handleTouchStart)\n      document\n        .querySelector(`.${styles.cardContainer}`)\n        .removeEventListener(\"touchend\", handleTouchEnd)\n    }\n  }, [index])\n\n  return (\n    <div className={styles.container}>\n      <Text>Highlights</Text>\n      <div className={styles.padding}>\n        {\n          <animated.div className={styles.cardContainer} style={props}>\n            {details.map(item => {\n              return <TestimonialCard details={item} />\n            })}\n          </animated.div>\n        }\n      </div>\n      <ul className={styles.buttons}>\n        {details.map((item, i) => {\n          return (\n            <li\n              style={{\n                background: i == index ? \"white\" : \"rgb(255 255 255 / 21%)\",\n              }}\n              onClick={() => setIndex(i)}\n            ></li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default Testimonial\n","import React from \"react\"\nimport Showcase from \"../components/Showcase\"\nimport About from \"../components/About\"\nimport Intro from '../components/Intro'\nimport ProductList from \"../components/ProductList\"\nimport Testimonial from '../components/Testimonial'\n\nimport Layout from \"../components/layout\"\n\nconst IndexPage = () => {\n  const products = {\n    chicken: {\n      title: \"Biryani\",\n      info: \"Chicken\",\n      price: \"100\",\n      src: \"chicken\",\n      link: \"/chicken\",\n      num: 0,\n    },\n    mutton: {\n      title: \"Biryani\",\n      info: \"mutton\",\n      price: \"100\",\n      src: \"mutton\",\n      link: \"/mutton\",\n      num: 1,\n    },\n  }\n  return (\n    <Layout title=\"Home\">\n      <Showcase />\n      <About />\n      <Intro/>\n      <ProductList products={products} />\n      {/* <ProductCard productInfo={products.chicken} />\n        <ProductCard productInfo={products.mutton} /> */}\n      {/* <Products products={products} /> */}\n        <Testimonial/>\n    </Layout>\n  )\n}\nexport default IndexPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"about-module--container--17zLm\",\"outerborder\":\"about-module--outerborder--1x_PC\",\"middleBorder\":\"about-module--middleBorder--2zHUT\",\"innerBorder\":\"about-module--innerBorder--T4Fhd\",\"topLeft\":\"about-module--topLeft--GwaBg\",\"topRight\":\"about-module--topRight--1fm7I\",\"bottomLeft\":\"about-module--bottomLeft--2e-6J\",\"bottomRight\":\"about-module--bottomRight--19HyD\",\"centerTop\":\"about-module--centerTop--2Iumg\",\"centerBottom\":\"about-module--centerBottom--zeV24\",\"info\":\"about-module--info--2HsEq\",\"cardTitle\":\"about-module--cardTitle--2aBJH\",\"stackTop\":\"about-module--stackTop--1y-hc\",\"stackBottom\":\"about-module--stackBottom--3jA2p\",\"InfoBackgroundHeight\":\"about-module--InfoBackgroundHeight--2cO6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cauldron\":\"cauldron1-module--cauldron--11xh2\",\"Fire\":\"cauldron1-module--Fire--1Dzvc\",\"fire\":\"cauldron1-module--fire--2t_IH\",\"burn\":\"cauldron1-module--burn--3R7xc\",\"stick\":\"cauldron1-module--stick--2P8Lm\",\"move\":\"cauldron1-module--move--1PZUy\",\"smoke1\":\"cauldron1-module--smoke1--yXSnt\",\"rise1\":\"cauldron1-module--rise1--2_z7p\",\"smoke2\":\"cauldron1-module--smoke2--YRKu8\",\"rise2\":\"cauldron1-module--rise2--F3PKC\",\"smoke3\":\"cauldron1-module--smoke3--3lDjT\",\"rise3\":\"cauldron1-module--rise3--2oXs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"textDivider-module--container--1Fll7\",\"title\":\"textDivider-module--title--34qa2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"testimonial-module--container--3Ulmj\",\"padding\":\"testimonial-module--padding--1cO_0\",\"cardContainer\":\"testimonial-module--cardContainer--2x-_4\",\"buttons\":\"testimonial-module--buttons--2tU_L\"};","module.exports = __webpack_public_path__ + \"static/InfoBG-90aa6dea23e31ac34e64e845df76ffcb.jpg\";","module.exports = __webpack_public_path__ + \"static/txtBorder-ea5bde09040319348443cacc49834c26.jpg\";","module.exports = __webpack_public_path__ + \"static/gatsby-astronaut-6d91c86c0fde632ba4cd01062fd9ccfa.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"showcase-module--container--rU1ww\",\"image\":\"showcase-module--image--1ktjj\",\"info\":\"showcase-module--info--2LVWK\",\"left\":\"showcase-module--left--cLgX-\",\"leftBottom\":\"showcase-module--left-bottom--1DtTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"productCard-module--mainContainer--27JHN\",\"container\":\"productCard-module--container--m4MP3\",\"card\":\"productCard-module--card--IXHJB\",\"product\":\"productCard-module--product--uL9-C\",\"circle\":\"productCard-module--circle--17JGs\",\"img\":\"productCard-module--img--iBnba\",\"info\":\"productCard-module--info--1BKNW\",\"order\":\"productCard-module--order--30yGl\",\"wave\":\"productCard-module--wave--1qbPs\",\"flow\":\"productCard-module--flow--2xdCG\",\"wave1\":\"productCard-module--wave1--17YJ0\",\"flow1\":\"productCard-module--flow1--3lPJX\",\"wave2\":\"productCard-module--wave2--1Whp8\",\"flow2\":\"productCard-module--flow2--2GjS8\"};","module.exports = __webpack_public_path__ + \"static/corner-decoration-a2afd96fa7c83c97b44fcfbacc155bb5.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cauldron\":\"cauldron-module--cauldron--1eUjd\",\"Fire\":\"cauldron-module--Fire--3TQEz\",\"fire\":\"cauldron-module--fire--1KDjp\",\"burn\":\"cauldron-module--burn--1cNmj\",\"stick\":\"cauldron-module--stick--2q2m_\",\"move\":\"cauldron-module--move--qCH54\",\"smoke1\":\"cauldron-module--smoke1--3H0LC\",\"rise1\":\"cauldron-module--rise1--320pP\",\"smoke2\":\"cauldron-module--smoke2--2PJfZ\",\"rise2\":\"cauldron-module--rise2--2uM6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"intro-module--container--1VrEb\",\"info\":\"intro-module--info--c8x1q\",\"bg\":\"intro-module--bg--2AjMC\"};"],"sourceRoot":""}